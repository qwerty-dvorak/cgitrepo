{
  "nodes": [
    {
      "id": 0,
      "name": "FilterComp.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/components/filter/FilterComp.tsx",
      "content": "import React from \"react\";\n\ninterface Option {\n  id: string;\n  label: string;\n}\n\ninterface Props {\n  title: string;\n  options: Option[];\n  onSelectionChange: (selection: string[]) =\u003e void;\n  selectedOptions: string[];\n  isSlotCategory ?: boolean;\n  searchBar?: React.ReactNode;\n}\n\nconst FilterComp: React.FC\u003cProps\u003e = ({ title, options, onSelectionChange, selectedOptions }) =\u003e {\n  const handleCheckboxChange = (label: string) =\u003e {\n    const updatedSelection = selectedOptions.includes(label)\n      ? selectedOptions.filter(item =\u003e item !== label)\n      : [...selectedOptions, label];\n    onSelectionChange(updatedSelection);\n  };\n\n  return (\n    \u003cdiv className=\"w-full sm:w-[182px] dark:bg-none p-4 text-center\"\u003e\n      \u003ch6 className=\"[text-shadow:_0_1px_0_rgb(0_0_0_/_40%)] font-bold mb-2\"\u003e{title}\u003c/h6\u003e\n      \u003cdiv className={`${'isSlotCategory' ? 'grid grid-cols-2 gap-x-2 gap-y-2 sm:gap-x-2 gap-y-2' : ''}`}\u003e\n        {options.map((option) =\u003e (\n          \u003cdiv key={option.id} className=\"flex items-center mb-2\"\u003e\n            \u003cinput\n              id={`checkbox-${option.id}`}\n              type=\"checkbox\"\n              className=\"h-4 w-4 border-4 border-blue-300 accent-[#3BF4C7]\"\n              checked={selectedOptions.includes(option.label)}\n              onChange={() =\u003e handleCheckboxChange(option.label)}\n            /\u003e\n            \u003clabel\n              htmlFor={`checkbox-${option.id}`}\n              className=\"ml-2 block text-sm text-black dark:text-[#D5D5D5] [text-shadow:_0_1px_0_rgb(0_0_0_/_40%)]\"\n            \u003e\n              {option.label}\n            \u003c/label\u003e\n          \u003c/div\u003e\n        ))}\n      \u003c/div\u003e\n    \u003c/div\u003e\n  );\n};\n\nexport default FilterComp;\n",
      "dependencies": [
        "react"
      ]
    },
    {
      "id": 1,
      "name": "ForumPost.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/@protected_routes/forum/[id]/ForumPost.tsx",
      "content": "import React from 'react';\nimport TagContainer from \"@/app/components/forumpost/TagContainer\";\nimport CommentField from \"@/app/components/forumpost/CommentField\";\nimport CommentContainer from \"@/app/components/forumpost/CommentContainer\";\nimport { NumberOfComments } from \"@/app/components/forumpost/CommentContainer\";\nimport { VoteButtons } from \"@/app/components/common/Buttons\";\n\nimport { Prisma } from \"@prisma/client\";\nimport ForumPostGetPayload = Prisma.ForumPostGetPayload\n\nfunction ForumPost({ post }: {\n  post: ForumPostGetPayload\u003c{\n    include: {\n      author: {\n        select: {\n          name: true,\n        }\n      },\n      votes: true,\n      tags: true,\n      comments: {\n        include: {\n          author: true,\n        }\n      },\n    }\n  }\u003e\n}) {\n  const userVote = post.votes.length \u003e 0 ? post.votes[0].type : null;\n\n  return (\n    \u003cdiv className=\"transition-colors w-full h-full p-6 text-black dark:text-[#D5D5D5]\"\u003e\n      \u003cdiv className=\"bg-[#82BEE9] dark:bg-[#232530] p-4 md:p-10\"\u003e\n        \u003ch2 className=\"font-extrabold\"\u003e{post?.title}\u003c/h2\u003e\n        \u003chr className=\"border-0 h-px my-5 bg-black\" /\u003e\n        \u003ch6\u003e{post?.description}\u003c/h6\u003e\n        \u003ch6 className=\"text-right text-s font-normal text-white\"\u003eAuthor: {post.author.name?.slice(0, -10)}\u003c/h6\u003e\n        \u003cbr /\u003e\n        \u003cdiv className=\"sm:w-2/3 md:flex md:w-full md:justify-between\"\u003e\n          \u003cdiv\u003e\n            \u003cTagContainer tags={post.tags} /\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"hidden md:flex justify-center p-0.5 bg-white dark:bg-[#4F5159]\"\u003e\n            \u003cVoteButtons\n              postId={post.id}\n              initialUpvotes={post.upvoteCount}\n              initialDownvotes={post.downvoteCount}\n              initialUserVote={userVote === 'UPVOTE' ? 'up' : userVote === 'DOWNVOTE' ? 'down' : null}\n            /\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv className=\"flex md:hidden justify-center p-0.5 bg-white dark:bg-[#4F5159]\"\u003e\n          \u003cVoteButtons\n            postId={post.id}\n            initialUpvotes={post.upvoteCount}\n            initialDownvotes={post.downvoteCount}\n            initialUserVote={userVote === 'UPVOTE' ? 'up' : userVote === 'DOWNVOTE' ? 'down' : null}\n          /\u003e\n        \u003c/div\u003e\n\n        \u003cbr /\u003e\n        \u003cNumberOfComments commentArray={post.comments} /\u003e\n        \u003cCommentField forumPostId={post.id} /\u003e\n        \u003cCommentContainer comments={post.comments} /\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n  );\n}\n\nexport default ForumPost;\n",
      "dependencies": [
        "@/app/components/common/Buttons",
        "@prisma/client",
        "react",
        "@/app/components/forumpost/TagContainer",
        "@/app/components/forumpost/CommentField",
        "@/app/components/forumpost/CommentContainer"
      ]
    },
    {
      "id": 2,
      "name": "moderatorActions.ts",
      "category": "file",
      "path": "ExamCooker-2024/app/actions/moderatorActions.ts",
      "content": "\"use server\";\n\nimport { PrismaClient } from \"@prisma/client\";\nimport { auth } from \"../auth\";\nimport { revalidatePath } from \"next/cache\";\n\nconst prisma = new PrismaClient();\n\nexport async function fetchUnclearedItems() {\n    const session = await auth();\n\n    // @ts-ignore\n    if (session?.user?.role !== \"MODERATOR\") {\n        throw new Error(\"Access denied\");\n    }\n\n    const notes = await prisma.note.findMany({\n        where: { isClear: false },\n        orderBy: { createdAt: \"desc\" },\n    });\n    const pastPapers = await prisma.pastPaper.findMany({\n        where: { isClear: false },\n        orderBy: { createdAt: \"desc\" },\n    });\n\n    const totalUsers = await prisma.user.count();\n\n    return { notes, pastPapers, totalUsers };\n}\n\nexport async function approveItem(id: string, type: \"note\" | \"pastPaper\") {\n    const session = await auth();\n\n    // @ts-ignore\n    if (session?.user?.role !== \"MODERATOR\") {\n        throw new Error(\"Access denied\");\n    }\n\n    type === \"note\"\n        ? await prisma.note.update({ where: { id }, data: { isClear: true } })\n        : await prisma.pastPaper.update({\n              where: { id },\n              data: { isClear: true },\n          });\n\n    revalidatePath(\"/mod\");\n}\n\nexport async function renameItem(\n    id: string,\n    type: \"note\" | \"pastPaper\",\n    title: string\n) {\n    const session = await auth();\n\n    // @ts-ignore\n    if (session?.user?.role !== \"MODERATOR\") {\n        throw new Error(\"Access denied\");\n    }\n\n    if (type === \"note\") {\n        await prisma.note.update({ where: { id }, data: { title } });\n    }\n\n    if (type === \"pastPaper\") {\n        await prisma.pastPaper.update({ where: { id }, data: { title } });\n    }\n\n    revalidatePath(\"/mod\");\n}\n\nexport async function deleteItem(id: string, type: \"note\" | \"pastPaper\") {\n    const session = await auth();\n\n    // @ts-ignore\n    if (session?.user?.role !== \"MODERATOR\") {\n        throw new Error(\"Access denied\");\n    }\n\n    if (type === \"note\") {\n        await prisma.note.delete({ where: { id } });\n    }\n\n    if (type === \"pastPaper\") {\n        await prisma.pastPaper.delete({ where: { id } });\n    }\n    revalidatePath(\"/mod\");\n}\n",
      "dependencies": [
        "@prisma/client",
        "next/cache"
      ]
    },
    {
      "id": 3,
      "name": "viewHistory.ts",
      "category": "file",
      "path": "ExamCooker-2024/app/actions/viewHistory.ts",
      "content": "'use server'\n\n// todo delete this file\n\nimport { PrismaClient, Prisma } from '@prisma/client'\nimport { revalidatePath } from 'next/cache'\n\nconst prisma = new PrismaClient()\n\ntype ViewableItemType = 'pastPaper' | 'note' | 'forumPost' | 'subject'\n\nexport async function recordViewHistory(itemType: ViewableItemType, itemId: string, userId: string) {\n    try {\n        let whereClause: Prisma.ViewHistoryWhereUniqueInput\n\n        switch (itemType) {\n            case 'pastPaper':\n                whereClause = { userId_pastPaperId: { userId, pastPaperId: itemId } }\n                break\n            case 'note':\n                whereClause = { userId_noteId: { userId, noteId: itemId } }\n                break\n            case 'forumPost':\n                whereClause = { userId_forumPostId: { userId, forumPostId: itemId } }\n                break\n            case 'subject':\n                whereClause = { userId_subjectId: { userId, subjectId: itemId } }\n                break\n            default:\n                throw new Error('Invalid item type')\n        }\n\n        await prisma.viewHistory.upsert({\n            where: whereClause,\n            update: {\n                viewedAt: new Date(),\n            },\n            create: {\n                userId,\n                [`${itemType}Id`]: itemId,\n                viewedAt: new Date(),\n            },\n        })\n        revalidatePath('/')\n        return { success: true }\n    } catch (error) {\n        console.error('Failed to record view history:', error)\n        return { success: false, error: 'Failed to record view history' }\n    }\n}\n",
      "dependencies": [
        "@prisma/client",
        "next/cache"
      ]
    },
    {
      "id": 4,
      "name": "header.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/components/header.tsx",
      "content": "\"use client\";\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useSession } from \"next-auth/react\";\nimport Image from \"next/image\";\nimport profile from \"@/public/assets/Profile.svg\";\nimport { SignOut } from \"./sign-out\";\nimport ThemeToggleSwitch from \"./common/ThemeToggle\";\nimport TodoListDropdown from \"./TodoListModal\";\n\ninterface HeaderProps {\n  toggleTheme: () =\u003e void;\n  darkMode: boolean;\n}\n\nconst Header: React.FC\u003cHeaderProps\u003e = () =\u003e {\n  const { data: session } = useSession();\n  const [showOverlay, setShowOverlay] = useState(false);\n  const overlayRef = useRef\u003cHTMLDivElement\u003e(null);\n  const buttonRef = useRef\u003cHTMLButtonElement\u003e(null);\n\n  const handleClick = () =\u003e {\n    setShowOverlay(!showOverlay);\n  };\n\n  useEffect(() =\u003e {\n    const handleClickOutside = (event: MouseEvent) =\u003e {\n      if (\n        overlayRef.current \u0026\u0026\n        !overlayRef.current.contains(event.target as Node)\n      ) {\n        setShowOverlay(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () =\u003e {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n\n  return (\n    \u003cheader className=\"transition-colors bg-[#C2E6EC] dark:bg-[#0C1222] border-b border-b-[#82BEE9] dark:border-b-[#3BF4C7] flex flex-row-reverse\"\u003e\n      \u003cdiv className=\"flex items-center text-right m-2 space-x-4\"\u003e\n        \u003cdiv className=\"sm:w-[70vw]\"\u003e\n          \u003cTodoListDropdown buttonRef={buttonRef} /\u003e\n        \u003c/div\u003e\n        \u003cThemeToggleSwitch /\u003e\n        \u003cdiv className=\"hidden sm:flex sm:flex-col mr-4\"\u003e\n          \u003cp className=\"lg:text-base font-medium text-gray-900 dark:text-[#D5D5D5]\"\u003e\n            {session?.user?.name}\n          \u003c/p\u003e\n          \u003cp className=\"lg:text-sm text-gray-500 dark:text-gray-400\"\u003e\n            {session?.user?.email}\n          \u003c/p\u003e\n        \u003c/div\u003e\n        \u003cdiv className=\"relative\"\u003e\n          \u003cbutton\n            title=\"Profile\"\n            className=\"w-10 h-10 rounded-full overflow-hidden focus:outline-none focus:ring-2 focus:ring-offset-2 transition-all duration-300 ease-in-out\n                       bg-gradient-to-br from-blue-400 to-blue-600 hover:from-blue-500 hover:to-blue-700\n                       dark:from-blue-600 dark:to-blue-800 dark:hover:from-blue-700 dark:hover:to-blue-900\n                       focus:ring-blue-400 dark:focus:ring-blue-700 focus:ring-offset-white dark:focus:ring-offset-[#0C1222]\"\n            onClick={handleClick}\n          \u003e\n            \u003cImage\n              src={profile}\n              alt=\"Profile\"\n              width={24}\n              height={24}\n              className=\"m-auto text-white\"\n            /\u003e\n          \u003c/button\u003e\n          {showOverlay \u0026\u0026 (\n            \u003cdiv\n              ref={overlayRef}\n              className=\"absolute top-full right-0 mt-2 p-4 bg-white dark:bg-gray-800 shadow-lg rounded-lg z-10\"\n            \u003e\n              \u003cp className=\"mb-2 text-gray-900 dark:text-white\"\u003e\n                Name: \u003cbr /\u003e\n                {session?.user?.name}\n              \u003c/p\u003e\n              \u003cp className=\"mb-2 text-gray-600 dark:text-gray-300\"\u003e\n                Email:\n                \u003cbr /\u003e {session?.user?.email}\n              \u003c/p\u003e\n              \u003cSignOut\u003e\n                \u003cspan className=\"text-red-500 hover:underline dark:text-red-400\"\u003e\n                  Logout\n                \u003c/span\u003e\n              \u003c/SignOut\u003e\n            \u003c/div\u003e\n          )}\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/header\u003e\n  );\n};\n\nexport default Header;\n",
      "dependencies": [
        "next/image",
        "@/public/assets/Profile.svg",
        "react",
        "next-auth/react"
      ]
    },
    {
      "id": 5,
      "name": "sign-in.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/components/sign-in.tsx",
      "content": "\nimport { signIn } from \"@/app/auth\"\n\nexport function SignIn({ displayText }: { displayText: string }) {\n    return (\n        \u003cform\n            action={async () =\u003e {\n                \"use server\"\n                await signIn(\"google\")\n            }}\n        \u003e\n            \u003cdiv className=\"relative group\"\u003e\n                \u003cdiv className=\"absolute inset-0 bg-black dark:bg-[#3BF4C7]\" /\u003e\n                \u003cdiv className=\"absolute inset-0 blur-[75px] dark:lg:bg-none lg:dark:group-hover:bg-[#3BF4C7] transition dark:group-hover:duration-200 duration-1000\" /\u003e\n                \u003cbutton type=\"submit\" title=\"Login With Google\" className=\"dark:text-[#D5D5D5] dark:group-hover:text-[#3BF4C7] dark:group-hover:border-[#3BF4C7] dark:border-[#D5D5D5] dark:bg-[#0C1222] border-black border-2 relative px-4 py-2 text-lg bg-[#3BF4C7] text-black font-bold group-hover:-translate-x-1 group-hover:-translate-y-1 transition duration-150\"\u003e\n                    {displayText}\n                \u003c/button\u003e\n            \u003c/div\u003e\n\n        \u003c/form\u003e\n    )\n} \n",
      "dependencies": [
        "@/app/auth"
      ]
    },
    {
      "id": 6,
      "name": "toast.tsx",
      "category": "file",
      "path": "ExamCooker-2024/components/ui/toast.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof ToastPrimitives.Viewport\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof ToastPrimitives.Viewport\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  /\u003e\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border border-zinc-200 p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full dark:border-zinc-800\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-white text-zinc-950 dark:bg-zinc-950 dark:text-zinc-50\",\n        destructive:\n          \"destructive group border-red-500 bg-red-500 text-zinc-50 dark:border-red-900 dark:bg-red-900 dark:text-zinc-50\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof ToastPrimitives.Root\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof ToastPrimitives.Root\u003e \u0026\n    VariantProps\u003ctypeof toastVariants\u003e\n\u003e(({ className, variant, ...props }, ref) =\u003e {\n  return (\n    \u003cToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    /\u003e\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof ToastPrimitives.Action\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof ToastPrimitives.Action\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border border-zinc-200 bg-transparent px-3 text-sm font-medium ring-offset-white transition-colors hover:bg-zinc-100 focus:outline-none focus:ring-2 focus:ring-zinc-950 focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-zinc-100/40 group-[.destructive]:hover:border-red-500/30 group-[.destructive]:hover:bg-red-500 group-[.destructive]:hover:text-zinc-50 group-[.destructive]:focus:ring-red-500 dark:border-zinc-800 dark:ring-offset-zinc-950 dark:hover:bg-zinc-800 dark:focus:ring-zinc-300 dark:group-[.destructive]:border-zinc-800/40 dark:group-[.destructive]:hover:border-red-900/30 dark:group-[.destructive]:hover:bg-red-900 dark:group-[.destructive]:hover:text-zinc-50 dark:group-[.destructive]:focus:ring-red-900\",\n      className\n    )}\n    {...props}\n  /\u003e\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof ToastPrimitives.Close\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof ToastPrimitives.Close\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-zinc-950/50 opacity-0 transition-opacity hover:text-zinc-950 focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600 dark:text-zinc-50/50 dark:hover:text-zinc-50\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  \u003e\n    \u003cX className=\"h-4 w-4\" /\u003e\n  \u003c/ToastPrimitives.Close\u003e\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof ToastPrimitives.Title\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof ToastPrimitives.Title\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  /\u003e\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof ToastPrimitives.Description\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof ToastPrimitives.Description\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  /\u003e\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef\u003ctypeof Toast\u003e\n\ntype ToastActionElement = React.ReactElement\u003ctypeof ToastAction\u003e\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n",
      "dependencies": [
        "react",
        "@radix-ui/react-toast",
        "class-variance-authority",
        "lucide-react",
        "@/lib/utils"
      ]
    },
    {
      "id": 7,
      "name": "middleware.ts",
      "category": "file",
      "path": "ExamCooker-2024/middleware.ts",
      "content": "import { NextRequest, NextResponse } from \"next/server\";\nimport { Ratelimit } from \"@upstash/ratelimit\";\nimport { Redis } from \"@upstash/redis\";\n\nconst redis = new Redis({\n    url: process.env.UPSTASH_REDIS_REST_URL,\n    token: process.env.UPSTASH_REDIS_REST_TOKEN,\n});\n\nconst ratelimit = new Ratelimit({\n    redis: redis,\n    limiter: Ratelimit.slidingWindow(5, \"10 s\"),\n});\n\nexport default async function middleware(\n    request: NextRequest\n): Promise\u003cResponse | undefined\u003e {\n    if (request.url.endsWith(\"/create\")) {\n        const ip = request.ip ?? \"127.0.0.1\";\n        const {success} = await ratelimit.limit(\n            ip\n        );\n        if (!success) return NextResponse.redirect(new URL(\"/blocked\", request.url))\n    }\n\n    const requestHeaders = new Headers(request.headers);\n    requestHeaders.set('x-url', request.url);\n\n    return NextResponse.next({\n        request: {\n            headers: requestHeaders,\n        }\n    });\n\n}\n",
      "dependencies": [
        "next/server",
        "@upstash/ratelimit",
        "@upstash/redis"
      ]
    },
    {
      "id": 8,
      "name": "page.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/@protected_routes/resources/[id]/page.tsx",
      "content": "import {PrismaClient} from '@prisma/client';\nimport ModuleDropdown from '../../../components/ModuleDropdown';\nimport {auth} from '@/app/auth';\nimport {notFound} from \"next/navigation\";\n\nconst prisma = new PrismaClient();\n\nasync function fetchSubject(id: string) {\n    return prisma.subject.findUnique({\n        where: {id},\n        include: {modules: true},\n    });\n}\n\nexport default async function SubjectDetailPage({ params }: { params: { id: string } }) {\n    const subject = await fetchSubject(params.id);\n    //Since the Subject datatype only has a \"name\" field, I assume that the name has to be something like \"COURSECODE - COURSENAME\" and \n    //am hence, using the '-' character to split the string\n    if (!subject) {\n        return notFound();\n    }\n    let [courseCode, courseName] = subject.name.split('-');\n\n    courseName = courseName ? courseName : \"Subject Name\";\n\n\n    const session = await auth();\n    const userId = session?.user?.id;\n\n    if (userId) {\n        await prisma.viewHistory.upsert({\n            where: {\n                userId_subjectId: {\n                    userId,\n                    subjectId: subject.id,\n                },\n            },\n            update: {\n                viewedAt: new Date(),\n                count: {\n                    increment: 1,\n                },\n            },\n            create: {\n                userId,\n                subjectId: subject.id,\n                viewedAt: new Date(),\n            },\n        });\n    }\n    return (\n        \u003cdiv className=\"transition-colors container mx-auto p-4 text-black dark:text-[#D5D5D5]\"\u003e\n            \u003ch2\u003e{courseName}\u003c/h2\u003e\n            \u003cbr /\u003e\n            \u003ch3\u003eCourse Code: {courseCode}\u003c/h3\u003e\n            \u003cbr /\u003e\n            \u003cbr /\u003e\n            \u003cdiv className=\"space-y-6\"\u003e\n                {subject.modules.map((module) =\u003e (\n                    \u003cModuleDropdown key={module.id} module={module} /\u003e\n                ))}\n            \u003c/div\u003e\n        \u003c/div\u003e\n    );\n}\n",
      "dependencies": [
        "@prisma/client",
        "@/app/auth",
        "next/navigation"
      ]
    },
    {
      "id": 9,
      "name": "DeleteButton.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/components/DeleteButton.tsx",
      "content": "\"use client\";\nimport React from 'react'\nimport { deleteItem } from '../actions/moderatorActions'\n\n\nconst DeleteButton = ({itemID, activeTab} : { itemID: string, activeTab: string}) =\u003e {\n  return (\n    \u003cbutton\n        className={`text-base sm:text-xs bg-red-500 text-white px-3 py-1 rounded-md \n                    opacity-75 group-hover:opacity-100 transition-opacity duration-200 ease-in-out\n                    hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-opacity-50`}\n        onClick={() =\u003e deleteItem(itemID, activeTab === 'notes' ? 'note' : 'pastPaper')}\n    \u003e\n        Delete\n    \u003c/button\u003e\n  )\n}\n\nexport default DeleteButton",
      "dependencies": [
        "react"
      ]
    },
    {
      "id": 10,
      "name": "CommentField.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/components/forumpost/CommentField.tsx",
      "content": "\"use client\";\n\nimport Image from \"next/image\";\nimport React, { useState, useTransition } from \"react\";\nimport { createComment } from \"@/app/actions/CreateComment\";\nimport Loading from \"@/app/@protected_routes/loading\";\n\ninterface AddCommentFormProps {\n    forumPostId: string;\n    onCommentAdded?: () =\u003e void;\n}\n\nconst CommentField: React.FC\u003cAddCommentFormProps\u003e = ({\n    forumPostId,\n    onCommentAdded,\n}) =\u003e {\n    const [content, setContent] = useState(\"\");\n    const [pending, startTransition] = useTransition();\n\n    const handleSubmit = async (event: React.FormEvent\u003cHTMLFormElement\u003e) =\u003e {\n        event.preventDefault();\n        startTransition(async () =\u003e {\n            if (!content.trim()) {\n                alert(\"Comment cannot be empty\");\n                return;\n            }\n\n            console.log(\"Sending comment data:\", { content, forumPostId });\n            const result = await createComment({\n                content,\n                forumPostId,\n            });\n\n            if (result.success) {\n                console.log(\"New comment created:\", result.data);\n                setContent(\"\");\n                if (onCommentAdded) {\n                    onCommentAdded();\n                }\n            } else {\n                console.error(\"Error creating comment:\", result.error);\n                alert(`Failed to add comment: ${result.error}`);\n            }\n        });\n    };\n\n    const handleInputChange = (event: React.ChangeEvent\u003cHTMLInputElement\u003e) =\u003e {\n        setContent(event.target.value);\n    };\n\n    return (\n        \u003cdiv\u003e\n            {pending \u0026\u0026 \u003cLoading /\u003e}\n            \u003cform\n                className=\"relative drop-shadow-md flex align-top mb-5\"\n                onSubmit={handleSubmit}\n            \u003e\n                \u003cinput\n                    type=\"text\"\n                    placeholder=\"Add a comment..\"\n                    value={content}\n                    className=\"w-full px-4 py-3 text-base placeholder-[#838383]  dark:bg-[#4F5159] focus:outline-none focus:ring-2 focus:ring-[#3BF3C7]\"\n                    onChange={handleInputChange}\n                /\u003e\n                \u003cSubmitCommentButton /\u003e\n            \u003c/form\u003e\n        \u003c/div\u003e\n    );\n};\n\nexport default CommentField;\n\nconst SubmitCommentButton: React.FC = () =\u003e {\n    return (\n        \u003cbutton\n            type=\"submit\"\n            className=\"bg-white py-3 px-4 hover:bg-gray-300 dark:bg-[#4F5159] focus:outline-none focus:ring-2 focus:ring-[#3BF3C7]\"\n        \u003e\n            \u003cImage\n                src=\"/comment/SubmitComment.svg\"\n                alt=\"Submit Comment\"\n                width={24}\n                height={24}\n            /\u003e\n        \u003c/button\u003e\n    );\n};\n",
      "dependencies": [
        "@/app/actions/CreateComment",
        "@/app/@protected_routes/loading",
        "/comment/SubmitComment.svg",
        "next/image",
        "react"
      ]
    },
    {
      "id": 11,
      "name": "loading.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/loading.tsx",
      "content": "\"use client\";\nimport LoadingSvg from \"@/public/assets/Loader.svg\"\nimport Image from \"next/image\";\nimport { useState } from \"react\";\n\nfunction getQuirkyLine() {\n    const lines = [\n        \"Brewing up something amazing for you...\",\n        \"Grinding away at loading your content...\",\n        \"Loading up the next serving of coffee...\",\n        \"Adding a shot of speed to your load...\",\n        \"Avoiding work by loading things...\",\n        \"Brewing up a page just for you...\",\n        \"Procrastinating by making you wait for this load...\",\n    ]\n\n\n    return lines[Math.floor(Math.random() * lines.length)];\n}\n\nexport default function Loading() {\n\n    const [line, setLine] = useState(getQuirkyLine())\n\n    return (\n        \u003cdiv\n            style={{\n                position: 'fixed',\n                top: 0,\n                left: 0,\n                width: '100vw',\n                height: '100vh',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                backgroundColor: 'rgba(0, 0, 0, 0.8)',\n                zIndex: 50,\n                color: 'white',\n            }}\n        \u003e\n            \u003cdiv className=\"flex flex-col justify-center items-center\"\u003e\n                \u003cImage src={LoadingSvg} alt=\"Loader\" className=\"animate-spin size-1/3\" /\u003e\n                \u003ch6 className=\"p-5\"\u003e{line}\u003c/h6\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    );\n}\n",
      "dependencies": [
        "@/public/assets/Loader.svg",
        "next/image",
        "react"
      ]
    },
    {
      "id": 12,
      "name": "loading.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/@protected_routes/favourites/loading.tsx",
      "content": "import Loading from \"../loading\";\n\nexport default Loading;\n"
    },
    {
      "id": 13,
      "name": "page.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/@protected_routes/forum/create/page.tsx",
      "content": "import React from \"react\";\nimport CreateForum from \"@/app/components/create-forum\";\nimport { PrismaClient } from \"@prisma/client\";\n\nasync function NewForumPage () {\n    const prisma = new PrismaClient();\n\n    const allTags = await prisma.tag.findMany();\n    return (\n        \u003cdiv className=\"create-foum\"\u003e\n            \u003cCreateForum allTags={allTags.map(i=\u003ei.name)}/\u003e\n        \u003c/div\u003e\n    );\n}\n\nexport default NewForumPage;\n",
      "dependencies": [
        "react",
        "@/app/components/create-forum",
        "@prisma/client"
      ]
    },
    {
      "id": 14,
      "name": "loading.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/@protected_routes/mod/loading.tsx",
      "content": "import Loading from \"../loading\";\n\nexport default Loading;\n"
    },
    {
      "id": 15,
      "name": "loading.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/@protected_routes/notes/create/loading.tsx",
      "content": "import Loading from \"../../loading\";\n\nexport default Loading;\n"
    },
    {
      "id": 16,
      "name": "SignOut.ts",
      "category": "file",
      "path": "ExamCooker-2024/app/actions/SignOut.ts",
      "content": "\"use server\";\nimport {signOut} from \"@/app/auth\";\n\nexport const signOutAction = async () =\u003e {\n    await signOut({redirectTo: \"/\"});\n};\n",
      "dependencies": [
        "@/app/auth"
      ]
    },
    {
      "id": 17,
      "name": "FilterComponent.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/components/FilterComponent.tsx",
      "content": "\"use client\";\n\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport FilterComp from './filter/FilterComp';\nimport { faCaretDown, faCaretUp } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useRouter, useSearchParams } from 'next/navigation';\n\ninterface Option {\n    id: string;\n    label: string;\n}\n\ninterface CheckboxOptions {\n    courses?: Option[];\n    slots?: Option[];\n    years?: Option[];\n}\n\ninterface DropdownProps {\n    pageType: 'notes' | 'past_papers' | 'resources' | 'forum' | 'favourites';\n}\n\nconst Dropdown: React.FC\u003cDropdownProps\u003e = ({ pageType }) =\u003e {\n    const [isOpen, setIsOpen] = useState(false);\n    const [selectedTags, setSelectedTags] = useState\u003cstring[]\u003e([]);\n    const router = useRouter();\n    const searchParams = useSearchParams();\n    const dropdownRef = useRef\u003cHTMLDivElement\u003e(null);\n\n    useEffect(() =\u003e {\n        const tags = searchParams.getAll('tags');\n        if (tags.length \u003e 0) {\n            setSelectedTags(tags);\n        } else {\n            setSelectedTags([]);\n        }\n    }, [searchParams]);\n\n    const toggleDropdown = () =\u003e {\n        setIsOpen(!isOpen);\n    };\n\n    const handleClickOutside = useCallback((event: MouseEvent) =\u003e {\n        if (dropdownRef.current \u0026\u0026 !dropdownRef.current.contains(event.target as Node)) {\n            setIsOpen(false);\n        }\n    }, []);\n\n    useEffect(() =\u003e {\n        if (isOpen) {\n            document.addEventListener('mousedown', handleClickOutside);\n        } else {\n            document.removeEventListener('mousedown', handleClickOutside);\n        }\n\n        return () =\u003e {\n            document.removeEventListener('mousedown', handleClickOutside);\n        };\n    }, [isOpen, handleClickOutside]);\n\n    const checkboxOptions: CheckboxOptions = {\n        slots: [\n            { id: 'A1', label: 'A1' },\n            { id: 'A2', label: 'A2' },\n            { id: 'B1', label: 'B1' },\n            { id: 'B2', label: 'B2' },\n            { id: 'C1', label: 'C1' },\n            { id: 'C2', label: 'C2' },\n            { id: 'D1', label: 'D1' },\n            { id: 'D2', label: 'D2' },\n            { id: 'E1', label: 'E1' },\n            { id: 'E2', label: 'E2' },\n            { id: 'F1', label: 'F1' },\n            { id: 'F2', label: 'F2' },\n            { id: 'G1', label: 'G1' },\n            { id: 'G2', label: 'G2' },\n\n        ], \n    };\n\n    const handleSelectionChange = useCallback((category: keyof CheckboxOptions, selection: string[]) =\u003e {\n        const newTags = Array.from(new Set([\n            ...selectedTags.filter(tag =\u003e !checkboxOptions[category]?.some(option =\u003e option.label === tag)),\n            ...selection\n        ]));\n        setSelectedTags(newTags);\n        updateURL(newTags);\n    }, [selectedTags, checkboxOptions]);\n\n    const updateURL = useCallback((tags: string[]) =\u003e {\n        const params = new URLSearchParams(searchParams);\n        params.delete('tags');\n        tags.forEach(tag =\u003e params.append('tags', tag));\n        const newURL = `/${pageType}?${params.toString()}`;\n        router.push(newURL);\n    }, [searchParams, router, pageType]);\n\n    return (\n        \u003cdiv className=\"relative inline-block text-left\" ref={dropdownRef}\u003e\n            \u003cbutton\n                onClick={toggleDropdown}\n                className=\"inline-flex items-center justify-center w-full border-black dark:border-[#D5D5D5] border-2 text-lg font-bold px-4 py-2 bg-[#5FC4E7] dark:bg-[#7D7467]/20\"\n            \u003e\n                Filter\n                {isOpen ? \u003cFontAwesomeIcon icon={faCaretUp} className=\"ml-2\" /\u003e : \u003cFontAwesomeIcon icon={faCaretDown} className=\"ml-2\" /\u003e}\n            \u003c/button\u003e\n            \u003cdiv className={`hide-scrollbar flex flex-col sm:flex-row sm:space-x-4 justify-center items-start absolute left-0 mt-2 w-full w-[80vw] sm:w-auto sm:max-w-[1200px] border-2 border-black dark:border-white bg-[#4AD0FF] dark:bg-[#232530] z-50 overflow-auto ${isOpen ? '' : 'hidden'}`}\u003e\n            {checkboxOptions.slots \u0026\u0026 (\n                \u003cdiv className=\"w-full p-4 sm:p-2 flex flex-wrap justify-center font-bold\"\u003e\n                        \u003cFilterComp\n                            title=\"Slots\"\n                            options={checkboxOptions.slots}\n                            onSelectionChange={(selection) =\u003e handleSelectionChange('slots', selection)}\n                            selectedOptions={selectedTags.filter(tag =\u003e checkboxOptions.slots!.some(option =\u003e option.label === tag))}\n                            isSlotCategory={true}\n                        /\u003e\n                    \u003c/div\u003e\n                )}\n            \u003c/div\u003e\n        \u003c/div\u003e\n    );\n};\n\nexport default Dropdown;\n",
      "dependencies": [
        "@fortawesome/react-fontawesome",
        "next/navigation",
        "react",
        "@fortawesome/free-solid-svg-icons"
      ]
    },
    {
      "id": 18,
      "name": "land_footer.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/components/landing_page/land_footer.tsx",
      "content": "import React from 'react';\nimport Image from 'next/image';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faInstagram } from '@fortawesome/free-brands-svg-icons';\nimport { faLinkedin } from '@fortawesome/free-brands-svg-icons';\n\nfunction Footer() {\n  return (\n    \u003cfooter className=\"py-12 text-center bg-[#CCF3FF]\"\u003e\n      \u003csection className=\"max-w-4xl mx-auto px-4 sm:px-8\"\u003e\n        \u003ch2 className=\"text-2xl mb-4\"\u003eWhy ExamCooker?\u003c/h2\u003e\n        \u003cp className=\"mb-8 text-base sm:text-lg pt-6 pb-6\"\u003e\n          Remember the days of desperately searching not only for past papers, only to soon face a scarcity of modern notes, sometimes the ones that could be found had a lack of clarity and could not benefit you during your cramming struggle. Here, we bring you ExamCooker: providing a holistic solution to access and compile all the crucial resources in one single place.\n        \u003c/p\u003e\n      \u003c/section\u003e\n      \u003csection className=\"mt-8\"\u003e\n      \u003cdiv className=\"flex items-center mb-6\"\u003e\n        \u003chr className=\"flex-grow border-t-3 border-black mr-4\" /\u003e\n        \u003cp className=\"text-4xl\"\u003eMade With \u003cspan className=\"text-4xl\" role=\"img\" aria-label=\"heart\"\u003e💙\u003c/span\u003e\u003c/p\u003e\n        \u003chr className=\"flex-grow border-t-3 border-black ml-4\" /\u003e\n        \u003c/div\u003e\n        \n        \u003cdiv className=\"mx-auto max-w-xs sm:max-w-md\"\u003e\n          \u003cImage\n            src={'./assets/ACM Logo.svg'}\n            alt=\"ACM VIT Student Chapter\"\n            width={500}\n            height={500}\n            className=\"rounded-full\"\n          /\u003e\n          \n        \u003c/div\u003e\n        \u003cdiv className=\"text-right\"\u003e\n          \u003ch6 className=\"text-1xl mb-2\"\u003eFind Us\u003c/h6\u003e\n          \u003cdiv className=\"flex justify-end space-x-4 mr-2.5\"\u003e\n            \u003ca href=\"https://www.instagram.com\" target=\"_blank\" rel=\"noopener noreferrer\" className=\" hover:text-gray-400\"\u003e\n              \u003cFontAwesomeIcon icon={faInstagram} size=\"1x\" /\u003e\n            \u003c/a\u003e\n            \u003ca href=\"https://www.linkedin.com\" target=\"_blank\" rel=\"noopener noreferrer\" className=\" hover:text-gray-400\"\u003e\n              \u003cFontAwesomeIcon icon={faLinkedin} size=\"1x\" /\u003e\n            \u003c/a\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/section\u003e\n    \u003c/footer\u003e\n  );\n}\n\nexport default Footer;\n",
      "dependencies": [
        "react",
        "next/image",
        "@fortawesome/react-fontawesome",
        "@fortawesome/free-brands-svg-icons"
      ]
    },
    {
      "id": 19,
      "name": "pdfviewer.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/components/pdfviewer.tsx",
      "content": "\"use client\";\n\nimport React, { useState } from \"react\";\nimport { Viewer, Worker, SpecialZoomLevel } from \"@react-pdf-viewer/core\";\nimport { toolbarPlugin } from \"@react-pdf-viewer/toolbar\";\nimport { zoomPlugin } from \"@react-pdf-viewer/zoom\";\nimport { pageNavigationPlugin } from \"@react-pdf-viewer/page-navigation\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronUp,\n  faChevronDown,\n  faMinus,\n  faPlus,\n  faExpand,\n} from \"@fortawesome/free-solid-svg-icons\";\n\n// Import styles\nimport \"@react-pdf-viewer/core/lib/styles/index.css\";\nimport \"@react-pdf-viewer/toolbar/lib/styles/index.css\";\n\nconst buttonClass =\n  \"p-1 hover:bg-gray-200 dark:hover:bg-gray-700 rounded text-gray-600 dark:text-gray-300\";\n\nexport default function PDFViewer({ fileUrl }: { fileUrl: string }) {\n  const toolbarPluginInstance = toolbarPlugin();\n  const zoomPluginInstance = zoomPlugin();\n  const pageNavigationPluginInstance = pageNavigationPlugin();\n  const [isFullScreen, setIsFullScreen] = useState\u003cboolean\u003e(false);\n\n  const { Toolbar } = toolbarPluginInstance;\n\n  const toggleFullScreen = () =\u003e {\n    setIsFullScreen(!isFullScreen);\n  };\n\n  return (\n    \u003cdiv\n      className={`w-full h-full flex flex-col ${\n        isFullScreen ? \"fixed inset-0 z-50 bg-white dark:bg-gray-900\" : \"\"\n      }`}\n    \u003e\n      \u003cWorker workerUrl=\"https://unpkg.com/pdfjs-dist@3.11.174/build/pdf.worker.min.js\"\u003e\n        \u003cdiv className=\"rpv-core__viewer flex flex-col h-full\"\u003e\n          \u003cdiv className=\"rpv-core__toolbar\"\u003e\n            \u003cToolbar\u003e\n              {(slots) =\u003e {\n                const {\n                  CurrentPageInput,\n                  GoToNextPage,\n                  GoToPreviousPage,\n                  NumberOfPages,\n                  ZoomIn,\n                  ZoomOut,\n                } = slots;\n                return (\n                  \u003cdiv className=\"flex items-center justify-between w-full bg-white dark:bg-gray-800 p-2\"\u003e\n                    \u003cdiv className=\"flex items-center space-x-2\"\u003e\n                      \u003cGoToPreviousPage\u003e\n                        {(props) =\u003e (\n                          \u003cbutton {...props} className={buttonClass}\u003e\n                            \u003cFontAwesomeIcon icon={faChevronUp} /\u003e\n                          \u003c/button\u003e\n                        )}\n                      \u003c/GoToPreviousPage\u003e\n                      \u003cCurrentPageInput /\u003e\n                      \u003cspan className=\"mx-1\"\u003e/\u003c/span\u003e\n                      \u003cNumberOfPages /\u003e\n                      \u003cGoToNextPage\u003e\n                        {(props) =\u003e (\n                          \u003cbutton {...props} className={buttonClass}\u003e\n                            \u003cFontAwesomeIcon icon={faChevronDown} /\u003e\n                          \u003c/button\u003e\n                        )}\n                      \u003c/GoToNextPage\u003e\n                    \u003c/div\u003e\n                    \u003cdiv className=\"flex items-center space-x-2\"\u003e\n                      \u003cZoomOut\u003e\n                        {(props) =\u003e (\n                          \u003cbutton {...props} className={buttonClass}\u003e\n                            \u003cFontAwesomeIcon icon={faMinus} /\u003e\n                          \u003c/button\u003e\n                        )}\n                      \u003c/ZoomOut\u003e\n                      \u003cZoomIn\u003e\n                        {(props) =\u003e (\n                          \u003cbutton {...props} className={buttonClass}\u003e\n                            \u003cFontAwesomeIcon icon={faPlus} /\u003e\n                          \u003c/button\u003e\n                        )}\n                      \u003c/ZoomIn\u003e\n                      \u003cbutton\n                        onClick={toggleFullScreen}\n                        className={buttonClass}\n                      \u003e\n                        \u003cFontAwesomeIcon icon={faExpand} /\u003e\n                      \u003c/button\u003e\n                    \u003c/div\u003e\n                  \u003c/div\u003e\n                );\n              }}\n            \u003c/Toolbar\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex-grow overflow-auto\"\u003e\n            \u003cViewer\n              fileUrl={fileUrl}\n              plugins={[\n                toolbarPluginInstance,\n                zoomPluginInstance,\n                pageNavigationPluginInstance,\n              ]}\n              defaultScale={SpecialZoomLevel.PageFit}\n            /\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/Worker\u003e\n    \u003c/div\u003e\n  );\n}\n",
      "dependencies": [
        "@react-pdf-viewer/page-navigation",
        "@fortawesome/react-fontawesome",
        "@react-pdf-viewer/core/lib/styles/index.css",
        "@react-pdf-viewer/toolbar/lib/styles/index.css",
        "react",
        "@react-pdf-viewer/core",
        "@react-pdf-viewer/toolbar",
        "@react-pdf-viewer/zoom"
      ]
    },
    {
      "id": 20,
      "name": "loading.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/@protected_routes/past_papers/create/loading.tsx",
      "content": "import Loading from \"../../loading\";\n\nexport default Loading;\n"
    },
    {
      "id": 21,
      "name": "loading.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/@protected_routes/forum/create/loading.tsx",
      "content": "import Loading from \"../../loading\";\n\nexport default Loading;\n"
    },
    {
      "id": 22,
      "name": "page.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/@protected_routes/page.tsx",
      "content": "import { auth } from \"@/app/auth\";\nimport Home from \"@/app/@protected_routes/home/home\";\n\nexport default async function Page() {\n    const session = await auth();\n\n    return \u003c\u003e{session ? \u003cHome /\u003e : \u003cdiv\u003eYou need to be logged in to see this.🚫\u003c/div\u003e}\u003c/\u003e;\n}\n",
      "dependencies": [
        "@/app/auth",
        "@/app/@protected_routes/home/home"
      ]
    },
    {
      "id": 23,
      "name": "page.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/@protected_routes/past_papers/create/page.tsx",
      "content": "import React from \"react\";\nimport UploadFile from \"@/app/components/UploadFile\";\nimport { PrismaClient } from \"@prisma/client\";\n\n\nasync function UploadPaperPage() {\n    const prisma = new PrismaClient();\n\n    const allTags = await prisma.tag.findMany();\n    return (\n        \u003cdiv className=\"create-papers\"\u003e\n            \u003cUploadFile allTags={allTags.map(i =\u003e i.name)} variant=\"Past Papers\"/\u003e\n        \u003c/div\u003e\n    );\n}\n\nexport default UploadPaperPage;\n",
      "dependencies": [
        "@/app/components/UploadFile",
        "@prisma/client",
        "react"
      ]
    },
    {
      "id": 24,
      "name": "revalidateFavourites.ts",
      "category": "file",
      "path": "ExamCooker-2024/app/actions/revalidateFavourites.ts",
      "content": "'use server';\n\nimport { revalidatePath } from 'next/cache';\n\nexport async function revalidateFavorites(type?: string) {\n    revalidatePath('/favourites');\n\n    if (type) {\n        switch (type) {\n            case 'note':\n                revalidatePath('/notes');\n                break;\n            case 'pastPaper':\n                revalidatePath('/past_papers');\n                break;\n            case 'forum':\n                revalidatePath('/forum');\n                break;\n            case 'subject':\n                revalidatePath('/resources');\n                break;\n        }\n    }\n}\n",
      "dependencies": [
        "next/cache"
      ]
    },
    {
      "id": 25,
      "name": "ResourceCard.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/components/ResourceCard.tsx",
      "content": "\"use client\";\nimport React from 'react';\nimport Link from 'next/link';\nimport {Subject} from '@prisma/client';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faHeart} from '@fortawesome/free-solid-svg-icons';\nimport {useBookmarks} from './BookmarksProvider';\nimport {useToast} from \"@/components/ui/use-toast\";\n\ninterface ResourceCardProps {\n    subject: Subject;\n}\n\nfunction ResourceCard({subject}: ResourceCardProps) {\n    const {isBookmarked, toggleBookmark} = useBookmarks();\n    const isFav = isBookmarked(subject.id, 'subject');\n    const {toast} = useToast();\n\n    const handleToggleFav = () =\u003e {\n        toggleBookmark({\n            id: subject.id,\n            type: 'subject',\n            title: subject.name\n        }, !isFav).catch(() =\u003e toast({title: \"Error! Could not add to favorites\", variant: \"destructive\"}));\n    };\n\n\n    // Since the Subject datatype only has a \"name\" field, I assume that the name has to be something like \"COURSECODE - COURSENAME\" and \n    // am hence, using the '-' character to split the string\n    let [courseCode, courseName] = subject.name.split('-');\n    // courseName = courseName ? courseName : \"Subject Name\";\n\n    return (\n        \u003cdiv\n            className=\"flex flex-col justify-between w-full h-full p-4 bg-[#5FC4E7] border-2 border-[#5FC4E7]  dark:border-b-[#3BF4C7] dark:lg:border-b-[#ffffff]/20 dark:border-[#ffffff]/20 hover:border-b-2 hover:border-b-[#ffffff]  dark:hover:border-b-[#3BF4C7] dark:bg-[#ffffff]/10 dark:lg:bg-[#0C1222] dark:hover:bg-[#ffffff]/10 transition-all duration-200 transform hover:scale-105 hover:shadow-lg\"\u003e\n            \u003cdiv className='items-start'\u003e\n                \u003cLink href={`/resources/${subject.id}`} className=\"block w-full text-left\"\u003e\n                    \u003ch4\u003e{courseName.trim()}\u003c/h4\u003e\n                    \u003ch6\u003e{courseCode.trim()}\u003c/h6\u003e\n                \u003c/Link\u003e\n            \u003c/div\u003e\n            \u003cdiv className='items-end'\u003e\n                \u003cdiv className='flex justify-between'\u003e\n                    \u003cdiv/\u003e\n                    \u003cbutton onClick={handleToggleFav} className=\"ml-4\" style={{color: isFav ? 'red' : 'lightgrey'}}\u003e\n                        \u003cFontAwesomeIcon icon={faHeart}/\u003e\n                    \u003c/button\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    );\n}\n\nexport default ResourceCard;\n",
      "dependencies": [
        "react",
        "next/link",
        "@prisma/client",
        "@fortawesome/react-fontawesome",
        "@fortawesome/free-solid-svg-icons",
        "@/components/ui/use-toast"
      ]
    },
    {
      "id": 26,
      "name": "seed-tags.js",
      "category": "file",
      "path": "ExamCooker-2024/seed-tags.js",
      "content": "const {PrismaClient} = require('@prisma/client')\nconst fs = require('node:fs');\nconst readline = require('node:readline');\n\nconst prisma = new PrismaClient()\n\nasync function main(filepath) {\n\n    const fileStream = fs.createReadStream(filepath);\n\n    const rl = readline.createInterface({\n        input: fileStream,\n        crlfDelay: Infinity,\n    });\n    // Note: we use the crlfDelay option to recognize all instances of CR LF\n    // ('\\r\\n') in input.txt as a single line break.\n\n    for await (const line of rl) {\n        // Each line in input.txt will be successively available here as `line`.\n        prisma.tag.upsert({\n            where: {\n                name: line\n            },\n            update: {\n                name: line,\n                aliases: []\n            },\n            create: {\n                name: line,\n                aliases: []\n            }\n        }).then((tag) =\u003e {\n            console.log(`Created tag ${tag.name} with id: ${tag.id}`)\n        }).catch((error) =\u003e {\n            console.error(`Error creating tag ${line}: ${error}`)\n        })\n    }\n}\n\nmain(process.argv[2]).then(() =\u003e {\n    console.log('Seed complete')\n}).catch((error) =\u003e {\n    console.error(`Error seeding tags: ${error}`)\n}).finally(async () =\u003e {\n    await prisma.$disconnect()\n})\n",
      "dependencies": [
        "@prisma/client",
        "node:fs",
        "node:readline"
      ]
    },
    {
      "id": 27,
      "name": "page.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/blocked/page.tsx",
      "content": "import React from \"react\";\nimport \"@/app/globals.css\";\n\nexport default function page() {\n    return (\n        \u003cdiv className=\"bg-[#c2e6ec] flex justify-center items-center h-screen\"\u003e\n            \u003cspan className=\"text-2xl font-semibold\"\u003eAccess Blocked\u003c/span\u003e\n        \u003c/div\u003e\n    );\n}\n",
      "dependencies": [
        "react",
        "@/app/globals.css"
      ]
    },
    {
      "id": 28,
      "name": "ModuleDropdown.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/components/ModuleDropdown.tsx",
      "content": "\"use client\";\n\nimport React, { useState } from 'react';\nimport { Module } from '@prisma/client';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleRight, faAngleDown } from '@fortawesome/free-solid-svg-icons';\n\ninterface ModuleDropdownProps {\n    module: Module;\n}\n\nfunction ModuleDropdown({ module }: ModuleDropdownProps) {\n    const [isExpanded, setIsExpanded] = useState(false);\n\n    const toggleExpand = () =\u003e {\n        setIsExpanded(!isExpanded);\n    };\n\n    return (\n        \u003cdiv className=\"mb-2\"\u003e\n            \u003cbutton\n                onClick={toggleExpand}\n                className=\"flex items-center justify-between w-full text-left py-2 px-4 bg-[#82BEE9] dark:bg-[#232530]  border-b-2 hover:bg-opacity-80 hover:border-b-white hover:border-b-2 transition-colors duration-200 \"\n                style={{ borderBottomColor: isExpanded ? '#3BF4C7' : '' }}\n            \u003e\n                \u003ch3\u003e{module.title}\u003c/h3\u003e\n                {isExpanded \u0026\u0026 \u003cFontAwesomeIcon icon={faAngleDown} /\u003e}\n                {!isExpanded \u0026\u0026 \u003cFontAwesomeIcon icon={faAngleRight} /\u003e}\n            \u003c/button\u003e\n            {isExpanded \u0026\u0026 (\n                \u003cdiv className=\"sm:grid sm:grid-cols-2 px-4 py-2\"\u003e\n                    \u003cdiv\u003e\n                        \u003ch4 className=\"font-bold mb-2\"\u003eWeb References:\u003c/h4\u003e\n                        \u003cul className=\"list-disc pl-5 mb-2\"\u003e\n                            {module.webReferences.map((link, index) =\u003e (\n                                \u003cli key={index} className=\"mb-1\"\u003e\n                                    \u003ca href={link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-blue-600 hover:underline\"\u003e\n                                        {link}\n                                    \u003c/a\u003e\n                                \u003c/li\u003e\n                            ))}\n                        \u003c/ul\u003e\n                    \u003c/div\u003e\n                    \u003cdiv\u003e\n                        \u003ch4 className=\"font-bold mb-2\"\u003eYouTube Links:\u003c/h4\u003e\n                        \u003cul className=\"list-disc pl-5\"\u003e\n                            {module.youtubeLinks.map((link, index) =\u003e (\n                                \u003cli key={index} className=\"mb-1\"\u003e\n                                    \u003ca href={link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-red-600 hover:underline\"\u003e\n                                        {link}\n                                    \u003c/a\u003e\n                                \u003c/li\u003e\n                            ))}\n                        \u003c/ul\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            )}\n        \u003c/div\u003e\n    );\n}\n\nexport default ModuleDropdown;\n",
      "dependencies": [
        "@prisma/client",
        "@fortawesome/react-fontawesome",
        "@fortawesome/free-solid-svg-icons",
        "react"
      ]
    },
    {
      "id": 29,
      "name": "uploadButtonPaper.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/components/uploadButtonPaper.tsx",
      "content": "\"use client\";\nimport React from \"react\";\nimport Link from \"next/link\";\n\nconst UploadButtonPaper: React.FC = () =\u003e {\n    return (\n        \u003cdiv className=\"relative group inline-flex items-center\"\u003e\n            \u003cdiv className=\"absolute inset-0 bg-black dark:bg-[#3BF4C7]\"\u003e\u003c/div\u003e\n            \u003cdiv className=\"dark:absolute dark:inset-0 dark:blur-[75px] dark:lg:bg-none lg:dark:group-hover:bg-[#3BF4C7] transition dark:group-hover:duration-200 duration-1000\" /\u003e\n            \u003cbutton\n                type=\"submit\"\n                title=\"Upload New Past Paper\"\n                className=\"border-black dark:border-[#D5D5D5] dark:group-hover:border-[#3BF4C7] dark:group-hover:text-[#3BF4C7] border-2 relative flex items-center px-4 py-2 text-lg bg-[#3BF4C7] dark:bg-[#0C1222] text-black dark:text-[#D5D5D5] font-bold group-hover:-translate-x-1 group-hover:-translate-y-1 transition duration-150\"\n            \u003e\n                \u003cLink\n                    href={\"/past_papers/create\"}\n                    className=\"flex items-center space-x-1\"\n                \u003e\n                    \u003cspan className=\"text-xl\"\u003e+\u003c/span\u003e\n                    \u003cspan className=\"text-lg\"\u003eNew\u003c/span\u003e\n                \u003c/Link\u003e\n            \u003c/button\u003e\n        \u003c/div\u003e\n    );\n};\n\nexport default UploadButtonPaper;\n",
      "dependencies": [
        "react",
        "next/link"
      ]
    },
    {
      "id": 30,
      "name": "page.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/@protected_routes/forum/[id]/page.tsx",
      "content": "import { PrismaClient } from \"@prisma/client\";\nimport ForumPost from \"./ForumPost\";\nimport { auth } from \"@/app/auth\";\nimport {notFound} from \"next/navigation\";\n\nasync function forumPostThread({ params }: { params: { id: string } }) {\n\n  const prisma = new PrismaClient();\n\n  const session = await auth();\n  const userId = session?.user?.id;\n\n  const forumpost = await prisma.forumPost.findUnique({\n    where: {\n      id: params.id,\n    },\n    include: {\n      author: {\n        select: {\n          name: true,\n        }\n      },\n      votes: {\n        where: {\n          userId: userId\n        }\n      },\n      tags: true,\n      comments: {\n        include: {\n          author: true,\n        }\n      },\n    },\n  });\n  if (!forumpost) {\n    return notFound();\n  }\n\n\n  if (userId) {\n    await prisma.viewHistory.upsert({\n      where: { userId_forumPostId: { userId, forumPostId: forumpost.id } },\n      update: {\n        viewedAt: new Date(),\n        count: {\n          increment: 1,\n        },\n      },\n      create: {\n        userId,\n        forumPostId: forumpost.id,\n        viewedAt: new Date(),\n      },\n    })\n  }\n\n\n  return (\n    \u003cForumPost post={forumpost} /\u003e\n  )\n}\n\nexport default forumPostThread;\n",
      "dependencies": [
        "@prisma/client",
        "@/app/auth",
        "next/navigation"
      ]
    },
    {
      "id": 31,
      "name": "CreateComment.ts",
      "category": "file",
      "path": "ExamCooker-2024/app/actions/CreateComment.ts",
      "content": "'use server'\n\nimport { PrismaClient } from '@prisma/client'\nimport { auth } from '../auth'\nimport { revalidatePath } from 'next/cache'\n\nconst prisma = new PrismaClient()\n\ntype CreateCommentInput = {\n  content: string\n  forumPostId: string\n}\ninterface NewComment {\n  id: string;\n  content: string;\n  authorId: string;\n  forumPostId: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n\nexport async function createComment(data: CreateCommentInput): Promise\u003c{ success: boolean; data?: NewComment; error?: string }\u003e {\n  try {\n    const session = await auth();\n\n    if (!session || !session.user) {\n      throw new Error(\"Session or user is undefined\");\n    }\n    const newComment = await prisma.comment.create({\n      data: {\n        content: data.content,\n        author: {\n          connect: { email: session.user.email! }\n        },\n        forumPost: {\n          connect: { id: data.forumPostId }\n        }\n      },\n    })\n\n    revalidatePath(`/forum/${data.forumPostId}`);\n    return { success: true, data: newComment }\n  } catch (error) {\n    console.error('Server error creating comment:', error)\n    return { success: false, error: 'Failed to create comment' }\n  }\n}",
      "dependencies": [
        "next/cache",
        "@prisma/client"
      ]
    },
    {
      "id": 32,
      "name": "route.ts",
      "category": "file",
      "path": "ExamCooker-2024/app/api/auth/[...nextauth]/route.ts",
      "content": "import { handlers } from \"@/app/auth\" // Referring to the auth.ts we just created\nexport const { GET, POST } = handlers\n",
      "dependencies": [
        "@/app/auth"
      ]
    },
    {
      "id": 33,
      "name": "CommonResource.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/components/CommonResource.tsx",
      "content": "\"use client\"\nimport React from 'react';\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useBookmarks } from './BookmarksProvider';\nimport { useRouter } from 'next/navigation';\nimport {useToast} from \"@/components/ui/use-toast\";\n\ntype FavoriteType = \"note\" | \"pastpaper\" | \"forumpost\" | \"subject\";\n\nfunction removePdfExtension(title: string) {\n    return title.replace(/\\.pdf$/, '');\n}\n\nfunction mapCategoryToType(category: string): FavoriteType {\n    switch (category.toLowerCase()) {\n        case 'note':\n            return 'note';\n        case 'pastpaper':\n            return 'pastpaper';\n        case 'forumpost':\n            return 'forumpost';\n        case 'subject':\n            return 'subject';\n        default:\n            throw new Error(`Invalid category: ${category}`);\n    }\n}\n\nexport default function CommonFav({ category, title, thing }: { category: string, title: string, thing: any }) {\n    const { toggleBookmark, isBookmarked } = useBookmarks();\n    const { toast } = useToast()\n    const favoriteType = mapCategoryToType(category);\n    const isFav = isBookmarked(thing.id, favoriteType);\n    const router = useRouter();\n\n    const handleFavoriteClick = (e: React.MouseEvent) =\u003e {\n        e.stopPropagation();\n        e.preventDefault();\n        toggleBookmark({\n            id: thing.id,\n            type: favoriteType,\n            title: title,\n        }, !isFav).catch(()=\u003etoast({title: \"Error! Could not add to favorites\", variant: \"destructive\"}));\n    };\n\n    const getLink = () =\u003e {\n        switch (favoriteType) {\n            case 'note':\n                return `/notes/${thing.id}`;\n            case 'pastpaper':\n                return `/past_papers/${thing.id}`;\n            case 'forumpost':\n                return `/forum/${thing.id}`;\n            case 'subject':\n                return `/resources/${thing.id}`;\n            default:\n                return '';\n        }\n    };\n\n    return (\n        \u003cdiv className=\"w-full p-2 flex flex-col justify-between gap-2 bg-[#5FC4E7] dark:bg-white/10 lg:dark:bg-[#0C1222] border-2 border-[#5FC4E7] dark:border-white/20 dark:border-b-[#3BF4C7] lg:dark:border-white/20 hover:dark:bg-white/10 hover:scale-105 hover:border-b-white hover:dark:border-b-[#3BF4C7] transition duration-200 cursor-pointer\"\n            onClick={() =\u003e router.push(getLink())}\u003e\n            \u003ch6 className=\"opacity-50 text-xs\"\u003e{category.toUpperCase()}\u003c/h6\u003e\n                \u003ch5 className='break-all'\u003e\n                    {removePdfExtension(title)}\n                \u003c/h5\u003e\n                \u003cdiv className=\"flex justify-between\"\u003e\n                \u003cdiv\u003e\u003c/div\u003e\n                \u003cbutton onClick={handleFavoriteClick} className=\"transition-colors duration-200\"\u003e\n                    \u003cFontAwesomeIcon icon={faHeart} className={isFav ? \"text-red-500\" : \"text-gray-300\"} /\u003e\n                \u003c/button\u003e\n            \u003c/div\u003e\n\n            \u003cdiv className=\"flex justify-between gap-2\"\u003e\n                {/* \u003cLink href={} className=\"w-fit py-1 px-2 text-sm flex items-center bg-white dark:bg-[#3F4451]\"\u003e\n                    \u003cspan className=\"mr-1 flex items-center justify-center\"\u003e\n                        \u003cFontAwesomeIcon icon={faEye} /\u003e\n                    \u003c/span\u003e\n                    View\n                \u003c/Link\u003e */}\n\n\n            \u003c/div\u003e\n        \u003c/div\u003e\n    );\n}\n",
      "dependencies": [
        "@fortawesome/react-fontawesome",
        "next/navigation",
        "@/components/ui/use-toast",
        "react",
        "@fortawesome/free-solid-svg-icons"
      ]
    },
    {
      "id": 34,
      "name": "landing_header.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/components/landing_page/landing_header.tsx",
      "content": "import React from \"react\";\nimport { SignIn } from \"../sign-in\";\n\nfunction Header() {\n    return (\n        \u003cheader className=\"bg-[#CCF3FF] py-12 text-center\"\u003e\n            \u003cdiv className=\"container max-w-xl mx-auto px-4 sm:px-8\"\u003e\n                \u003ch1 className=\"text-4xl mb-2 text-[#0070f3] sm:text-5xl\"\u003e\n                    Cramming,\n                    \u003cbr className=\"sm:hidden\" /\u003e Made Easy.\n                \u003c/h1\u003e\n                \u003cp className=\"text-lg mb-4 sm:text-xl\"\u003e\n                    Presenting ExamCooker, your one-stop solution to cram before\n                    exams\n                \u003c/p\u003e\n                \u003cSignIn displayText=\"Login\" /\u003e\n            \u003c/div\u003e\n        \u003c/header\u003e\n    );\n}\n\nexport default Header;\n",
      "dependencies": [
        "react"
      ]
    },
    {
      "id": 35,
      "name": "tagsInput.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/components/tagsInput.tsx",
      "content": "'use client';\n\nimport React, {Dispatch, SetStateAction, useEffect, useMemo} from 'react';\nimport Fuse from \"fuse.js\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleXmark} from '@fortawesome/free-solid-svg-icons';\n\nconst slots = ['A1', 'A2', 'B1', 'B2', 'C1', 'C2', 'D1', 'D2', 'E1', 'E2', 'F1', 'F2', 'G1', 'G2'];\n\nconst filterYearAndSlot = (tags: string[]) =\u003e {\n    const yearRegex = /^(2\\d{3}|3000)$/;\n    return tags.filter(tag =\u003e !yearRegex.test(tag) \u0026\u0026 !slots.includes(tag));\n};\n\nfunction TagsInput({allTags, selectedTags, setSelectedTags}: {\n    allTags: string[],\n    selectedTags: string[],\n    setSelectedTags: Dispatch\u003cSetStateAction\u003cstring[]\u003e\u003e\n}) {\n    const [input, setInput] = React.useState('');\n    const [showDropdown, setShowDropdown] = React.useState(false);\n    const [filteredTags, setFilteredTags] = React.useState\u003cstring[]\u003e([]);\n\n    const dropdownRef = React.useRef\u003cHTMLDivElement\u003e(null);\n\n    const tagList = useMemo(() =\u003e {\n        return filterYearAndSlot(allTags)\n    }, [allTags])\n\n    const addTag = (tag: string) =\u003e {\n        setSelectedTags([...selectedTags, tag]);\n        setShowDropdown(false);\n        setInput('');\n    }\n\n    const removeTag = (tag: string) =\u003e {\n        setSelectedTags(selectedTags.filter(t =\u003e t !== tag));\n    }\n\n    const fuse = useMemo(() =\u003e new Fuse(tagList, {\n        threshold: 0.6,\n        minMatchCharLength: 2,\n    }), [tagList]);\n\n    useEffect(() =\u003e {\n        const handleClickOutside = (event: MouseEvent) =\u003e {\n            if (dropdownRef.current \u0026\u0026 !dropdownRef.current.contains(event.target as Node)) {\n                setShowDropdown(false);\n            }\n        };\n\n        document.addEventListener('mousedown', handleClickOutside);\n        return () =\u003e {\n            document.removeEventListener('mousedown', handleClickOutside);\n        };\n    }, []);\n\n\n    useEffect(() =\u003e {\n        if (input) {\n            const results = fuse.search(input);\n            setFilteredTags(results.map(result =\u003e result.item));\n        } else {\n            setFilteredTags(tagList);\n        }\n    }, [fuse, input])\n\n\n    return (\n        \u003cdiv className=\"mb-4\"\u003e\n            \u003cdiv className=\"flex items-center mb-2 flex-wrap w-full\"\u003e\n                {selectedTags.map((tag) =\u003e (\n                    \u003cspan\n                        key={tag}\n                        className=\"inline-block bg-white dark:bg-[#3F4451] px-3 py-1 text-xs font-semibold mr-2 mb-2\"\n                    \u003e\n                                    #{tag}\n                        \u003cbutton\n                            type=\"button\"\n                            onClick={() =\u003e removeTag(tag)}\n                            className=\"ml-2 text-red-500\"\n                        \u003e\n                                        \u003cFontAwesomeIcon icon={faCircleXmark} /\u003e\n                                    \u003c/button\u003e\n                                \u003c/span\u003e\n                ))}\n                \u003cdiv ref={dropdownRef} className=\"relative w-full\"\u003e\n                    \u003cinput\n                        type=\"text\"\n                        placeholder=\"Add tag\"\n                        className={`p-2 border-2 border-dashed border-gray-300 w-full dark:bg-[#0C1222] text-lg font-bold`}\n                        value={input}\n                        onChange={(e) =\u003e setInput(e.target.value)}\n                        onKeyDown={(e) =\u003e {\n                            if (e.key === 'Enter') {\n                                e.preventDefault();\n                                if (!filteredTags.length) return;\n                                addTag(filteredTags[0]);\n                                setInput('');\n                            }\n                        }}\n                        onFocus={() =\u003e setShowDropdown(true)}\n                    /\u003e\n                    {showDropdown \u0026\u0026 (\n                        \u003cdiv className=\"absolute z-10 mt-1 w-full bg-white dark:bg-[#232530] shadow-lg max-h-60 py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\"\u003e\n                            {filteredTags.filter(i=\u003e !selectedTags.includes(i)).map((tag) =\u003e (\n                                \u003cdiv\n                                    key={tag}\n                                    className=\"cursor-pointer select-none relative py-2 pl-3 pr-9 hover:bg-[#ffffff]/10\"\n                                    onClick={() =\u003e addTag(tag)}\n                                \u003e\n                                    {tag}\n                                \u003c/div\u003e\n                            ))}\n                        \u003c/div\u003e\n                    )}\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e);\n}\n\nexport default TagsInput;\n",
      "dependencies": [
        "react",
        "fuse.js",
        "@fortawesome/react-fontawesome",
        "@fortawesome/free-solid-svg-icons"
      ]
    },
    {
      "id": 36,
      "name": "SocialMediaToast.tsx",
      "category": "file",
      "path": "ExamCooker-2024/components/ui/SocialMediaToast.tsx",
      "content": "'use client';\n\nimport React, { useEffect, useState } from 'react';\nimport Image from 'next/image';\nimport { X } from 'lucide-react';\nimport GiftBoxIcon from '@/public/assets/GiftBox.svg';\n\nconst SocialMediaFollowToast = () =\u003e {\n  const [showToast, setShowToast] = useState(false);\n\n  useEffect(() =\u003e {\n    const checkAndShowToast = () =\u003e {\n      const storedData = localStorage.getItem('socialMediaToastData');\n      const currentTime = new Date().getTime();\n\n      if (!storedData) {\n        showToastNotification();\n        return;\n      }\n\n      const { timestamp, hasSeenToast } = JSON.parse(storedData);\n      const expirationTime = 12 * 60 * 60 * 1000;\n\n      if (!hasSeenToast || currentTime - timestamp \u003e expirationTime) {\n        showToastNotification();\n      }\n    };\n\n    const showToastNotification = () =\u003e {\n      setShowToast(true);\n      localStorage.setItem('socialMediaToastData', JSON.stringify({\n        hasSeenToast: true,\n        timestamp: new Date().getTime()\n      }));\n\n      setTimeout(() =\u003e {\n        setShowToast(false);\n      }, 20000 );\n    };\n\n    checkAndShowToast();\n  }, []);\n\n  if (!showToast) return null;\n\n  return (\n    \u003cdiv className=\"fixed bottom-0 right-4 z-50 max-w-sm px-4 bg-[#C2E6EC] rounded-lg shadow-xl dark:bg-[#0C1222] border border-[#2699E9] dark:border-[#3BF4C7]\"\u003e\n      \u003cdiv className=\"flex justify-end\"\u003e\n        \u003cbutton\n          type=\"button\"\n          onClick={() =\u003e setShowToast(false)}\n          className=\"text-gray-500 hover:text-gray-700 dark:text-gray-300 dark:hover:text-gray-100\"\n        \u003e\n          \u003cX size={24} className='mt-2'/\u003e\n        \u003c/button\u003e\n      \u003c/div\u003e\n      \u003cdiv className=\"flex flex-col items-center\"\u003e\n        \u003cImage\n          src={GiftBoxIcon}\n          alt=\"Gift Box\"\n          width={240}\n          height={272}\n          className=\"mb-0 translate-y-5 size-1/2\"\n          \n        /\u003e\n        \u003ch6 className=\"text-lg font-bold text-center text-gray-900 dark:text-white mb-2\"\u003e\n          Thanks for using our services!\n        \u003c/h6\u003e\n        \u003cp className=\"text-center text-sm text-[#000000] dark:text-[#D5D5D5] mb-4\"\u003e\n          If we've helped you, please consider supporting ACM-VIT by following us on our social media channels. Your support means the world to us!\n        \u003c/p\u003e\n        \u003ca\n          href=\"https://www.instagram.com/acmvit/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"inline-flex items-center justify-center w-full px-4 py-2 text-lg font-bold text-black border border-[#5FC4E7] bg-gray \n          dark:border-[#3BF4C7] rounded-md hover:bg-black/20 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:text-[#3BF4C7] \n          dark:hover:bg-white/20 dark:focus:ring-black-400 mb-4\"\u003e\n          Follow on Instagram\n        \u003c/a\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n  );\n};\n\nexport default SocialMediaFollowToast;\n",
      "dependencies": [
        "react",
        "next/image",
        "lucide-react",
        "@/public/assets/GiftBox.svg"
      ]
    },
    {
      "id": 37,
      "name": "toaster.tsx",
      "category": "file",
      "path": "ExamCooker-2024/components/ui/toaster.tsx",
      "content": "\"use client\"\n\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\nimport { useToast } from \"@/components/ui/use-toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    \u003cToastProvider\u003e\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          \u003cToast key={id} {...props}\u003e\n            \u003cdiv className=\"grid gap-1\"\u003e\n              {title \u0026\u0026 \u003cToastTitle\u003e{title}\u003c/ToastTitle\u003e}\n              {description \u0026\u0026 (\n                \u003cToastDescription\u003e{description}\u003c/ToastDescription\u003e\n              )}\n            \u003c/div\u003e\n            {action}\n            \u003cToastClose /\u003e\n          \u003c/Toast\u003e\n        )\n      })}\n      \u003cToastViewport /\u003e\n    \u003c/ToastProvider\u003e\n  )\n}\n",
      "dependencies": [
        "@/components/ui/use-toast"
      ]
    },
    {
      "id": 38,
      "name": "page.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/@protected_routes/favourites/page.tsx",
      "content": "\"use client\";\n\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport Fuse from \"fuse.js\";\nimport Pagination from \"@/app/components/Pagination\";\nimport SearchBar from \"@/app/components/SearchBar\";\nimport FavFetch, { mapBookmarkToItem } from \"@/app/components/FavFetchFilter\";\nimport { useBookmarks } from \"@/app/components/BookmarksProvider\";\nimport { useSearchParams } from \"next/navigation\";\n\nconst SCORE_THRESHOLD = 0.6;\nconst PAGE_SIZE = 9;\n\nfunction performSearch\u003cT\u003e(query: string, dataSet: T[]): T[] {\n  const options = {\n    includeScore: true,\n    keys: [\"title\", \"name\", \"description\", \"content\"],\n    threshold: 0.4,\n    ignoreLocation: true,\n    minMatchCharLength: 2,\n  };\n  const fuse = new Fuse(dataSet, options);\n  const searchResults = fuse.search(query);\n  return searchResults\n    .filter((fuseResult) =\u003e (fuseResult.score || 1) \u003c SCORE_THRESHOLD)\n    .map((fuseResult) =\u003e fuseResult.item);\n}\n\nfunction FavouritesPage() {\n  const { bookmarks } = useBookmarks();\n  const searchParams = useSearchParams();\n\n  const search = searchParams.get(\"search\") || \"\";\n  const page = parseInt(searchParams.get(\"page\") || \"1\", 10);\n  const type = searchParams.get(\"type\") || \"Past Papers\";\n\n  const [filteredBookmarks, setFilteredBookmarks] = useState(bookmarks);\n\n  useEffect(() =\u003e {\n    let filtered = bookmarks;\n    if (search) {\n      filtered = performSearch(search, bookmarks);\n    }\n    if (type !== \"All\") {\n      filtered = filtered.filter((bookmark) =\u003e {\n        switch (type) {\n          case \"Past Papers\":\n            return bookmark.type === \"pastpaper\";\n          case \"Notes\":\n            return bookmark.type === \"note\";\n          case \"Forum\":\n            return bookmark.type === \"forumpost\";\n          case \"Resources\":\n            return bookmark.type === \"subject\";\n          default:\n            return true;\n        }\n      });\n    }\n    setFilteredBookmarks(filtered);\n  }, [bookmarks, search, type]);\n\n  const totalCount = filteredBookmarks.length;\n  const totalPages = Math.max(1, Math.ceil(totalCount / PAGE_SIZE));\n\n  const itemsToDisplay = useMemo(() =\u003e {\n    return filteredBookmarks\n      .slice((page - 1) * PAGE_SIZE, page * PAGE_SIZE)\n      .map(mapBookmarkToItem);\n  }, [filteredBookmarks, page]);\n\n  return (\n    \u003cdiv className=\"flex flex-col justify-start min-h-screen transition-colors mx-auto text-black dark:text-[#D5D5D5] overflow-hidden w-[90vw] pt-8\"\u003e\n      \u003ch1 className=\"text-center pb-6\"\u003eFavourites\u003c/h1\u003e\n      \u003cdiv className=\"container w-5/6 lg:w-1/2 flex items-center mx-auto pb-10 pt-4\"\u003e\n        \u003cSearchBar pageType=\"favourites\" initialQuery={search} /\u003e\n      \u003c/div\u003e\n      \u003cdiv className=\"flex items-center justify-center p-6\"\u003e\n        \u003cFavFetch items={itemsToDisplay} activeTab={type} /\u003e\n      \u003c/div\u003e\n      {totalPages \u003e 1 \u0026\u0026 (\n        \u003cPagination\n          currentPage={page}\n          totalPages={totalPages}\n          basePath=\"/favourites\"\n          searchQuery={search}\n          typeQuery={type}\n        /\u003e\n      )}\n    \u003c/div\u003e\n  );\n}\n\nexport default FavouritesPage;\n",
      "dependencies": [
        "@/app/components/FavFetchFilter",
        "@/app/components/BookmarksProvider",
        "next/navigation",
        "react",
        "fuse.js",
        "@/app/components/Pagination",
        "@/app/components/SearchBar"
      ]
    },
    {
      "id": 39,
      "name": "page.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/@protected_routes/notes/[id]/page.tsx",
      "content": "import React from 'react';\nimport {PrismaClient} from '@prisma/client';\nimport PDFViewer from '@/app/components/pdfviewer';\nimport {auth} from '@/app/auth';\nimport {TimeHandler} from '@/app/components/forumpost/CommentContainer';\nimport {notFound} from \"next/navigation\";\nimport DeleteButton from '@/app/components/DeleteButton';\nimport {Metadata} from \"next\";\n\nimport { Edit } from 'lucide-react';\nimport EditButton from '@/app/components/EditButton';\n\nimport ShareLink from '@/app/components/ShareLink';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\n\n\nfunction removePdfExtension(filename: string): string {\n    return filename.endsWith('.pdf') ? filename.slice(0, -4) : filename;\n}\n\nfunction isValidSlot(str: string): boolean {\n    const regex = /^[A-G]\\d$/;\n    return regex.test(str);\n}\n\nfunction isValidYear(year: string): boolean {\n    const regex = /^20\\d{2}$/;\n    return regex.test(year);\n}\n\nasync function PdfViewerPage({params}: { params: { id: string } }) {\n    const prisma = new PrismaClient();\n    let year: string = '';\n    let slot: string = '';\n    let note;\n    let current_user;\n    const session = await auth();\n    const userId = session?.user?.id;\n\n    try {\n        note = await prisma.note.findUnique({\n            where: {\n                id: params.id\n            },\n            include: {\n                author: true,\n                tags: true,\n            },\n        });\n\n        current_user = await prisma.user.findUnique({\n            where: {\n                id: userId,\n            }\n        })\n\n        if (note \u0026\u0026 userId) {\n            for (let i: number = 0; i \u003c note!.tags.length; i++) {\n                if (isValidYear(note!.tags[i].name)) {\n                    year = note!.tags[i].name\n                } else if (isValidSlot(note!.tags[i].name)) {\n                    slot = note!.tags[i].name\n                }\n            }\n\n\n            await prisma.viewHistory.upsert({\n                where: {\n                    userId_noteId: {\n                        userId,\n                        noteId: note.id\n                    }\n                },\n                update: {\n                    viewedAt: new Date(),\n                    count: {\n                        increment: 1\n                    }\n                },\n                create: {\n                    userId: userId,\n                    noteId: note.id,\n                    viewedAt: new Date()\n                }\n            })\n        }\n\n    } catch (error) {\n        console.error('Error fetching note:', error);\n        return (\n            \u003cdiv\u003e\n                \u003cdiv className=\"text-center p-8 dark:text-[#d5d5d5]\"\u003eError loading note. Please refresh, or try again\n                    later.\n                \u003c/div\u003e\n                {/* \u003cdiv\u003e\u003cFontAwesomeIcon icon={faArrowLeft}/\u003eGo Back\u003c/div\u003e */}\n            \u003c/div\u003e\n        );\n    } finally {\n        await prisma.$disconnect();\n    }\n\n    if (!note) {\n        return notFound();\n    }\n\n    const postTime: string = note.createdAt.toLocaleString(\"en-US\", {timeZone: \"Asia/Kolkata\"});\n\n    return (\n        \u003cdiv className=\"flex flex-col lg:flex-row h-screen text-black dark:text-[#D5D5D5]\"\u003e\n            \u003cdiv className=\"lg:w-1/2 flex flex-col overflow-hidden\"\u003e\n                \u003cdiv className=\"flex-grow overflow-y-auto p-4 sm:p-6 lg:p-8\"\u003e\n                    \u003cdiv className=\"max-w-2xl mx-auto\"\u003e\n                        \u003ch1 className=\"text-2xl sm:text-3xl lg:text-4xl font-bold mb-4 sm:mb-6\"\u003e{removePdfExtension(note.title)}\u003c/h1\u003e\n\n                        \u003cdiv className=\"space-y-2 sm:space-y-3\"\u003e\n                            \u003cp className=\"text-base sm:text-lg\"\u003e\u003cspan className=\"font-semibold\"\u003eSlot:\u003c/span\u003e {slot}\u003c/p\u003e\n                            \u003cp className=\"text-base sm:text-lg\"\u003e\u003cspan className=\"font-semibold\"\u003eYear:\u003c/span\u003e {year}\u003c/p\u003e\n                            \u003cp className=\"text-base sm:text-lg\"\u003e\u003cspan\n                                className=\"font-semibold\"\u003ePosted by: \u003c/span\u003e {note.author?.name?.slice(0, -10) || 'Unknown'}\n                            \u003c/p\u003e\n                            \u003cdiv className=\"flex gap-2 items-center justify-between\"\u003e\n                                \u003cp className='text-base sm:text-xs'\u003e\u003cspan\n                                    className=\"font-semibold\"\u003ePosted at: {TimeHandler(postTime).hours}:{TimeHandler(postTime).minutes}{TimeHandler(postTime).amOrPm}, {TimeHandler(postTime).day}-{TimeHandler(postTime).month}-{TimeHandler(postTime).year}\u003c/span\u003e\n                                \u003c/p\u003e\n                                {current_user?.role === \"MODERATOR\" \u0026\u0026\n                                    \u003cEditButton itemID={note.id} title={note.title} activeTab='notes'/\u003e\n                                }\n\n                                {note.author?.id === userId \u0026\u0026\n                                    \u003cDeleteButton itemID={note.id} activeTab='notes'/\u003e\n                                }\n                                \u003cShareLink fileType='these Notes'/\u003e\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"flex-1 lg:w-1/2 overflow-hidden lg:border-l lg:border-black dark:lg:border-[#D5D5D5] p-4\"\u003e\n                \u003cdiv className=\"h-full overflow-auto\"\u003e\n                    \u003cPDFViewer fileUrl={note.fileUrl}/\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    );\n\n}\n\nexport default PdfViewerPage;\n\n// nextjs metadata\n\nexport async function generateMetadata({params}: { params: { id: string } }): Promise\u003cMetadata\u003e {\n    const prisma = new PrismaClient();\n    const note = await prisma.note.findUnique({\n        where: {\n            id: params.id\n        },\n        include: {\n            tags: true\n        }\n    })\n    if (!note) return {}\n    return {\n        title: removePdfExtension(note.title),\n        openGraph: {\n            images: note.thumbNailUrl ? [{url: note.thumbNailUrl}] : []\n        },\n        keywords: ['vit', 'previous year question papers', 'pdf', 'notes', 'question papers', 'exam', 'examcooker', ...note.tags.map(tag =\u003e tag.name)]\n    }\n}\n",
      "dependencies": [
        "@/app/components/forumpost/CommentContainer",
        "@/app/components/DeleteButton",
        "next",
        "lucide-react",
        "@/app/components/EditButton",
        "@/app/components/ShareLink",
        "@prisma/client",
        "@/app/components/pdfviewer",
        "next/navigation",
        "@fortawesome/react-fontawesome",
        "@fortawesome/free-solid-svg-icons",
        "react",
        "@/app/auth"
      ]
    },
    {
      "id": 40,
      "name": "page.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/@protected_routes/past_papers/page.tsx",
      "content": "import React from 'react';\nimport Fuse from 'fuse.js';\nimport {PastPaper, PrismaClient, Tag} from \"@prisma/client\";\nimport {redirect} from 'next/navigation';\nimport Pagination from '../../components/Pagination';\nimport PastPaperCard from '../../components/PastPaperCard';\nimport SearchBar from '../../components/SearchBar';\nimport UploadButtonPaper from '../../components/uploadButtonPaper';\nimport Dropdown from '../../components/FilterComponent';\n\nconst SCORE_THRESHOLD = 0.6;\n\ntype PastPaperWithTags = PastPaper \u0026 {\n    tags: Tag[];\n};\n\nfunction validatePage(page: number, totalPages: number): number {\n    if (isNaN(page) || page \u003c 1) {\n        return 1;\n    }\n    if (page \u003e totalPages \u0026\u0026 totalPages \u003e 0) {\n        return totalPages;\n    }\n    return page;\n}\n\nfunction performSearch(query: string, dataSet: PastPaperWithTags[]) {\n    const options = {\n        includeScore: true,\n        keys: [\n            { name: 'title', weight: 2 },\n            { name: 'tags.name', weight: 1 }\n        ],\n        threshold: 0.4,\n        ignoreLocation: true,\n        minMatchCharLength: 2,\n        findAllMatches: true,\n        useExtendedSearch: true,\n    };\n    const fuse = new Fuse(dataSet, options);\n    const searchResults = fuse.search({\n        $or: [\n            { title: query },\n            { 'tags.name': query },\n            { title: `'${query}` }\n        ]\n    });\n    return searchResults\n        .filter((fuseResult) =\u003e (fuseResult.score || 1) \u003c SCORE_THRESHOLD)\n        .map((fuseResult) =\u003e fuseResult.item);\n}\n\nasync function pastPaperPage({ searchParams }: { searchParams: { page?: string, search?: string, tags?: string | string[] } }) {\n    const prisma = new PrismaClient();\n    const pageSize = 9;\n    const search = searchParams.search || '';\n    const page = parseInt(searchParams.page || '1', 10);\n    const tags: string[] = Array.isArray(searchParams.tags)\n        ? searchParams.tags\n        : (searchParams.tags ? searchParams.tags.split(',') : []);\n\n    let filteredPastPapers = await prisma.pastPaper.findMany({\n        where: {\n            isClear: true,\n            ...(tags.length \u003e 0 \u0026\u0026 {\n                tags: {\n                    some: {\n                        name: {\n                            in: tags,\n                        },\n                    },\n                },\n            }),\n        },\n        include: {\n            tags: true,\n        },\n        orderBy: {\n            createdAt: 'desc',\n        }\n    });\n    if (search) {\n        filteredPastPapers = performSearch(search, filteredPastPapers);\n    }\n\n    const totalCount = filteredPastPapers.length;\n    const totalPages = Math.ceil(totalCount / pageSize);\n\n    const validatedPage = validatePage(page, totalPages);\n\n    const startIndex = (validatedPage - 1) * pageSize;\n    const endIndex = startIndex + pageSize;\n    const paginatedPastPapers = filteredPastPapers.slice(startIndex, endIndex);\n\n    if (validatedPage !== page) {\n        const searchQuery = search ? `\u0026search=${encodeURIComponent(search)}` : '';\n        const tagsQuery = tags.length \u003e 0 ? `\u0026tags=${encodeURIComponent(tags.join(','))}` : '';\n        redirect(`/past_papers?page=${validatedPage}${searchQuery}${tagsQuery}`);\n    }\n\n    return (\n        \u003cdiv className=\"p-8 transition-colors flex flex-col min-h-screen items-center text-black dark:text-[#D5D5D5]\"\u003e\n            \u003ch1 className=\"text-center mb-4\"\u003ePast Papers\u003c/h1\u003e\n            \u003cdiv className=\"hidden w-5/6 lg:w-1/2 md:flex items-center justify-center p-4 space-y-4 sm:space-y-0 sm:space-x-4 pt-2\"\u003e\n                \u003cDropdown pageType='past_papers' /\u003e\n                \u003cSearchBar pageType=\"past_papers\" initialQuery={search} /\u003e\n                \u003cUploadButtonPaper /\u003e\n            \u003c/div\u003e\n\n            \u003cdiv className='flex-col w-5/6 md:hidden space-y-4'\u003e\n                \u003cSearchBar pageType=\"past_papers\" initialQuery={search} /\u003e\n                \u003cdiv className='flex justify-between'\u003e\n                    \u003cDropdown pageType='past_papers' /\u003e\n                    \u003cUploadButtonPaper /\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n\n\n            {tags.length \u003e 0 \u0026\u0026 (\n                \u003cdiv className=\"flex justify-center mb-4\"\u003e\n                    \u003cdiv className=\"flex flex-wrap gap-2\"\u003e\n                        {tags.map((tag, index) =\u003e (\n                            \u003cspan key={index} className=\"bg-blue-100 text-blue-800 px-2 py-1 rounded\"\u003e\n                                {tag}\n                            \u003c/span\u003e\n                        ))}\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            )}\n\n            \u003cdiv className=\"flex justify-center\"\u003e\n                \u003cdiv className=\"w-fit grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-5 p-6  place-content-center\"\u003e\n                    {paginatedPastPapers.length \u003e 0 ? (\n                        paginatedPastPapers.map((eachPaper, index) =\u003e (\n                            \u003cdiv key={eachPaper.id} className=\"flex justify-center\"\u003e\n                                \u003cPastPaperCard pastPaper={eachPaper} index={index} /\u003e\n                            \u003c/div\u003e\n                        ))\n                    ) : (\n                        \u003cp className=\"col-span-3 text-center\"\u003e\n                            {search || tags.length \u003e 0\n                                ? \"No past papers found matching your search or selected tags.\"\n                                : \"No past papers found.\"}\n                        \u003c/p\u003e\n                    )}\n                \u003c/div\u003e\n            \u003c/div\u003e\n            {totalPages \u003e 1 \u0026\u0026 (\n                \u003cdiv className=\"mt-4\"\u003e\n                    \u003cPagination\n                        currentPage={validatedPage}\n                        totalPages={totalPages}\n                        basePath=\"/past_papers\"\n                        searchQuery={search}\n                        tagsQuery={tags.join(',')}\n                    /\u003e\n                \u003c/div\u003e\n            )}\n        \u003c/div\u003e\n    );\n}\n\nexport default pastPaperPage;\n\n",
      "dependencies": [
        "react",
        "fuse.js",
        "@prisma/client",
        "next/navigation"
      ]
    },
    {
      "id": 41,
      "name": "page.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/@protected_routes/quiz/page.tsx",
      "content": "\"use client\";\n\nimport React, { useState } from \"react\";\nimport { X } from \"lucide-react\";\nimport QuizModalContent from \"@/app/components/QuizModalComponent\";\n\ninterface Course {\n  courseCode: string;\n  courseName: string;\n}\n\ninterface QuizCardProps {\n  courseCode: string;\n  courseName: string;\n  onClick: () =\u003e void;\n}\n\nconst QuizCard: React.FC\u003cQuizCardProps\u003e = ({\n  courseCode,\n  courseName,\n  onClick,\n}) =\u003e {\n  return (\n    \u003cdiv\n      onClick={onClick}\n      className=\"hover:shadow-xl px-5 py-6 w-full bg-[#5FC4E7] dark:bg-[#ffffff]/10 lg:dark:bg-[#0C1222] dark:border-b-[#3BF4C7]\n            dark:lg:border-b-[#ffffff]/20 dark:border-[#ffffff]/20 border-2 border-[#5FC4E7] hover:border-b-[#ffffff] hover:border-b-2\n            dark:hover:border-b-[#3BF4C7]  dark:hover:bg-[#ffffff]/10 transition duration-200 transform hover:scale-105 max-w-96 cursor-pointer\"\n    \u003e\n      \u003ch3 className=\"text-xl font-semibold mb-2 dark:text-white\"\u003e\n        {courseName}\n      \u003c/h3\u003e\n      \u003cp className=\"text-gray-600 dark:text-gray-300\"\u003e{courseCode}\u003c/p\u003e\n    \u003c/div\u003e\n  );\n};\n\ninterface ModalProps {\n  isOpen: boolean;\n  onClose: () =\u003e void;\n  children: React.ReactNode;\n}\n\nconst Modal: React.FC\u003cModalProps\u003e = ({ isOpen, onClose, children }) =\u003e {\n  if (!isOpen) return null;\n\n  return (\n    \u003cdiv className=\"fixed inset-0 z-50\"\u003e\n      \u003cdiv\n        className=\"absolute inset-0 bg-black/50 backdrop-blur-sm\"\n        onClick={onClose}\n      /\u003e\n      \u003cdiv className=\"relative flex items-center justify-center min-h-screen p-4\"\u003e\n        \u003cdiv className=\"w-full max-w-2xl relative border-2 border-[#D5D5D5] border-dashed\"\u003e\n          {children}\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n  );\n};\n\ninterface QuizModalContentProps {\n  courseName: string;\n  onClose: () =\u003e void;\n}\n\nconst QuizPage = () =\u003e {\n  const [selectedCourse, setSelectedCourse] = useState\u003cCourse | null\u003e(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const handleCardClick = (course: Course) =\u003e {\n    setSelectedCourse(course);\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () =\u003e {\n    setIsModalOpen(false);\n    setSelectedCourse(null);\n  };\n\n  const courses: Course[] = [\n    { courseCode: \"102104073\", courseName: \"Wildlife Ecology\" },\n    { courseCode: \"102104082 \", courseName: \"Forest and Management\" },\n    { courseCode: \"109106067\", courseName: \"Spoken English\" },\n    \n  ];\n\n  return (\n    \u003cdiv className=\"h-[80vh] w-full flex flex-col items-center justify-start py-8 \"\u003e\n      \u003ch1 className=\"mb-12 text-black dark:text-[#D5D5D5]\"\u003eNPTEL QUIZ\u003c/h1\u003e\n\n      \u003cdiv className=\"grid grid-cols-1 md:grid-cols-2 gap-4 w-full max-w-4xl px-4\"\u003e\n        {courses.map((course) =\u003e (\n          \u003cQuizCard\n            key={course.courseCode}\n            courseCode={course.courseCode}\n            courseName={course.courseName}\n            onClick={() =\u003e handleCardClick(course)}\n          /\u003e\n        ))}\n      \u003c/div\u003e\n\n      \u003cModal isOpen={isModalOpen} onClose={handleCloseModal}\u003e\n        \u003cQuizModalContent\n          courseCode={selectedCourse?.courseCode || \"\"}\n          courseName={selectedCourse?.courseName || \"\"}\n          onClose={handleCloseModal}\n        /\u003e\n      \u003c/Modal\u003e\n    \u003c/div\u003e\n  );\n};\n\nexport default QuizPage;",
      "dependencies": [
        "react",
        "lucide-react",
        "@/app/components/QuizModalComponent"
      ]
    },
    {
      "id": 42,
      "name": "BookmarksProvider.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/components/BookmarksProvider.tsx",
      "content": "'use client'\n\nimport React, { createContext, useState, useContext, useCallback, useTransition } from 'react';\nimport { Bookmark, toggleBookmarkAction } from '../actions/Favourites';\n\ntype BookmarksContextType = {\n    bookmarks: Bookmark[];\n    toggleBookmark: (bookmark: Bookmark, favorite: boolean) =\u003e Promise\u003cvoid\u003e;\n    isBookmarked: (id: string, type: Bookmark['type']) =\u003e boolean;\n};\n\nconst BookmarksContext = createContext\u003cBookmarksContextType | undefined\u003e(undefined);\n\nexport function useBookmarks() {\n    const context = useContext(BookmarksContext);\n    if (context === undefined) {\n        throw new Error('useBookmarks must be used within a BookmarksProvider');\n    }\n    return context;\n}\n\nexport default function BookmarksProvider({ children, initialBookmarks }: { children: React.ReactNode, initialBookmarks: Bookmark[] }) {\n    const [bookmarks, setBookmarks] = useState\u003cBookmark[]\u003e(initialBookmarks);\n    const [pending, startTransition] = useTransition();\n\n    const toggleBookmark = useCallback(async (bookmark: Bookmark, favourite: boolean) =\u003e {\n        setBookmarks(prevBookmarks =\u003e {\n            const index = prevBookmarks.findIndex(b =\u003e b.id === bookmark.id \u0026\u0026 b.type === bookmark.type);\n            if (index \u003e -1) {\n                return prevBookmarks.filter((_, i) =\u003e i !== index);\n            } else {\n                return [...prevBookmarks, bookmark];\n            }\n        });\n\n        startTransition(async () =\u003e {\n            try {\n\n                const result = await toggleBookmarkAction(bookmark, favourite);\n\n                if (!result.success) {\n                    setBookmarks(prevBookmarks =\u003e {\n                        const index = prevBookmarks.findIndex(b =\u003e b.id === bookmark.id \u0026\u0026 b.type === bookmark.type);\n                        if (index \u003e -1 \u0026\u0026 result.isBookmarked) {\n                            return [...prevBookmarks.slice(0, index), bookmark, ...prevBookmarks.slice(index + 1)];\n                        } else if (index === -1 \u0026\u0026 !result.isBookmarked) {\n                            return prevBookmarks.filter(b =\u003e b.id !== bookmark.id || b.type !== bookmark.type);\n                        }\n                        return prevBookmarks;\n                    });\n                    console.error('Failed to toggle bookmark:', result.error);\n                }\n\n            } catch (error) {\n                setBookmarks(prevBookmarks =\u003e {\n                    const index = prevBookmarks.findIndex(b =\u003e b.id === bookmark.id \u0026\u0026 b.type === bookmark.type);\n                    if (index \u003e -1) {\n                        return prevBookmarks.filter((_, i) =\u003e i !== index);\n                    } else {\n                        return [...prevBookmarks, bookmark];\n                    }\n                });\n                console.error('Error toggling bookmark:', error);\n            }\n        })\n    }, []);\n\n    const isBookmarked = useCallback((id: string, type: Bookmark['type']) =\u003e {\n        return bookmarks.some(b =\u003e b.id === id \u0026\u0026 b.type === type);\n    }, [bookmarks]);\n\n    return (\n        \u003cBookmarksContext.Provider value={{ bookmarks, toggleBookmark, isBookmarked }}\u003e\n            {children}\n        \u003c/BookmarksContext.Provider\u003e\n    );\n}\n",
      "dependencies": [
        "react"
      ]
    },
    {
      "id": 43,
      "name": "Pagination.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/components/Pagination.tsx",
      "content": "'use client';\nimport React from 'react';\nimport Link from 'next/link';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons';\n\ninterface PaginationProps {\n  currentPage: number;\n  totalPages: number;\n  basePath: string;\n  searchQuery?: string;\n  tagsQuery?: string;\n  typeQuery?: string;\n}\n\nconst Pagination: React.FC\u003cPaginationProps\u003e = ({ currentPage, totalPages, basePath, searchQuery, tagsQuery, typeQuery }) =\u003e {\n  const maxVisiblePages = 5;\n\n  function getPageNumbers() {\n    const pageNumbers = [];\n    let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));\n    const endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);\n\n    if (endPage - startPage + 1 \u003c maxVisiblePages) {\n      startPage = Math.max(1, endPage - maxVisiblePages + 1);\n    }\n\n    for (let i = startPage; i \u003c= endPage; i++) {\n      pageNumbers.push(i);\n    }\n\n    return { pageNumbers, startPage, endPage };\n  }\n\n  const { pageNumbers, startPage, endPage } = getPageNumbers();\n\n  const getPageUrl = (page: number) =\u003e {\n    let url = `${basePath}?page=${page}`;\n    if (searchQuery) {\n      url += `\u0026search=${encodeURIComponent(searchQuery)}`;\n    }\n    if (tagsQuery) {\n      url += `\u0026tags=${encodeURIComponent(tagsQuery)}`;\n    }\n    if (typeQuery) {\n      url += `\u0026type=${encodeURIComponent(typeQuery)}`;\n    }\n    return url;\n  };\n\n  const PageLink = ({ page, children }: { page: number; children: React.ReactNode }) =\u003e (\n    \u003cLink\n      href={getPageUrl(page)}\n      className={`px-3 py-1.5 text-sm font-medium ${page === currentPage\n        ? 'bg-[#73E8CC] dark:bg-[#232530]'\n        : 'bg-[#5fc4e7] hover:bg-opacity-85 dark:bg-[#008A90]'\n        }`}\n    \u003e\n      {children}\n    \u003c/Link\u003e\n  );\n\n  return (\n    \u003cdiv className=\"flex items-center justify-center space-x-2 py-4\"\u003e\n      {currentPage \u003e 1 \u0026\u0026 (\n        \u003cPageLink page={currentPage - 1}\u003e\n          \u003cFontAwesomeIcon icon={faAngleLeft} /\u003e\n        \u003c/PageLink\u003e\n      )}\n\n      {startPage \u003e 1 \u0026\u0026 (\n        \u003c\u003e\n          \u003cPageLink page={1}\u003e1\u003c/PageLink\u003e\n          {startPage \u003e 2 \u0026\u0026 \u003cspan className=\"text-gray-500\"\u003e...\u003c/span\u003e}\n        \u003c/\u003e\n      )}\n\n      {pageNumbers.map((number) =\u003e (\n        \u003cPageLink key={number} page={number}\u003e\n          {number}\n        \u003c/PageLink\u003e\n      ))}\n\n      {endPage \u003c totalPages \u0026\u0026 (\n        \u003c\u003e\n          {endPage \u003c totalPages - 1 \u0026\u0026 \u003cspan className=\"text-gray-500\"\u003e...\u003c/span\u003e}\n          \u003cPageLink page={totalPages}\u003e{totalPages}\u003c/PageLink\u003e\n        \u003c/\u003e\n      )}\n\n      {currentPage \u003c totalPages \u0026\u0026 (\n        \u003cPageLink page={currentPage + 1}\u003e\n          \u003cFontAwesomeIcon icon={faAngleRight} /\u003e\n        \u003c/PageLink\u003e\n      )}\n    \u003c/div\u003e\n  );\n};\n\nexport default Pagination;\n",
      "dependencies": [
        "react",
        "next/link",
        "@fortawesome/react-fontawesome",
        "@fortawesome/free-solid-svg-icons"
      ]
    },
    {
      "id": 44,
      "name": "sign-out.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/components/sign-out.tsx",
      "content": "import { signOutAction } from \"../actions/SignOut\";\nimport React from \"react\";\n\nexport function SignOut({\n    children,\n}: Readonly\u003c{\n    children: React.ReactNode;\n}\u003e) {\n    return (\n        \u003cform action={signOutAction}\u003e\n            \u003cbutton\u003e{children}\u003c/button\u003e\n        \u003c/form\u003e\n    );\n}\n",
      "dependencies": [
        "react"
      ]
    },
    {
      "id": 45,
      "name": "localStorage.ts",
      "category": "file",
      "path": "ExamCooker-2024/lib/localStorage.ts",
      "content": "export const setLocalStorage = (key: string, value: any) =\u003e {\n    \n    if (typeof window !== 'undefined') {\n\n      localStorage.setItem(key, JSON.stringify(value));\n    }\n  };\n  \n  export const getLocalStorage = (key: string) =\u003e {\n   \n    if (typeof window !== 'undefined') {\n      const value = localStorage.getItem(key);\n      return value ? JSON.parse(value) : null;\n    }\n    \n  };"
    },
    {
      "id": 46,
      "name": "page.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/@protected_routes/past_papers/[id]/page.tsx",
      "content": "import React from 'react';\nimport {PrismaClient} from '@prisma/client';\nimport PDFViewer from '@/app/components/pdfviewer';\nimport {auth} from '@/app/auth';\nimport {TimeHandler} from '@/app/components/forumpost/CommentContainer';\nimport DeleteButton from '@/app/components/DeleteButton';\nimport {Metadata} from \"next\";\nimport {notFound} from \"next/navigation\";\n\nimport EditButton from '@/app/components/EditButton';\n\nimport ShareLink from '@/app/components/ShareLink';\n\n\nfunction removePdfExtension(filename: string): string {\n    return filename.endsWith('.pdf') ? filename.slice(0, -4) : filename;\n}\n\nfunction isValidSlot(str: string): boolean {\n    const regex = /^[A-G]\\d$/;\n    return regex.test(str);\n}\n\nfunction isValidYear(year: string): boolean {\n    const regex = /^20\\d{2}$/;\n    return regex.test(year);\n}\n\nasync function PdfViewerPage({params}: {params: { id: string }}) {\n    const prisma = new PrismaClient();\n    let paper;\n    let current_user;\n    let year: string = '';\n    let slot: string = '';\n    const session = await auth();\n    const userId = session?.user?.id;\n\n    try {\n        paper = await prisma.pastPaper.findUnique({\n            where: {\n                id: params.id\n            },\n            include: {\n                author: true,\n                tags: true,\n            },\n        });\n\n        current_user = await prisma.user.findUnique({\n            where: {\n                id: userId,\n            }\n        })\n\n        if (paper \u0026\u0026 userId) {\n            for (let i: number = 0; i \u003c paper!.tags.length; i++) {\n                if (isValidYear(paper!.tags[i].name)) {\n                    year = paper!.tags[i].name\n                } else if (isValidSlot(paper!.tags[i].name)) {\n                    slot = paper!.tags[i].name\n                }\n            }\n\n\n            await prisma.viewHistory.upsert({\n                where: {\n                    userId_pastPaperId: {\n                        userId,\n                        pastPaperId: paper.id\n                    }\n                },\n                update: {\n                    viewedAt: new Date(),\n                    count: {\n                        increment: 1\n                    }\n                },\n                create: {\n                    userId,\n                    pastPaperId: paper.id,\n                    viewedAt: new Date(),\n                }\n            });\n        }\n    } catch (error) {\n        console.error('Error fetching note:', error);\n        return (\n            \u003cdiv\u003e\n                \u003cdiv className=\"text-center p-8 dark:text-[#d5d5d5]\"\u003eError loading paper. Please refresh, or try again\n                    later.\n                \u003c/div\u003e\n                {/* \u003cdiv\u003e\u003cFontAwesomeIcon icon={faArrowLeft}/\u003eGo Back\u003c/div\u003e */}\n            \u003c/div\u003e\n        );\n    } finally {\n        await prisma.$disconnect();\n    }\n\n    if (!paper) return notFound();\n\n    const postTime: string = paper.createdAt.toLocaleString(\"en-US\", {timeZone: \"Asia/Kolkata\"});\n\n    return (\n        \u003cdiv className=\"flex flex-col lg:flex-row h-screen text-black dark:text-[#D5D5D5]\"\u003e\n            \u003cdiv className=\"lg:w-1/2 flex flex-col overflow-hidden\"\u003e\n                \u003cdiv className=\"flex-grow overflow-y-auto p-4 sm:p-6 lg:p-8\"\u003e\n                    \u003cdiv className=\"max-w-2xl mx-auto\"\u003e\n                        \u003ch1 className=\"text-2xl sm:text-3xl lg:text-4xl font-bold mb-4 sm:mb-6\"\u003e{removePdfExtension(paper.title)}\u003c/h1\u003e\n                        \u003cdiv className=\"space-y-2 sm:space-y-3\"\u003e\n                            \u003cp className=\"text-base sm:text-lg\"\u003e\u003cspan className=\"font-semibold\"\u003eSlot:\u003c/span\u003e {slot}\u003c/p\u003e\n                            \u003cp className=\"text-base sm:text-lg\"\u003e\u003cspan className=\"font-semibold\"\u003eYear:\u003c/span\u003e {year}\u003c/p\u003e\n                            \u003cp className=\"text-base sm:text-lg\"\u003e\u003cspan\n                                className=\"font-semibold\"\u003ePosted by: \u003c/span\u003e {paper.author?.name?.slice(0, -10) || 'Unknown'}\n                            \u003c/p\u003e\n                            \u003cdiv className=\"flex gap-2 items-center justify-between\"\u003e\n                                \u003cp className='text-base sm:text-xs'\u003e\u003cspan\n                                    className=\"font-semibold\"\u003ePosted at: {TimeHandler(postTime).hours}:{TimeHandler(postTime).minutes}{TimeHandler(postTime).amOrPm}, {TimeHandler(postTime).day}-{TimeHandler(postTime).month}-{TimeHandler(postTime).year}\u003c/span\u003e\n                                \u003c/p\u003e\n                                {current_user?.role === \"MODERATOR\" \u0026\u0026\n                                    \u003cEditButton itemID={paper.id} title={paper.title} activeTab='pastPaper'/\u003e}\n\n                                {userId === paper.author.id \u0026\u0026\n                                    \u003cDeleteButton itemID={paper.id} activeTab=\"pastPaper\"/\u003e}\n                                \u003cShareLink fileType='this Past Paper'/\u003e\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"flex-1 lg:w-1/2 overflow-hidden lg:border-l lg:border-black dark:lg:border-[#D5D5D5] p-4\"\u003e\n                \u003cdiv className=\"h-full overflow-auto\"\u003e\n                    \u003cPDFViewer fileUrl={paper.fileUrl}/\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    );\n}\n\nexport default PdfViewerPage;\n\n\nexport async function generateMetadata({params}: { params: { id: string } }): Promise\u003cMetadata\u003e {\n    const prisma = new PrismaClient();\n    const paper = await prisma.pastPaper.findUnique({\n        where: {\n            id: params.id\n        },\n        include: {\n            tags: true\n        }\n    })\n    if (!paper) return {}\n    return {\n        title: removePdfExtension(paper.title),\n        description: `View previous question papers here.`,\n        openGraph: {\n            images: paper.thumbNailUrl ? [{url: paper.thumbNailUrl}] : []\n        },\n        keywords: ['vit', 'previous year question papers', 'pdf', 'notes', 'question papers', 'exam', 'examcooker', 'acm', ...paper.tags.map(tag =\u003e tag.name)]\n    }\n}\n",
      "dependencies": [
        "react",
        "@prisma/client",
        "@/app/auth",
        "@/app/components/forumpost/CommentContainer",
        "@/app/components/DeleteButton",
        "next",
        "@/app/components/pdfviewer",
        "next/navigation",
        "@/app/components/EditButton",
        "@/app/components/ShareLink"
      ]
    },
    {
      "id": 47,
      "name": "page.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/@protected_routes/forum/page.tsx",
      "content": "import React from 'react';\nimport Fuse from 'fuse.js';\nimport { Comment, ForumPost, PrismaClient, Tag, User, Vote } from \"@prisma/client\";\nimport { redirect } from 'next/navigation';\nimport Pagination from \"../../components/Pagination\";\nimport ForumCard from \"../../components/ForumCard\";\nimport SearchBar from \"../../components/SearchBar\";\nimport Dropdown from \"../../components/FilterComponent\";\nimport NewForumButton from \"../../components/NewForumButton\";\nimport { auth } from '@/app/auth';\n\nconst SCORE_THRESHOLD = 0.8;\n\ntype ForumPostWithDetails = ForumPost \u0026 {\n  author: User;\n  tags: Tag[];\n  comments: (Comment \u0026 { author: User })[];\n  votes: Vote[];\n};\n\nfunction validatePage(page: number, totalPages: number): number {\n  if (isNaN(page) || page \u003c 1) {\n    return 1;\n  }\n  if (page \u003e totalPages \u0026\u0026 totalPages \u003e 0) {\n    return totalPages;\n  }\n  return page;\n}\n\nfunction performSearch(query: string, dataSet: ForumPostWithDetails[]) {\n  const options = {\n    includeScore: true,\n    keys: [\n      { name: 'title', weight: 2 },\n      { name: 'author.name', weight: 1 },\n      { name: 'tags.name', weight: 1 },\n      { name: 'description', weight: 1.5 },\n      { name: 'comments.content', weight: 1 },\n      { name: 'comments.author.name', weight: 0.5 }\n    ],\n    threshold: 0.7,\n    ignoreLocation: true,\n    minMatchCharLength: 2,\n    findAllMatches: true,\n    useExtendedSearch: true,\n  };\n  const fuse = new Fuse(dataSet, options);\n  const searchResults = fuse.search({\n    $or: [\n      { title: query },\n      { 'author.name': query },\n      { 'tags.name': query },\n      { description: query },\n      { 'comments.content': query },\n      { 'comments.author.name': query },\n      { title: `'${query}` }\n    ]\n  });\n  return searchResults\n    .filter((fuseResult) =\u003e (fuseResult.score || 1) \u003c SCORE_THRESHOLD)\n    .map((fuseResult) =\u003e fuseResult.item);\n}\n\nasync function forum({ searchParams }: { searchParams: { page?: string, search?: string, tags?: string | string[] } }) {\n  const prisma = new PrismaClient();\n  const session = await auth();\n  const currentUserId = session?.user?.id;\n  const pageSize = 5;\n  const search = searchParams.search || '';\n  const page = parseInt(searchParams.page || '1', 10);\n  const tags: string[] = Array.isArray(searchParams.tags)\n    ? searchParams.tags\n    : (searchParams.tags ? searchParams.tags.split(',') : []);\n\n  let filteredForumPosts = await prisma.forumPost.findMany({\n    where: {\n      ...(tags.length \u003e 0 \u0026\u0026 {\n        tags: {\n          some: {\n            name: {\n              in: tags,\n            },\n          },\n        },\n      }),\n    },\n    include: {\n      author: true,\n      votes: {\n        where: {\n          userId: currentUserId\n        }\n      },\n      tags: true,\n      comments: {\n        include: {\n          author: true,\n        },\n      },\n    },\n    orderBy: {\n      createdAt: 'desc'\n    }\n  });\n  if (search) {\n    filteredForumPosts = performSearch(search, filteredForumPosts);\n  }\n\n  const totalCount = filteredForumPosts.length;\n  const totalPages = Math.ceil(totalCount / pageSize);\n\n  const validatedPage = validatePage(page, totalPages);\n\n  const startIndex = (validatedPage - 1) * pageSize;\n  const endIndex = startIndex + pageSize;\n  const paginatedForumPosts = filteredForumPosts.slice(startIndex, endIndex);\n\n  if (validatedPage !== page) {\n    const searchQuery = search ? `\u0026search=${encodeURIComponent(search)}` : '';\n    const tagsQuery = tags.length \u003e 0 ? `\u0026tags=${encodeURIComponent(tags.join(','))}` : '';\n    redirect(`/forum?page=${validatedPage}${searchQuery}${tagsQuery}`);\n  }\n\n  return (\n    \u003cdiv className=\"transition-colors flex flex-col items-center min-h-screen text-black dark:text-[#D5D5D5] px-8 py-8\"\u003e\n      \u003ch1 className=\"text-center mb-4\"\u003eForum\u003c/h1\u003e\n\n      \u003cdiv className=\"hidden w-5/6 lg:w-1/2 md:flex items-center justify-center p-4 space-y-4 sm:space-y-0 sm:space-x-4 pt-2\"\u003e\n        \u003cDropdown pageType='forum' /\u003e\n        \u003cSearchBar pageType=\"forum\" initialQuery={search} /\u003e\n        \u003cNewForumButton /\u003e\n      \u003c/div\u003e\n\n      \u003cdiv className='flex-col w-5/6 md:hidden space-y-4'\u003e\n        \u003cSearchBar pageType=\"forum\" initialQuery={search} /\u003e\n        \u003cdiv className='flex justify-between'\u003e\n          \u003cDropdown pageType='forum' /\u003e\n          \u003cNewForumButton /\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n\n      \u003cdiv className=\"w-full mx-auto\"\u003e\n        {paginatedForumPosts.length \u003e 0 ? (\n          \u003cdiv className=\"space-y-4\"\u003e\n            {paginatedForumPosts.map((eachPost) =\u003e (\n              \u003cForumCard\n                key={eachPost.id}\n                title={eachPost.title}\n                author={eachPost.author.name || 'Unknown'}\n                desc={eachPost.description || 'No description available'}\n                createdAt={eachPost.createdAt}\n                tags={eachPost.tags}\n                post={eachPost}\n                comments={eachPost.comments}\n              /\u003e\n            ))}\n          \u003c/div\u003e\n        ) : (\n          \u003cp className=\"text-center py-8\"\u003e\n            {search || tags.length \u003e 0\n              ? \"No forum posts found matching your search or selected tags.\"\n              : \"No forum posts found.\"}\n          \u003c/p\u003e\n        )}\n      \u003c/div\u003e\n\n      {totalPages \u003e 1 \u0026\u0026 (\n        \u003cdiv className=\"mt-auto\"\u003e\n          \u003cPagination\n            currentPage={validatedPage}\n            totalPages={totalPages}\n            basePath=\"/forum\"\n            searchQuery={search}\n            tagsQuery={tags.join(',')}\n          /\u003e\n        \u003c/div\u003e\n      )}\n    \u003c/div\u003e\n  );\n}\n\nexport default forum;\n",
      "dependencies": [
        "react",
        "fuse.js",
        "@prisma/client",
        "next/navigation",
        "@/app/auth"
      ]
    },
    {
      "id": 48,
      "name": "home.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/@protected_routes/home/home.tsx",
      "content": "import React from \"react\";\nimport { auth } from \"@/app/auth\";\nimport { PrismaClient, Note, PastPaper, ForumPost, Subject } from '@prisma/client';\nimport CommonResource from \"@/app/components/CommonResource\";\nimport UserName from \"./display_username\";\nimport { GradientText } from \"@/app/components/landing_page/landing\";\nimport NothingViewedOrFavSvg from \"@/public/assets/nothingviewedorfav.svg\"\nimport Image from \"next/image\";\nimport Link from \"next/link\";\n\nfunction getQuirkyLine() {\n    const collection: string[] = [\n        \"You've got this! Even if 'this' means a borderline psychotic level of caffeine consumption.\",\n        \"They laughed when I said I'd learn a semester's worth of material in one night. Now they're asking for my notes. #Who'sLaughingNow?\",\n        \"Sleep is for the victors... of tomorrow's nap.\",\n        \"Sleep is optional, caffeine is mandatory\",\n        \"You might not feel like a genius now, but you will after this exam.\",\n        \"Practice makes progress... and hopefully, perfection.\",\n        \"Share your knowledge, save a life (or at least a grade)\",\n        \"I'm not lazy, I'm just selectively productive.\",\n        \"Coffee is my superpower.\",\n        \"This coffee is keeping my sanity intact.\"\n    ]\n\n    return collection[Math.floor(Math.random() * collection.length)];\n}\n\nfunction NothingViewedOrFav({ sectionName }: { sectionName: string }) {\n    sectionName = sectionName === \"Favourites\" ? \"favourited\" : \"viewed\";\n    return (\n        \u003cdiv className=\"flex flex-col md:flex-row border rounded-lg w-fit md:w-2/3\n            p-2 md:p-10 border-[#82BEE9] dark:border-[#D5D5D5]\n            justify-evenly items-center md:items-start\"\u003e\n            \u003cImage src={NothingViewedOrFavSvg} alt=\"Nothing Viewed Or Favourited\" className=\"h-[100px] md:h-[150px] lg:h-[150px]\" /\u003e\n            \u003cdiv className=\"flex flex-col gap-2 justify-center\"\u003e\n                \u003ch3\u003eYou have not {sectionName} anything\u003c/h3\u003e\n                \u003cdiv className=\"space-y-2\"\u003e\n                    \u003cp\u003eGo to:\u003c/p\u003e\n                    \u003cdiv className=\"flex *:px-1 p-2 bg-[#82BEE9] text-sm md:text-base\n                        dark:bg-[#232530] rounded-lg *:rounded-md justify-between\n                        md:justify-center w-full md:w-fit items-center\"\u003e\n                        \u003cLink href={'/past_papers'} className=\"bg-inherit hover:bg-white/10 \"\u003ePapers\u003c/Link\u003e\n                        \u003cp\u003e|\u003c/p\u003e\n                        \u003cLink href={'/notes'} className=\"bg-inherit hover:bg-white/10\"\u003eNotes\u003c/Link\u003e\n                        \u003cp\u003e|\u003c/p\u003e\n                        \u003cLink href={'/forum'} className=\"bg-inherit hover:bg-white/10\"\u003eForum\u003c/Link\u003e\n                        \u003cp\u003e|\u003c/p\u003e\n                        \u003cLink href={'/resources'} className=\"bg-inherit hover:bg-white/10\"\u003eResources\u003c/Link\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    );\n}\n\ntype ViewedItem =\n    | { type: 'note', item: Note }\n    | { type: 'pastPaper', item: PastPaper }\n    | { type: 'forumPost', item: ForumPost }\n    | { type: 'subject', item: Subject };\n\nconst prisma = new PrismaClient();\nasync function getRecentlyViewedItems(userId: string): Promise\u003cViewedItem[]\u003e {\n    const recentViews = await prisma.viewHistory.findMany({\n        where: { userId: userId },\n        orderBy: { viewedAt: 'desc' },\n        take: 3,\n        include: { note: true, pastPaper: true, forumPost: true, subject: true },\n    });\n\n    return recentViews\n        .map(view =\u003e {\n            if (view.note) return { type: 'note' as const, item: view.note };\n            if (view.pastPaper) return { type: 'pastPaper' as const, item: view.pastPaper };\n            if (view.forumPost) return { type: 'forumPost' as const, item: view.forumPost };\n            if (view.subject) return { type: 'subject' as const, item: view.subject };\n            return null;\n        })\n        .filter((item): item is ViewedItem =\u003e item !== null);\n}\nasync function getFavoriteItems(userId: string): Promise\u003cViewedItem[]\u003e {\n    const user = await prisma.user.findUnique({\n        where: { id: userId },\n        include: {\n            bookmarkedNotes: {\n                take: 2,\n            },\n            bookmarkedPastPapers: {\n                take: 2\n            },                          // Change these values as you need \n            bookmarkedForumPosts: {\n                take: 2,\n            },\n            bookmarkedResources: {\n                take: 2,\n            },\n        },\n    });\n\n    const notes = (user?.bookmarkedNotes || []).map(note =\u003e ({ type: 'note' as const, item: note }));\n    const pastPapers = (user?.bookmarkedPastPapers || []).map(paper =\u003e ({ type: 'pastPaper' as const, item: paper }));\n    const forumPosts = (user?.bookmarkedForumPosts || []).map(post =\u003e ({ type: 'forumPost' as const, item: post }));\n    const subjects = (user?.bookmarkedResources || []).map(subject =\u003e ({ type: 'subject' as const, item: subject }));\n\n    return [...notes, ...pastPapers, ...forumPosts, ...subjects];\n}\n\n\nconst Home = async () =\u003e {\n    const session = await auth();\n    const userId = session?.user?.id;\n\n    let recentlyViewedItems: ViewedItem[] = [];\n    let favoriteItems: ViewedItem[] = [];\n\n    if (userId) {\n        recentlyViewedItems = await getRecentlyViewedItems(userId);\n        favoriteItems = await getFavoriteItems(userId);\n    }\n\n    const emptyFav: boolean = favoriteItems.length === 0;\n    const emptyRecentlyViewed: boolean = recentlyViewedItems.length === 0;\n\n    const getTitle = (item: ViewedItem['item']) =\u003e {\n        if ('title' in item) {\n            return item.title;\n        } else if ('name' in item) {\n            return item.name;\n        }\n        return 'Untitled';\n    };\n    return (\n        \u003cdiv className=\"bg-[#C2E6EC] dark:bg-[hsl(224,48%,9%)] min-h-screen text-black dark:text-[#D5D5D5] flex flex-col transition-colors\"\u003e\n            \u003cLink \n  href=\"https://os.acmvit.in/\" \n  target=\"_blank\" \n  rel=\"noopener noreferrer\"\n\u003e\n  \u003cdiv className=\"bg-[#5FC4E7] dark:bg-gradient-to-tr to-[#27BAEC] from-[#253EE0] dark:text-white text-center py-2 text-sm\"\u003e\n   Want to know what goes behind this cool website? Join our chapter to find out!\n  \u003c/div\u003e\n\u003c/Link\u003e \n            \u003cdiv className=\"container mx-auto px-4 py-8 max-w-7xl\"\u003e\n                \u003cheader className=\"text-center mb-12\"\u003e\n                    \u003ch1 className=\"text-4xl md:text-6xl font-bold mb-4\"\u003eWelcome \u003cGradientText\u003e\u003cUserName /\u003e\u003c/GradientText\u003e\u003c/h1\u003e\n                    \u003cp className=\"text-lg md:text-xl text-gray-700 dark:text-gray-300\"\u003e{getQuirkyLine()}\u003c/p\u003e\n                \u003c/header\u003e\n\n                \u003cmain\u003e\n                    \u003csection className=\"mb-16\"\u003e\n                        \u003cdiv className=\"flex items-center justify-center text-xl sm:text-2xl font-bold mb-6 pt-4\"\u003e\n                            \u003cdiv className=\"flex-grow border-t border-black dark:border-[#D5D5D5] \"\u003e\u003c/div\u003e\n                            \u003cspan className=\"mx-4\"\u003eRecently Viewed\u003c/span\u003e\n                            \u003cdiv className=\"flex-grow border-t border-black dark:border-[#D5D5D5]\"\u003e\u003c/div\u003e\n                        \u003c/div\u003e\n                        {emptyRecentlyViewed \u0026\u0026\n                            \u003cdiv className=\"flex justify-center\"\u003e\n                                \u003cNothingViewedOrFav sectionName=\"RecentlyViewed\" /\u003e\n                            \u003c/div\u003e\n                        }\n                        \u003cdiv className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 justify-items-center\"\u003e\n                            {recentlyViewedItems.map((item) =\u003e (\n                                \u003cCommonResource\n                                    key={item.item.id}\n                                    category={item.type}\n                                    title={getTitle(item.item)} // maybe run migrations and change subject.name to title and then item.item.tile\n                                    thing={item.item}\n                                /\u003e\n                            ))}\n                        \u003c/div\u003e\n                    \u003c/section\u003e\n\n                    \u003csection\u003e\n                        \u003cdiv className=\"flex items-center justify-center text-xl sm:text-2xl font-bold mb-6 pt-4\"\u003e\n                            \u003cdiv className=\"flex-grow border-t border-black dark:border-[#D5D5D5] \"\u003e\u003c/div\u003e\n                            \u003cspan className=\"mx-4\"\u003eFavourites\u003c/span\u003e\n                            \u003cdiv className=\"flex-grow border-t border-black dark:border-[#D5D5D5]\"\u003e\u003c/div\u003e\n                        \u003c/div\u003e\n                        {emptyFav \u0026\u0026\n                            \u003cdiv className=\"flex justify-center\"\u003e\n                                \u003cNothingViewedOrFav sectionName=\"Favourites\" /\u003e\n                            \u003c/div\u003e\n                        }\n                        \u003cdiv className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 justify-items-center\"\u003e\n                            {favoriteItems.length \u003e 0 \u0026\u0026 favoriteItems.slice(0, 9).map((item) =\u003e (\n                                \u003cCommonResource\n                                    key={item.item.id}\n                                    category={item.type}\n                                    title={getTitle(item.item)}\n                                    thing={item.item}\n                                /\u003e\n                            ))}\n                        \u003c/div\u003e\n                    \u003c/section\u003e\n                \u003c/main\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    );\n};\n\nexport default Home;\n",
      "dependencies": [
        "@/app/components/CommonResource",
        "next/image",
        "next/link",
        "@/app/auth",
        "@prisma/client",
        "@/app/components/landing_page/landing",
        "@/public/assets/nothingviewedorfav.svg",
        "react"
      ]
    },
    {
      "id": 49,
      "name": "loading.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/@protected_routes/home/loading.tsx",
      "content": "import Loading from \"../loading\";\n\nexport default Loading;\n"
    },
    {
      "id": 50,
      "name": "ExamCookerLogo.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/components/common/ExamCookerLogo.tsx",
      "content": "import Image from \"next/image\"\nimport ExamCookerLogoIcon from \"@/public/assets/LogoIcon.svg\"\n\nfunction GradientText({ children }: { children: React.ReactNode }) {\n    return (\n        \u003cspan className=\"text-transparent bg-clip-text bg-gradient-to-tr to-[#27BAEC] from-[#253EE0]\"\u003e\n            {children}\n        \u003c/span\u003e\n    );\n}\n\nexport default function ExamCookerLogo() {\n    return \u003cdiv className=\"flex flex-row items-center\"\u003e\n        \u003cImage\n            src={ExamCookerLogoIcon}\n            alt='ExamCooker Logo Icon'\n        /\u003e\n        \u003ch2\u003eExam\u003c/h2\u003e\n        \u003cGradientText\u003e\u003ch2\u003eCooker\u003c/h2\u003e\u003c/GradientText\u003e\n    \u003c/div\u003e\n\n}\n",
      "dependencies": [
        "next/image",
        "@/public/assets/LogoIcon.svg"
      ]
    },
    {
      "id": 51,
      "name": "quizJSON.ts",
      "category": "file",
      "path": "ExamCooker-2024/public/assets/quizJSON.ts",
      "content": "export const WildlifeJSON = {\n  \"title\": \"Wild Life Ecology\",\n  \"code\": \"102104073\",\n  \"weeks\": [\n    {\n      \"name\": \"1\",\n      \"questions\": [\n        {\n          \"question\": \"\\\"Enquiry into plants\\\" is a book written by\",\n          \"options\": [\n            \"Theophrastus\",\n            \"Linnaeus\",\n            \"Malthus\",\n            \"Humboldt\"\n          ],\n          \"answer\": \"Theophrastus\"\n        },\n        {\n          \"question\": \"In the Greek word root of Ecology, Oikos refers to\",\n          \"options\": [\n            \"household\",\n            \"preservation\",\n            \"environment\",\n            \"study\"\n          ],\n          \"answer\": \"household\"\n        },\n        {\n          \"question\": \"In the Greek word root of Ecology, logos refers to\",\n          \"options\": [\n            \"household\",\n            \"preservation\",\n            \"environment\",\n            \"study\"\n          ],\n          \"answer\": \"study\"\n        },\n        {\n          \"question\": \"Ecology is the scientific study of interactions among organisms and their_____. (fill in the blanks)\",\n          \"options\": [\n            \"habitat\",\n            \"niche\",\n            \"environment\",\n            \"population\"\n          ],\n          \"answer\": \"environment\"\n        },\n        {\n          \"question\": \"Who amongst these is considered the father of Biogeography?\",\n          \"options\": [\n            \"Theophrastus\",\n            \"Linnaeus\",\n            \"Malthus\",\n            \"Humboldt\"\n          ],\n          \"answer\": \"Humboldt\"\n        },\n        {\n          \"question\": \"Which of these is not a characteristic of fitness?\",\n          \"options\": [\n            \"Fitness is environment-specific\",\n            \"Fitness is species-specific\",\n            \"Higher reproductive rate means higher fitness\",\n            \"Fitness should be measured across several generations\"\n          ],\n          \"answer\": \"Higher reproductive rate means higher fitness\"\n        },\n        {\n          \"question\": \"Which of these is not a kind of selection?\",\n          \"options\": [\n            \"directional\",\n            \"stochastic\",\n            \"disruptive\",\n            \"stabilising\"\n          ],\n          \"answer\": \"stochastic\"\n        },\n        {\n          \"question\": \"Ecology is the scientific study of _______that determine the distribution and abundance of organisms. (Fill in the blanks)\",\n          \"options\": [\n            \"statics\",\n            \"interactions\",\n            \"dynamics\",\n            \"habitat\"\n          ],\n          \"answer\": \"interactions\"\n        },\n        {\n          \"question\": \"Which of these is not a characteristic of fitness?\",\n          \"options\": [\n            \"Fitness is environment-specific.\",\n            \"Fitness is species-specific.\",\n            \"Fitness works on traits such as size and speed.\",\n            \"Fitness should be measured across several generations.\"\n          ],\n          \"answer\": \"Fitness works on traits such as size and speed.\"\n        },\n        {\n          \"question\": \"Which of these is not a step in natural selection?\",\n          \"options\": [\n            \"variation\",\n            \"underpopulation\",\n            \"struggle for existence\",\n            \"survival of the fittest\"\n          ],\n          \"answer\": \"underpopulation\"\n        }\n      ]\n    },\n    {\n      \"name\": \"2\",\n      \"questions\": [\n        {\n          \"question\": \"Hierarchy emerges almost inevitably through a wide variety of evolutionary processes, for the simple reason that hierarchical structures are ___ (fill in the blank)\",\n          \"options\": [\n            \"perfect\",\n            \"imperfect\",\n            \"stable\",\n            \"unstable\"\n          ],\n          \"answer\": \"stable\"\n        },\n        {\n          \"question\": \"the mitochondrion is a/an\",\n          \"options\": [\n            \"sub-cellular organelle\",\n            \"cell\",\n            \"tissue\",\n            \"organ\"\n          ],\n          \"answer\": \"sub-cellular organelle\"\n        },\n        {\n          \"question\": \"the laboratory approach to ecology uses\",\n          \"options\": [\n            \"equations\",\n            \"models\",\n            \"observations\",\n            \"experiments\"\n          ],\n          \"answer\": \"experiments\"\n        },\n        {\n          \"question\": \"\\\"the diversity that exists among different geographies\\\" are\",\n          \"options\": [\n            \"alpha biodiversity\",\n            \"beta biodiversity\",\n            \"gamma biodiversity\",\n            \"delta biodiversity\"\n          ],\n          \"answer\": \"gamma biodiversity\"\n        },\n        {\n          \"question\": \"the hierarchical system was given by\",\n          \"options\": [\n            \"simon\",\n            \"watson\",\n            \"hutchinson\",\n            \"humboldt\"\n          ],\n          \"answer\": \"simon\"\n        },\n        {\n          \"question\": \"\\\"groups of actually or potentially interbreeding natural populations, which are reproductively isolated from other such species\\\" is a definition of\",\n          \"options\": [\n            \"cells\",\n            \"species\",\n            \"ecosystems\",\n            \"biomes\"\n          ],\n          \"answer\": \"species\"\n        },\n        {\n          \"question\": \"\\\"the diversity that exists within an ecosystem\\\" is\",\n          \"options\": [\n            \"alpha biodiversity\",\n            \"beta biodiversity\",\n            \"gamma biodiversity\",\n            \"delta biodiversity\"\n          ],\n          \"answer\": \"alpha biodiversity\"\n        },\n        {\n          \"question\": \"the emergent principle can be stated as\",\n          \"options\": [\n            \"whole = sum of parts\",\n            \"whole \u003c sum of parts\",\n            \"whole \u003e sum of parts\",\n            \"none of these\"\n          ],\n          \"answer\": \"whole \u003e sum of parts\"\n        },\n        {\n          \"question\": \"there is more biodiversity in areas with\",\n          \"options\": [\n            \"less competition, less predation\",\n            \"less competition, more predation\",\n            \"more competition, more predation\",\n            \"more competition, less predation\"\n          ],\n          \"answer\": \"more competition, more predation\"\n        },\n        {\n          \"question\": \"for more biodiversity, the level of disturbance should be\",\n          \"options\": [\n            \"less\",\n            \"intermediate\",\n            \"more\",\n            \"none of these\"\n          ],\n          \"answer\": \"intermediate\"\n        }\n      ]\n    },\n    {\n      \"name\": \"3\",\n      \"questions\": [\n        {\n          \"question\": \"birds on giraffe are an example of\",\n          \"options\": [\n            \"colony\",\n            \"commensalism\",\n            \"protocooperation\",\n            \"allelopathy\"\n          ],\n          \"answer\": \"protocooperation\"\n        },\n        {\n          \"question\": \"egrets with buffaloes are an example of\",\n          \"options\": [\n            \"colony\",\n            \"commensalism\",\n            \"protocooperation\",\n            \"allelopathy\"\n          ],\n          \"answer\": \"commensalism\"\n        },\n        {\n          \"question\": \"the scientific study of animal behaviour is called\",\n          \"options\": [\n            \"behaviourism\",\n            \"ecology\",\n            \"ethology\",\n            \"prey- predator dynamics\"\n          ],\n          \"answer\": \"ethology\"\n        },\n        {\n          \"question\": \"the interaction between exotic shrubs and trees through the action of seed predators is an example of\",\n          \"options\": [\n            \"infraspecific competition\",\n            \"apparent competition\",\n            \"disguised competition\",\n            \"harmonious competition\"\n          ],\n          \"answer\": \"apparent competition\"\n        },\n        {\n          \"question\": \"harmonious competition occur where\",\n          \"options\": [\n            \"at least one participant is benefited\",\n            \"at least one participant is unharmed\",\n            \"both participants are benefited\",\n            \"both participants are unharmed\"\n          ],\n          \"answer\": \"both participants are unharmed\"\n        },\n        {\n          \"question\": \"Hamilton's rule can be stated as\",\n          \"options\": [\n            \"rB \u003c C\",\n            \"rB \u003e C\",\n            \"rB = C\",\n            \"rB + C = 0\"\n          ],\n          \"answer\": \"rB \u003e C\"\n        },\n        {\n          \"question\": \"trampling of grass due to the movement of animals is an example of\",\n          \"options\": [\n            \"mutualism\",\n            \"ammensalism\",\n            \"commensalism\",\n            \"protocooperation\"\n          ],\n          \"answer\": \"ammensalism\"\n        },\n        {\n          \"question\": \"i observe a monkey take a tick out of another monkey's head and ear it. In the social context, this behaviour would be called\",\n          \"options\": [\n            \"tick hunting\",\n            \"auto grooming\",\n            \"allo grooming\",\n            \"foraging\"\n          ],\n          \"answer\": \"allo grooming\"\n        },\n        {\n          \"question\": \"an inventory of behaviours exhibited by an animal during a behaviour exercise is called\",\n          \"options\": [\n            \"ecogram\",\n            \"ethogram\",\n            \"behaviourogram\",\n            \"animalogram\"\n          ],\n          \"answer\": \"ethogram\"\n        },\n        {\n          \"question\": \"i observe a bird take a tick out of another bird's head and eat it. in the social context, this behaviour would be called\",\n          \"options\": [\n            \"tick hunting\",\n            \"auto grooming\",\n            \"allo grooming\",\n            \"foraging\"\n          ],\n          \"answer\": \"allo grooming\"\n        }\n      ]\n    },\n    {\n      \"name\": \"4\",\n      \"questions\": [\n        {\n          \"question\": \"consider the food chain grass --\u003e grasshopper --\u003e frog --\u003e snake --\u003e hawk, as we move up the food chain,\",\n          \"options\": [\n            \"available energy decreases\",\n            \"available energy increases\",\n            \"available energy remains same\",\n            \"available energy is zero everywhere\"\n          ],\n          \"answer\": \"available energy decreases\"\n        },\n        {\n          \"question\": \"consider the food chain grass --\u003e grasshopper --\u003e frog --\u003e snake --\u003e hawk, in the food chain\",\n          \"options\": [\n            \"hawk is producer\",\n            \"hawk is consumer and carnivore\",\n            \"hawk is consumer and herbivore\",\n            \"hawk is decomposer\"\n          ],\n          \"answer\": \"hawk is consumer and carnivore\"\n        },\n        {\n          \"question\": \"trees --\u003e birds --\u003e parasites --\u003e hyperparasites represent\",\n          \"options\": [\n            \"upright pyramid of numbers\",\n            \"inverted pyramid of numbers\",\n            \"spindle pyramid of numbers\",\n            \"dumb-bell pyramid of numbers\"\n          ],\n          \"answer\": \"inverted pyramid of numbers\"\n        },\n        {\n          \"question\": \"consider the food chain grass --\u003e grasshopper --\u003e frog --\u003e snake --\u003e hawk, in this food chain\",\n          \"options\": [\n            \"frog is producer\",\n            \"frog is consumer and carnivore\",\n            \"frog is consumer and herbivore\",\n            \"frog is decomposer\"\n          ],\n          \"answer\": \"frog is consumer and carnivore\"\n        },\n        {\n          \"question\": \"at the compensation point\",\n          \"options\": [\n            \"photosynthesis = respiration\",\n            \"photosynthesis \u003c respiration\",\n            \"photosynthesis \u003e respiration\",\n            \"photosynthesis = 0\"\n          ],\n          \"answer\": \"photosynthesis = respiration\"\n        },\n        {\n          \"question\": \"tree --\u003e frugivorous birds --\u003e hawk represents\",\n          \"options\": [\n            \"upright pyramid of numbers\",\n            \"inverted pyramid of numbers\",\n            \"spindle pyramid of numbers\",\n            \"dumb-bell pyramid of numbers\"\n          ],\n          \"answer\": \"spindle pyramid of numbers\"\n        },\n        {\n          \"question\": \"glacial lakes are typical examples of\",\n          \"options\": [\n            \"eutrophic lakes\",\n            \"hypereutrophic lakes\",\n            \"oligotrophic lakes\",\n            \"mesotrophic lakes\"\n          ],\n          \"answer\": \"oligotrophic lakes\"\n        },\n        {\n          \"question\": \"consider the food chain grass --\u003e grasshopper --\u003e frog --\u003e snake --\u003e hawk, in this food chain\",\n          \"options\": [\n            \"more numbers of hawks than grasshoppers can be supported\",\n            \"more numbers of grasshoppers than hawks can be supported\",\n            \"equal numbers of hawks and grasshoppers can be supported\",\n            \"none of these\"\n          ],\n          \"answer\": \"more numbers of grasshoppers than hawks can be supported\"\n        },\n        {\n          \"question\": \"if we all become vegetarians, we'll be able to support our large populations. this can be explained through\",\n          \"options\": [\n            \"10% rule\",\n            \"1% rule\",\n            \"trophic cascades\",\n            \"biodiversity\"\n          ],\n          \"answer\": \"10% rule\"\n        },\n        {\n          \"question\": \"net primary productivity is given by\",\n          \"options\": [\n            \"APAR x LUE\",\n            \"APAR + LUE\",\n            \"APAR - LUE\",\n            \"APAR / LUE\"\n          ],\n          \"answer\": \"APAR x LUE\"\n        }\n      ]\n    },\n    {\n      \"name\": \"5\",\n      \"questions\": [\n        {\n          \"question\": \"__ is how close the measured values are to the correct value\",\n          \"options\": [\n            \"accuracy\",\n            \"precision\",\n            \"bias\",\n            \"variance\"\n          ],\n          \"answer\": \"accuracy\"\n        },\n        {\n          \"question\": \"which of these is not a measure of absolute population density?\",\n          \"options\": [\n            \"total count\",\n            \"pelt count\",\n            \"capture- recapture method\",\n            \"removal method\"\n          ],\n          \"answer\": \"pelt count\"\n        },\n        {\n          \"question\": \"the logistic growth equation, when plotted, appears\",\n          \"options\": [\n            \"I shaped\",\n            \"J shaped\",\n            \"S shaped\",\n            \"O shaped\"\n          ],\n          \"answer\": \"S shaped\"\n        },\n        {\n          \"question\": \"__ employs a simple rule of selecting every kth unit starting with a number chosen at random from 1 to k as the random start\",\n          \"options\": [\n            \"simple random sampling\",\n            \"systematic sampling\",\n            \"stratified sampling\",\n            \"multistage sampling\"\n          ],\n          \"answer\": \"systematic sampling\"\n        },\n        {\n          \"question\": \"the juvenile mortality rate is the annual number of deaths of juveniles per\",\n          \"options\": [\n            \"100 births\",\n            \"1000 births\",\n            \"100 live births\",\n            \"1000 live births\"\n          ],\n          \"answer\": \"1000 live births\"\n        },\n        {\n          \"question\": \"the minimum replacement level fertility for a population to grow should be greater than\",\n          \"options\": [\n            \"1\",\n            \"2\",\n            \"3\",\n            \"4\"\n          ],\n          \"answer\": \"2\"\n        },\n        {\n          \"question\": \"pan traps are used for sampling\",\n          \"options\": [\n            \"bees\",\n            \"butterflies\",\n            \"non-pollinator insects\",\n            \"pollinator insects\"\n          ],\n          \"answer\": \"pollinator insects\"\n        },\n        {\n          \"question\": \"which of these is true\",\n          \"options\": [\n            \"physiological longevity \u003e ecological longevity\",\n            \"physiological longevity = ecological longevity\",\n            \"physiological longevity \u003c ecological longevity\",\n            \"a or b\"\n          ],\n          \"answer\": \"a or b\"\n        },\n        {\n          \"question\": \"a sampling procedure such that each possible combination of sampling units out of the population has the same chance of being selected is referred to as\",\n          \"options\": [\n            \"simple random sampling\",\n            \"systematic sampling\",\n            \"stratified sampling\",\n            \"multistage sampling\"\n          ],\n          \"answer\": \"simple random sampling\"\n        },\n        {\n          \"question\": \"cover board surveys are typically used for sampling\",\n          \"options\": [\n            \"herpetofauna\",\n            \"fishes\",\n            \"large mammals\",\n            \"carnivores\"\n          ],\n          \"answer\": \"herpetofauna\"\n        }\n      ]\n    },\n    {\n      \"name\": \"6\",\n      \"questions\": [\n        {\n          \"question\": \"a climax caused by wildfires is an example of\",\n          \"options\": [\n            \"climatic climax\",\n            \"edaphic climax\",\n            \"disclimax\",\n            \"catastrophic climax\"\n          ],\n          \"answer\": \"catastrophic climax\"\n        },\n        {\n          \"question\": \"when compared to generalist species, specialist species have\",\n          \"options\": [\n            \"narrower niches\",\n            \"broader niches\",\n            \"same-size niches\",\n            \"none of these\"\n          ],\n          \"answer\": \"narrower niches\"\n        },\n        {\n          \"question\": \"which of these depicts correctly the lithosere primary succession\",\n          \"options\": [\n            \"rock --\u003e crustose lichen --\u003e foliose lichen --\u003e moss --\u003e herbaceous stage --\u003e shrub --\u003e woodland --\u003e climax\",\n            \"rock --\u003e foliose lichen --\u003e crustose lichen --\u003e moss --\u003e herbaceous stage --\u003e shrub --\u003e woodland --\u003e climax\",\n            \"moss --\u003e crustose lichen --\u003e foliose lichen --\u003e rock --\u003e herbaceous stage --\u003e shrub --\u003e woodland --\u003e climax\",\n            \"rock --\u003e crustose lichen --\u003e foliose lichen --\u003e shrub --\u003e herbaceous stage --\u003e moss --\u003e woodland --\u003e climax\"\n          ],\n          \"answer\": \"rock --\u003e crustose lichen --\u003e foliose lichen --\u003e moss --\u003e herbaceous stage --\u003e shrub --\u003e woodland --\u003e climax\"\n        },\n        {\n          \"question\": \"importance value can be written as\",\n          \"options\": [\n            \"relative density + relative frequency X relative dominance\",\n            \"relative density X relative frequency + relative dominance\",\n            \"relative density + relative frequency + relative dominance\",\n            \"relative density X relative frequency X relative dominance\"\n          ],\n          \"answer\": \"relative density + relative frequency + relative dominance\"\n        },\n        {\n          \"question\": \"lithosere is an example of\",\n          \"options\": [\n            \"hydrosere\",\n            \"xerosere\",\n            \"psammosere\",\n            \"halosere\"\n          ],\n          \"answer\": \"xerosere\"\n        },\n        {\n          \"question\": \"importance value varies from\",\n          \"options\": [\n            \"0 to 10\",\n            \"0 to 50\",\n            \"0 to 100\",\n            \"0 to 300\"\n          ],\n          \"answer\": \"0 to 300\"\n        },\n        {\n          \"question\": \"a species found most frequently in a particular community, but also present occasionally in others is called\",\n          \"options\": [\n            \"accidental species\",\n            \"indifferent species\",\n            \"selective species\",\n            \"exclusive species\"\n          ],\n          \"answer\": \"selective species\"\n        },\n        {\n          \"question\": \"the climax near Tindi village is being controlled by disturbance by cattle. this is an example of\",\n          \"options\": [\n            \"climatic climax\",\n            \"edaphic climax\",\n            \"disclimax\",\n            \"catastrophic climax\"\n          ],\n          \"answer\": \"disclimax\"\n        },\n        {\n          \"question\": \"which of these is correct?\",\n          \"options\": [\n            \"fundamental niche \u003e realised niche\",\n            \"fundamental niche = realised niche\",\n            \"fundamental niche \u003c realised niche\",\n            \"a or b\"\n          ],\n          \"answer\": \"a or b\"\n        },\n        {\n          \"question\": \"which of these is not a characteristic of pioneer species\",\n          \"options\": [\n            \"ability to grow on bare rocks\",\n            \"ability to tolerate extreme temperatures\",\n            \"large size\",\n            \"short life span\"\n          ],\n          \"answer\": \"large size\"\n        }\n      ]\n    },\n    {\n      \"name\": \"7\",\n      \"questions\": [\n        {\n          \"question\": \"i tried growing vegetables under my teak plantation, but the vegetable plants died out. i should be concerned about\",\n          \"options\": [\n            \"autophagy\",\n            \"allelophagy\",\n            \"autopathy\",\n            \"allelopathy\"\n          ],\n          \"answer\": \"allelopathy\"\n        },\n        {\n          \"question\": \"which of these is a physical factor of habitat?\",\n          \"options\": [\n            \"soil\",\n            \"moisture\",\n            \"predators\",\n            \"temperatures\"\n          ],\n          \"answer\": \"predators\"\n        },\n        {\n          \"question\": \"\\\"the rate of biological process is limited by that factor in least amount relative to requirement, so there is a single limiting factor\\\" this is the statement for\",\n          \"options\": [\n            \"Liebig's law of minimum\",\n            \"Liebig's law of maximum\",\n            \"Shelford's law of tolerance\",\n            \"Shelford's law of intolerance\"\n          ],\n          \"answer\": \"Liebig's law of minimum\"\n        },\n        {\n          \"question\": \"transplantation experiments are used to find\",\n          \"options\": [\n            \"potential range\",\n            \"effective range\",\n            \"actual range\",\n            \"economic range\"\n          ],\n          \"answer\": \"potential range\"\n        },\n        {\n          \"question\": \"\\\"quick movement over large distances, often across unsuitable terrain\\\" is a definition of\",\n          \"options\": [\n            \"diffusion\",\n            \"secular dispersal\",\n            \"jump dispersal\",\n            \"drifting\"\n          ],\n          \"answer\": \"jump dispersal\"\n        },\n        {\n          \"question\": \"the movement of lions across the Gir landscape is an example of\",\n          \"options\": [\n            \"diffusion\",\n            \"secular dispersal\",\n            \"jump dispersal\",\n            \"drifting\"\n          ],\n          \"answer\": \"diffusion\"\n        },\n        {\n          \"question\": \"good climate is a\",\n          \"options\": [\n            \"chemical factor\",\n            \"demographic factor\",\n            \"push factor\",\n            \"pull factor\"\n          ],\n          \"answer\": \"pull factor\"\n        },\n        {\n          \"question\": \"scarcity of food is a\",\n          \"options\": [\n            \"chemical factor\",\n            \"demographic factor\",\n            \"push factor\",\n            \"pull factor\"\n          ],\n          \"answer\": \"push factor\"\n        },\n        {\n          \"question\": \"\\\"the geographical distribution of a species will be controlled by that environment factor for which the organism has the narrowest range of tolerance\\\" this is the statement for\",\n          \"options\": [\n            \"Liebig's law of minimum\",\n            \"Liebig's law of maximum\",\n            \"Shelford's law of tolerance\",\n            \"Shelford's law of intolerance\"\n          ],\n          \"answer\": \"Shelford's law of tolerance\"\n        },\n        {\n          \"question\": \"the movement of individuals away from their place of birth or hatching or seed production into a new habitat or area to survive and reproduce is called\",\n          \"options\": [\n            \"translocation\",\n            \"migration\",\n            \"dispersal\",\n            \"drifting\"\n          ],\n          \"answer\": \"dispersal\"\n        }\n      ]\n    },\n    {\n      \"name\": \"8\",\n      \"questions\": [\n        {\n          \"question\": \"According to Leopold, which of these is not a tool of habitat management\",\n          \"options\": [\n            \"fire\",\n            \"gun\",\n            \"cattle\",\n            \"sickle\"\n          ],\n          \"answer\": \"sickle\"\n        },\n        {\n          \"question\": \"which of these correctly represents the process of habitat fragmentation and loss\",\n          \"options\": [\n            \"original forest --\u003e dissection --\u003e perforation --\u003e fragmentation --\u003e attrition\",\n            \"original forest --\u003e dissection --\u003e attrition --\u003e fragmentation --\u003e perforation\",\n            \"original forest --\u003e dissection --\u003e perforation --\u003e attrition --\u003e fragmentation\",\n            \"original forest --\u003e dissection --\u003e fragmentation --\u003e perforation --\u003e attrition\"\n          ],\n          \"answer\": \"original forest --\u003e dissection --\u003e perforation --\u003e fragmentation --\u003e attrition\"\n        },\n        {\n          \"question\": \"we prefer those areas for the creation of conservation reserve where the level of threat is\",\n          \"options\": [\n            \"very high\",\n            \"medium\",\n            \"very low\",\n            \"non-existent\"\n          ],\n          \"answer\": \"medium\"\n        },\n        {\n          \"question\": \"the \\\"subset of physical and biotic environmental factors that permit an animal (or plant) to survive and reproduce\\\" is the definition of\",\n          \"options\": [\n            \"habitat\",\n            \"ecosystem\",\n            \"biome\",\n            \"biosphere\"\n          ],\n          \"answer\": \"habitat\"\n        },\n        {\n          \"question\": \"captive breeding is an example of\",\n          \"options\": [\n            \"in-situ conservation\",\n            \"ex-situ conservation\",\n            \"in-situ preservation\",\n            \"ex-situ preservation\"\n          ],\n          \"answer\": \"ex-situ conservation\"\n        },\n        {\n          \"question\": \"which of these is a deterministic factor?\",\n          \"options\": [\n            \"environmental variation\",\n            \"forest fire\",\n            \"death rate\",\n            \"diseases\"\n          ],\n          \"answer\": \"death rate\"\n        },\n        {\n          \"question\": \"which of these is a stochastic factor\",\n          \"options\": [\n            \"birth rate\",\n            \"death rate\",\n            \"population structure\",\n            \"environmental fluctuation\"\n          ],\n          \"answer\": \"environmental fluctuation\"\n        },\n        {\n          \"question\": \"zoo is an example of\",\n          \"options\": [\n            \"in-situ conservation\",\n            \"ex-situ conservation\",\n            \"in-situ preservation\",\n            \"ex-situ preservation\"\n          ],\n          \"answer\": \"ex-situ conservation\"\n        },\n        {\n          \"question\": \"the acronym HIPPO does not include\",\n          \"options\": [\n            \"habitat loss\",\n            \"habitat enhancement\",\n            \"invasive species\",\n            \"human over- population\"\n          ],\n          \"answer\": \"habitat enhancement\"\n        },\n        {\n          \"question\": \"the acronym HIPPO does not include\",\n          \"options\": [\n            \"habitat loss\",\n            \"invasive species\",\n            \"pollination\",\n            \"pollution\"\n          ],\n          \"answer\": \"pollination\"\n        }\n      ]\n    },\n    {\n      \"name\": \"9\",\n      \"questions\": [\n        {\n          \"question\": \"which of these is a positive check according to Malthus?\",\n          \"options\": [\n            \"late marriage\",\n            \"war\",\n            \"celibacy\",\n            \"moral restraint\"\n          ],\n          \"answer\": \"war\"\n        },\n        {\n          \"question\": \"the demographic transition sees a society move from\",\n          \"options\": [\n            \"high birth rate, low death rate to low birth rate, low death rate\",\n            \"low birth rate, high death rate to low birth rate, low death rate\",\n            \"high birth rate, high death rate to low birth rate, low death rate\",\n            \"high birth rate, high death rate to low birth rate, high death rate\"\n          ],\n          \"answer\": \"high birth rate, high death rate to low birth rate, low death rate\"\n        },\n        {\n          \"question\": \"according to Malthusian model\",\n          \"options\": [\n            \"population grows in geometric progression, food supply increases in arithmetic progression\",\n            \"population grows in geometric progression, food supply increases in geometric progression\",\n            \"population grows in arithmetic progression, food supply increases in arithmetic progression\",\n            \"population grows in arithmetic progression, food supply increases in geometric progression\"\n          ],\n          \"answer\": \"population grows in geometric progression, food supply increases in arithmetic progression\"\n        },\n        {\n          \"question\": \"the book \\\"An essay on the principle of population\\\" was written by\",\n          \"options\": [\n            \"Darwin\",\n            \"Malthus\",\n            \"Spencer\",\n            \"Owens\"\n          ],\n          \"answer\": \"Malthus\"\n        },\n        {\n          \"question\": \"___ is used to identify which potential impacts are relevant to assess. (fill in the blank)\",\n          \"options\": [\n            \"screening\",\n            \"scoping\",\n            \"reporting\",\n            \"review\"\n          ],\n          \"answer\": \"scoping\"\n        },\n        {\n          \"question\": \"which of these is preventive check according to Malthus?\",\n          \"options\": [\n            \"foresight\",\n            \"vice\",\n            \"misery\",\n            \"flood\"\n          ],\n          \"answer\": \"foresight\"\n        },\n        {\n          \"question\": \"__ determines which projects or developments require a full or partial impact assessment study. (fill in the blank)\",\n          \"options\": [\n            \"screening\",\n            \"scoping\",\n            \"reporting\",\n            \"review\"\n          ],\n          \"answer\": \"screening\"\n        },\n        {\n          \"question\": \"which of these is a pillar of sustainability\",\n          \"options\": [\n            \"social sustainability\",\n            \"industrial sustainability\",\n            \"agricultural sustainability\",\n            \"trans- boundary sustainability\"\n          ],\n          \"answer\": \"social sustainability\"\n        },\n        {\n          \"question\": \"which of these is not a pillar of sustainability?\",\n          \"options\": [\n            \"environmental sustainability\",\n            \"economic sustainability\",\n            \"trans- boundary sustainability\",\n            \"agricultural sustainability\"\n          ],\n          \"answer\": \"trans- boundary sustainability\"\n        },\n        {\n          \"question\": \"the quantum of human impacts is given by\",\n          \"options\": [\n            \"I = P X A X T\",\n            \"I = P + A + T\",\n            \"I = P + A - T\",\n            \"I = P - (A+T)\"\n          ],\n          \"answer\": \"I = P X A X T\"\n        }\n      ]\n    },\n    {\n      \"name\": \"10\",\n      \"questions\": [\n        {\n          \"question\": \"which of these is not a climatic forcing for Earth?\",\n          \"options\": [\n            \"changes in plates tectonics\",\n            \"changes in Earth's orbit\",\n            \"changes in Sun's orbit\",\n            \"changes in Sun's strength\"\n          ],\n          \"answer\": \"changes in Sun's orbit\"\n        },\n        {\n          \"question\": \"Mesodebris in the context of plastic debris has fragment of size\",\n          \"options\": [\n            \"\u003e20mm\",\n            \"5-20 mm\",\n            \"\u003c5mm\",\n            \"\u003c1mm\"\n          ],\n          \"answer\": \"5-20 mm\"\n        },\n        {\n          \"question\": \"macrodebris in the context of plastic debris had fragment of size\",\n          \"options\": [\n            \"\u003e20mm\",\n            \"5-20mm\",\n            \"\u003c5mm\",\n            \"\u003c1mm\"\n          ],\n          \"answer\": \"\u003e20mm\"\n        },\n        {\n          \"question\": \"\\\"any changes in natural or human systems that inadvertently increase vulnerability to climatic stimuli; an adaptation that does not succeed in reducing vulnerability but increase it instead\\\" is a definition of\",\n          \"options\": [\n            \"adaptation\",\n            \"mitigation\",\n            \"maladaptation\",\n            \"malmitigation\"\n          ],\n          \"answer\": \"maladaptation\"\n        },\n        {\n          \"question\": \"which of these is not a principle of ecological restoration?\",\n          \"options\": [\n            \"ecological integrity\",\n            \"long term sustainability\",\n            \"benefits and engages scientists\",\n            \"informed by past and future\"\n          ],\n          \"answer\": \"benefits and engages scientists\"\n        },\n        {\n          \"question\": \"the government came up with a regulation that incandescent bulbs be replaced by LED bulbs, so that electricity consumption and release of carbon dioxide from power plants is reduced. in the context of climate change, such an action would be called\",\n          \"options\": [\n            \"adaptation\",\n            \"mitigation\",\n            \"deceleration\",\n            \"maladaptation\"\n          ],\n          \"answer\": \"mitigation\"\n        },\n        {\n          \"question\": \"which of these is not a principle of ecological restoration?\",\n          \"options\": [\n            \"ecological integrity\",\n            \"short term sustainability\",\n            \"benefits and engages society\",\n            \"informed by past and future\"\n          ],\n          \"answer\": \"short term sustainability\"\n        },\n        {\n          \"question\": \"\\\"the ability of a system to adjust to climate change (including climate variability and extremes) to moderate potential damages, to take advantage of opportunities, or to cope with the consequences\\\" is a definition of\",\n          \"options\": [\n            \"adaptive response\",\n            \"adaptive capacity\",\n            \"mitigative response\",\n            \"mitigative capacity\"\n          ],\n          \"answer\": \"adaptive capacity\"\n        },\n        {\n          \"question\": \"which of these is not a climatic forcing for Earth?\",\n          \"options\": [\n            \"changes in plate tectonics\",\n            \"changes in Earth's orbit\",\n            \"changes in Moon's orbit\",\n            \"changes in Sun's strength\"\n          ],\n          \"answer\": \"changes in Moon's orbit\"\n        },\n        {\n          \"question\": \"because of climate change, Mudumalai tiger reserve is suffering from frequent droughts. the management has built several artificial water holes for animals, and fills them up regularly with tankers. in the context of climate change, such an action would be called\",\n          \"options\": [\n            \"adaptation\",\n            \"mitigation\",\n            \"deceleration\",\n            \"maladaptation\"\n          ],\n          \"answer\": \"adaptation\"\n        }\n      ]\n    },\n    {\n      \"name\": \"11\",\n      \"questions\": [\n        {\n          \"question\": \"which of these is correct?\",\n          \"options\": [\n            \"R + G = M + F\",\n            \"R + M = G + F\",\n            \"R + F = M + G\",\n            \"R + G + M + F = 0\"\n          ],\n          \"answer\": \"R + G = M + F\"\n        },\n        {\n          \"question\": \"which of these is not an impact of toxic chemicals?\",\n          \"options\": [\n            \"lethal effects\",\n            \"sub- lethal effects\",\n            \"reduction of existing stressors\",\n            \"reduced fecundity\"\n          ],\n          \"answer\": \"reduction of existing stressors\"\n        },\n        {\n          \"question\": \"a pest population is called controlled when\",\n          \"options\": [\n            \"it is not increasing\",\n            \"it is decreasing\",\n            \"it is not causing any economic damage\",\n            \"it is not causing excessive economic damage\"\n          ],\n          \"answer\": \"it is not causing excessive economic damage\"\n        },\n        {\n          \"question\": \"a deciduous forest in Madhya Pradesh was converted to a mine. after the mining operations were over, the pits were filled up with soil and species of deciduous forest planted again. this is an example of\",\n          \"options\": [\n            \"recovery\",\n            \"restoration\",\n            \"enhancement\",\n            \"replacement\"\n          ],\n          \"answer\": \"restoration\"\n        },\n        {\n          \"question\": \"the root zone treatment plant is an example of\",\n          \"options\": [\n            \"phytoremediation\",\n            \"biological control\",\n            \"biomagnification\",\n            \"bioaccumulation\"\n          ],\n          \"answer\": \"phytoremediation\"\n        },\n        {\n          \"question\": \"a pest population is called uncontrolled when\",\n          \"options\": [\n            \"it is increasing\",\n            \"it is not decreasing\",\n            \"it is causing some economic damage\",\n            \"it is causing excessive economic damage\"\n          ],\n          \"answer\": \"it is causing excessive economic damage\"\n        },\n        {\n          \"question\": \"the impact of El Nino on fishery in Peru is explained by\",\n          \"options\": [\n            \"match hypothesis\",\n            \"mismatch hypothesis\",\n            \"match- mismatch hypothesis\",\n            \"non of these\"\n          ],\n          \"answer\": \"match- mismatch hypothesis\"\n        },\n        {\n          \"question\": \"which of these is correct\",\n          \"options\": [\n            \"the maximum sustainable yield is near the beginning of the sigmoidal curve\",\n            \"the maximum sustainable yield is near the mid-pount of the sigmoidal curve\",\n            \"the maximum sustainable yield is near the end of the sigmoidal curve\",\n            \"none of these\"\n          ],\n          \"answer\": \"the maximum sustainable yield is near the mid-pount of the sigmoidal curve\"\n        },\n        {\n          \"question\": \"Ludwig's ratchet predicts\",\n          \"options\": [\n            \"decreasing harvesting rate\",\n            \"constant harvesting rate\",\n            \"increasing harvesting rate\",\n            \"fluctuating harvesting rate\"\n          ],\n          \"answer\": \"increasing harvesting rate\"\n        },\n        {\n          \"question\": \"a deciduous forest in Madhya Pradesh was converted to a mine. after the mining operations were over, the pits were filled up with water and a lake was created. it is now visited by several migratory birds. this is an example of\",\n          \"options\": [\n            \"recovery\",\n            \"restoration\",\n            \"enhancement\",\n            \"replacement\"\n          ],\n          \"answer\": \"replacement\"\n        }\n      ]\n    },\n    {\n      \"name\": \"12\",\n      \"content\": [\n        {\n          \"question\": \"\\\"Enquiry into plants\\\" is a book written by\",\n          \"options\": [\n            \"Theophrastus\",\n            \"Linnaeus\",\n            \"Malthus\",\n            \"Humboldt\"\n          ],\n          \"answer\": \"Theophrastus\"\n        },\n        {\n          \"question\": \"the mitochondrion is a/an\",\n          \"options\": [\n            \"sub- cellular organelle\",\n            \"cell\",\n            \"tissue\",\n            \"organ\"\n          ],\n          \"answer\": \"sub- cellular organelle\"\n        },\n        {\n          \"question\": \"which of these is not a pillar of sustainability?\",\n          \"options\": [\n            \"environmental sustainability\",\n            \"economic sustainability\",\n            \"trans- boundary sustainability\",\n            \"social sustainability\"\n          ],\n          \"answer\": \"trans- boundary sustainability\"\n        },\n        {\n          \"question\": \"good climate is a\",\n          \"options\": [\n            \"chemical factor\",\n            \"demographic factor\",\n            \"push factor\",\n            \"pull factor\"\n          ],\n          \"answer\": \"pull factor\"\n        },\n        {\n          \"question\": \"importance value varies from\",\n          \"options\": [\n            \"0 to 10\",\n            \"0 to 50\",\n            \"0 to 100\",\n            \"0 to 300\"\n          ],\n          \"answer\": \"0 to 300\"\n        },\n        {\n          \"question\": \"consider the food chain: grass --\u003e grasshopper --\u003e frog --\u003e snake --\u003e hawk. in this food chain\",\n          \"options\": [\n            \"frog is producer\",\n            \"frog is consumer and carnivore\",\n            \"frog is consumer and herbivore\",\n            \"frog is decomposer\"\n          ],\n          \"answer\": \"frog is consumer and carnivore\"\n        },\n        {\n          \"question\": \"the juvenile mortality rate is the annual number of deaths of juvenile per\",\n          \"options\": [\n            \"100 births\",\n            \"1000 births\",\n            \"100 live births\",\n            \"1000 live births\"\n          ],\n          \"answer\": \"1000 live births\"\n        },\n        {\n          \"question\": \"because of climate change, Mudumalai Tiger Reserve is suffering from frequent droughts. the management has built several artificial water holes for animals, and fills them up regularly with tankers. in the context of climate change, such an action would be called\",\n          \"options\": [\n            \"adaptation\",\n            \"mitigation\",\n            \"deceleration\",\n            \"maladaptation\"\n          ],\n          \"answer\": \"adaptation\"\n        },\n        {\n          \"question\": \"the scientific study of animal behaviour is called\",\n          \"options\": [\n            \"behaviourism\",\n            \"ecology\",\n            \"ethology\",\n            \"prey- predator dynamics\"\n          ],\n          \"answer\": \"ethology\"\n        },\n        {\n          \"question\": \"zoo is an example of\",\n          \"options\": [\n            \"in-situ conservation\",\n            \"ex-situ conservation\",\n            \"in-situ preservation\",\n            \"ex-situ preservation\"\n          ],\n          \"answer\": \"ex-situ conservation\"\n        }\n      ]\n    }\n  ]\n}\nexport const ForestJSON = {\n  \"title\": \"NOC:Forests and their management\",\n  \"code\":\"102104082\",\n  \"weeks\": [\n    {\n      \"name\": \"1\",\n      \"questions\": [\n        {\n          \"question\": \"The term 'forest' originates from\",\n          \"options\": [\n            \" Latin 'foris' meaning outside\",\n            \"Greek 'foris' meaning outside\",\n            \"Latin 'foris' meaning trees\",\n            \"Greek 'foris' meaning trees\"\n          ],\n          \"answer\": \n            \" Latin 'foris' meaning outside\"\n          \n        },\n        {\n          \"question\": \"According to the Supreme Court the word 'forest' must be understood according to its\",\n          \"options\": [\n            \" Biological meaning\",\n            \"ecological meaning\",\n            \"silvicultural meaning\",\n            \"dictionary meaning\"\n          ],\n          \"answer\": \n            \"dictionary meaning\"\n          \n        },\n        {\n          \"question\": \"According to the Supreme Court, the term 'forest land' includes\",\n          \"options\": [\n            \" some area recorded as the forest in the government record according to ownership\",\n            \"any area recorded as forest in the government record according to ownership\",\n            \"some area recorded as forest in government record irrespective of ownership\",\n            \"any area recorded as forest in the government record irrespective of ownership\"\n          ],\n          \"answer\": \n            \"any area recorded as forest in the government record irrespective of ownership\"\n          \n        },\n        {\n          \"question\": \"\\\"Plant community, predominantly comprised of trees and other woody vegitation, usually with a closed canopy\\\" is\",\n          \"options\": [\n            \" silvicultrual definition of forests\",\n            \"FAO definition of forests\",\n            \"legal definition of forests\",\n            \"ecological definition of forest\"\n          ],\n          \"answer\": \n            \"ecological definition of forest\"\n          \n        },\n        {\n          \"question\": \"Tropical moist forests don't include\",\n          \"options\": [\n            \" Broadleaved forest\",\n            \"wet-evergreen forest\",\n            \"semi-evergreen forest\",\n            \"moist deciduous forests\"\n          ],\n          \"answer\": \n            \" Broadleaved forest\"\n          \n        },\n        {\n          \"question\": \"Which of these is not a use value\",\n          \"options\": [\n            \" Odirect value\",\n            \"indirect value\",\n            \"O option value\",\n            \"existence value\"\n          ],\n          \"answer\": \n            \"existence value\"\n          \n        },\n        {\n          \"question\": \"Montane sub-tropical forests don't include\",\n          \"options\": [\n            \" Broadleaved forests\",\n            \"pine forest\",\n            \"semi-evergreen forest\",\n            \"Odry-evergreen forest\"\n          ],\n          \"answer\": \n            \"semi-evergreen forest\"\n          \n        },\n        {\n          \"question\": \"Which of these is not a forest type found in India?\",\n          \"options\": [\n            \" Mediterranean dry\",\n            \"Tropical dry\",\n            \"Montane temperate\",\n            \"Alpine\"\n          ],\n          \"answer\": \n            \" Mediterranean dry\"\n          \n        },\n        {\n          \"question\": \"The value of leaving use and non-use values for off-springs or future generation is called\",\n          \"options\": [\n            \" altruistic value\",\n            \"bequest value\",\n            \"existance value\",\n            \"O option value\"\n          ],\n          \"answer\": \n            \"bequest value\"\n          \n        },\n        {\n          \"question\": \"Which of these is not a consumptive value\",\n          \"options\": [\n            \" Otimber\",\n            \"firewood\",\n            \"non-timber forest products\",\n            \"Education\"\n          ],\n          \"answer\": \n            \"Education\"\n          \n        }\n      ]\n    },\n    {\n      \"name\": \"2\",\n      \"questions\": [\n        {\n          \"question\": \"Which of these is abiotic factor?\\nVines\\nTrees\\nRaptiles\\nWater\",\n          \"options\": [\n            \" Vines\",\n            \"Trees\",\n            \"Raptiles\",\n            \"Water\"\n          ],\n          \"answer\": \n            \"Water\"\n          \n        },\n        {\n          \"question\": \"In the formula, I = PXAXT, T rafers to -\\nTransference\\nTime\\nTechnology\\nNone of these\",\n          \"options\": [\n            \" Transference\",\n            \"Time\",\n            \"Technology\",\n            \"None of these\"\n          ],\n          \"answer\": \n            \"Technology\"\n          \n        },\n        {\n          \"question\": \"Lithosere is an example of -\\nHydrosere\\nXerosere\\nPsammosere\\nHalosere\",\n          \"options\": [\n            \" Hydrosere\",\n            \"Xerosere\",\n            \"Psammosere\",\n            \"Halosere\"\n          ],\n          \"answer\": \n            \"Xerosere\"\n          \n        },\n        {\n          \"question\": \"The art and science of cultivating forest crops is called\\nForesticulture\\nMonoculture\\nSilviculture\\nSilvics\",\n          \"options\": [\n            \" Foresticulture\",\n            \"Monoculture\",\n            \"Silviculture\",\n            \"Silvics\"\n          ],\n          \"answer\": \n            \"Silviculture\"\n          \n        },\n        {\n          \"question\": \"Net primary productivity is given by\\nAPAR + LUE\\nAPAR X LUE\\nAPAR - LUE\\nAPAR/LUE\",\n          \"options\": [\n            \" APAR + LUE\",\n            \"APAR X LUE\",\n            \"APAR - LUE\",\n            \"APAR/LUE\"\n          ],\n          \"answer\": \n            \"APAR X LUE\"\n          \n        },\n        {\n          \"question\": \"In the context of plant nutrition, Boron is\\nMacronutrient\\nMicronutrient\\nPrimary nutrient\\nSecondary nutrient\",\n          \"options\": [\n            \" Macronutrient\",\n            \"Micronutrient\",\n            \"Primary nutrient\",\n            \"Secondary nutrient\"\n          ],\n          \"answer\": \n            \"Micronutrient\"\n          \n        },\n        {\n          \"question\": \"Which of these is not a characteristics of pioneer species?\\nAbility to grow on bare rocks.\\nAbility to tolerate extreme temperature.\\nLarge size\\nShort life span\",\n          \"options\": [\n            \" Ability to grow on bare rocks.\",\n            \"Ability to tolerate extreme temperature.\",\n            \"Large size\",\n            \"Short life span\"\n          ],\n          \"answer\": \n            \"Large size\"\n          \n        },\n        {\n          \"question\": \"The study of life hoistory/general features of forest crops with respect to environmental factors is called\\nForesticulture\\nMonoculture\\nSilviculture\\nSilvics\",\n          \"options\": [\n            \" Foresticulture\",\n            \"Monoculture\",\n            \"Silviculture\",\n            \"Silvics\"\n          ],\n          \"answer\": \n            \"Silvics\"\n          \n        },\n        {\n          \"question\": \"At compensation point,\\nPhotosynthesis = respiration\\nPhotosynthesis \\u003E respiration\\nPhotosynthesis \\u003C respiration\\nNone of these.\",\n          \"options\": [\n            \" Photosynthesis = respiration\",\n            \"Photosynthesis \\u003E respiration\",\n            \"Photosynthesis \\u003C respiration\",\n            \"None of these.\"\n          ],\n          \"answer\": \n            \" Photosynthesis = respiration\"\n          \n        },\n        {\n          \"question\": \"Practical application of scientific, technical and economic principles of forestry comes under which branch of forestry?\\nForest management\\nForset economics\\nForset mensuration\\nForest protection\",\n          \"options\": [\n            \" Forest management\",\n            \"Forset economics\",\n            \"Forset mensuration\",\n            \"Forest protection\"\n          ],\n          \"answer\": \n            \" Forest management\"\n          \n        }\n      ]\n    },\n    {\n      \"name\": \"3\",\n      \"questions\": [\n        {\n          \"question\": \"The term laterite soil is derived from Latin \\\"later' which means\",\n          \"options\": [\n            \" red\",\n            \"brick\",\n            \"fertile\",\n            \"infertile\"\n          ],\n          \"answer\": \n            \"brick\"\n          \n        },\n        {\n          \"question\": \"Soil formation is dependent upon\",\n          \"options\": [\n            \" vegetation\",\n            \"time\",\n            \"climate\",\n            \"all of the above\"\n          ],\n          \"answer\": \n            \"all of the above\"\n          \n        },\n        {\n          \"question\": \"Self ploughing character is seen in\",\n          \"options\": [\n            \" black cotton soil\",\n            \"alluvial soil\",\n            \"saline soil\",\n            \"red and yellow soil\"\n          ],\n          \"answer\": \n            \" black cotton soil\"\n          \n        },\n        {\n          \"question\": \"Hydrolysis is an example of\",\n          \"options\": [\n            \" chemical weathering\",\n            \"physical weathering\",\n            \"biological weathering\",\n            \"none of the above\"\n          ],\n          \"answer\": \n            \" chemical weathering\"\n          \n        },\n        {\n          \"question\": \"Which of these has the highest organic matter content?\",\n          \"options\": [\n            \" peaty soil\",\n            \"alluvial soil\",\n            \"saline soil\",\n            \"red and yellow soil\"\n          ],\n          \"answer\": \n            \" peaty soil\"\n          \n        },\n        {\n          \"question\": \"In soil profile, C refers to\",\n          \"options\": [\n            \" organic surface layer\",\n            \"topsoil layer\",\n            \"subsoil layer\",\n            \"substratum layer\"\n          ],\n          \"answer\": \n            \"substratum layer\"\n          \n        },\n        {\n          \"question\": \"Carbonation is an example of\",\n          \"options\": [\n            \" chemical weathering\",\n            \"physical weathering\",\n            \"biological weathering\",\n            \"none of the above\"\n          ],\n          \"answer\": \n            \" chemical weathering\"\n          \n        },\n        {\n          \"question\": \"Vertical arrangement of soil horizons is called\",\n          \"options\": [\n            \" soil texture\",\n            \"soil structure\",\n            \"soil profile\",\n            \"soil science\"\n          ],\n          \"answer\": \n            \"soil profile\"\n          \n        },\n        {\n          \"question\": \"Mechanical action of ocean waves is an example of\",\n          \"options\": [\n            \" chemical weathering\",\n            \"physical weathering\",\n            \"biological weathering\",\n            \"none of the above\"\n          ],\n          \"answer\": \n            \"physical weathering\"\n          \n        },\n        {\n          \"question\": \"Thermal stresses lead to\",\n          \"options\": [\n            \" chemical weathering\",\n            \"physical weathering\",\n            \"biological weathering\",\n            \"none of the above\"\n          ],\n          \"answer\": \n            \"physical weathering\"\n          \n        }\n      ]\n    },\n    {\n      \"name\": \"4\",\n      \"questions\": [\n        {\n          \"question\": \"Choose the correct statement:\",\n          \"options\": [\n            \" For a non-circular cross-section, girth tape over-estimates the sectional area.\",\n            \"For a non-circular cross-section, girth tape underestimates the sectional area.\",\n            \"For a non-circular cross-section, girth tape correctly estimates the sectional area.\",\n            \"None of these is a correct statement.\"\n          ],\n          \"answer\": \n            \" For a non-circular cross-section, girth tape over-estimates the sectional area.\"\n          \n        },\n        {\n          \"question\": \"A tree has dbh of 25 cm. Find its basal area in sq m.\",\n          \"options\": [\n            \" 0.49\",\n            \"0.096\",\n            \"0.149\",\n            \"0.195\"\n          ],\n          \"answer\": \n            \" 0.49\"\n          \n        },\n        {\n          \"question\": \"For absolute form factor, the reference for the base of the cylinder is\",\n          \"options\": [\n            \" base of the tree\",\n            \"breast height\",\n            \"10% of tree height\",\n            \"20% of tree height\"\n          ],\n          \"answer\": \n            \" base of the tree\"\n          \n        },\n        {\n          \"question\": \"The breast height for Japan and Korea is\",\n          \"options\": [\n            \" 1.1 m\",\n            \"1.2 m\",\n            \"1.3 m\",\n            \"1.4 m\"\n          ],\n          \"answer\": \n            \"1.2 m\"\n          \n        },\n        {\n          \"question\": \"In the triangle of figure, θ = 60° and c = 4 cm. Find b.\",\n          \"options\": [\n            \" 0.66\",\n            \"1\",\n            \"1.5\",\n            \"2\"\n          ],\n          \"answer\": \n            \"2\"\n          \n        },\n        {\n          \"question\": \"Consider a stand of eucalyptus trees that are on average 30 cm in diameter and spaced on a regular 3 m grid. Find the spacing factor.\",\n          \"options\": [\n            \" 5\",\n            \"10\",\n            \"15\",\n            \"data insufficient\"\n          ],\n          \"answer\": \n            \"10\"\n          \n        },\n        {\n          \"question\": \"For false form factor, the reference for the base of the cylinder is\",\n          \"options\": [\n            \" base of the tree\",\n            \"breast height\",\n            \"10% of tree height\",\n            \"20% of tree height\"\n          ],\n          \"answer\": \n            \"breast height\"\n          \n        },\n        {\n          \"question\": \"A tree has dbh of 35 cm. Find its basal area in sq m.\",\n          \"options\": [\n            \" 0.49\",\n            \"0.096\",\n            \"0.149\",\n            \"0.195\"\n          ],\n          \"answer\": \n            \"0.096\"\n          \n        },\n        {\n          \"question\": \"Diameter over bark (dob), diameter under bark (dub) and bark thickness (tb) are related as:\",\n          \"options\": [\n            \" dob = dub + tb\",\n            \"dob = dub - tb\",\n            \"dob = dub + 2 x tb\",\n            \"dob = dub - 2 x tb\"\n          ],\n          \"answer\": \n            \"dob = dub + 2 x tb\"\n          \n        },\n        {\n          \"question\": \"For normal form factor, the reference for the base of the cylinder is\",\n          \"options\": [\n            \" base of the tree\",\n            \"breast height\",\n            \"10% of tree height\",\n            \"20% of tree height\"\n          ],\n          \"answer\": \n            \"10% of tree height\"\n          \n        }\n      ]\n    },\n    {\n      \"name\": \"5\",\n      \"questions\": [\n        {\n          \"question\": \"is how close the measured values are to the correct value.\",\n          \"options\": [\n            \" Accuracy\",\n            \"Precision\",\n            \"Bias\",\n            \"Variance\"\n          ],\n          \"answer\": \n            \" Accuracy\"\n          \n        },\n        {\n          \"question\": \"IMU stands for\\nImperial metering unit\\nInertial metering unit\\nImperial measurement unit\\nInertial measurement unit\",\n          \"options\": [\n            \" Imperial metering unit\",\n            \"Inertial metering unit\",\n            \"Imperial measurement unit\",\n            \"Inertial measurement unit\"\n          ],\n          \"answer\": \n            \"Inertial measurement unit\"\n          \n        },\n        {\n          \"question\": \"Which of these is correct?\\nPlane surveying takes into account the true shape of the Earth and is used for smaller areas (\\u003C 250 sq km)\\nPlane surveying takes into account the true shape of the Earth and is used for larger areas (\\u003E 250 sq km)\\nGeodetic surveying takes into account the true shape of the Earth and is used for smaller areas (\\u003C 250 sq km)\\nGeodetic surveying takes into account the true shape of the Earth and is used for larger areas (\\u003E 250 sq km)\",\n          \"options\": [\n            \" Plane surveying takes into account the true shape of the Earth and is used for smaller areas (\\u003C 250 sq km)\",\n            \"Plane surveying takes into account the true shape of the Earth and is used for larger areas (\\u003E 250 sq km)\",\n            \"Geodetic surveying takes into account the true shape of the Earth and is used for smaller areas (\\u003C 250 sq km)\",\n            \"Geodetic surveying takes into account the true shape of the Earth and is used for larger areas (\\u003E 250 sq km)\"\n          ],\n          \"answer\": \n            \"Geodetic surveying takes into account the true shape of the Earth and is used for larger areas (\\u003E 250 sq km)\"\n          \n        },\n        {\n          \"question\": \"Plots as topographical units are used in\\nhills\\nplains\\ndeserts\\ntundra\",\n          \"options\": [\n            \" hills\",\n            \"plains\",\n            \"deserts\",\n            \"tundra\"\n          ],\n          \"answer\": \n            \" hills\"\n          \n        },\n        {\n          \"question\": \"is how close the measured values are to each other.\",\n          \"options\": [\n            \" Accuracy\",\n            \"Precision\",\n            \"Bias\",\n            \"Variance\"\n          ],\n          \"answer\": \n            \"Precision\"\n          \n        },\n        {\n          \"question\": \"A list of sampling units will be called a\\nframe\\nwindow\\nsample\\npopulation\",\n          \"options\": [\n            \" frame\",\n            \"window\",\n            \"sample\",\n            \"population\"\n          ],\n          \"answer\": \n            \" frame\"\n          \n        },\n        {\n          \"question\": \"\\\"This sampling employs a simple rule of selecting every kth unit starting with a number chosen at random from 1 to k as the random start.\\\" We're talking about\\nSimple random sampling\\nSystematic sampling\\nStratified sampling\\nMultistage sampling\",\n          \"options\": [\n            \" Simple random sampling\",\n            \"Systematic sampling\",\n            \"Stratified sampling\",\n            \"Multistage sampling\"\n          ],\n          \"answer\": \n            \"Systematic sampling\"\n          \n        },\n        {\n          \"question\": \"The frequency of flyovers is an indicator of\\nspatial resolution\\ntemporal resolution\\nspectral resolution\\nradiometric resolution\",\n          \"options\": [\n            \" spatial resolution\",\n            \"temporal resolution\",\n            \"spectral resolution\",\n            \"radiometric resolution\"\n          ],\n          \"answer\": \n            \"temporal resolution\"\n          \n        },\n        {\n          \"question\": \"The time of flight for LiDAR is 0.00001 sec. Find the distance of the object from the instrument.\\n500 m\\n1000 m\\n1500 m\\n2000 m\",\n          \"options\": [\n            \" 500 m\",\n            \"1000 m\",\n            \"1500 m\",\n            \"2000 m\"\n          ],\n          \"answer\": \n            \"1500 m\"\n          \n        },\n        {\n          \"question\": \"Bathymetric LiDAR uses\\nfar infrared light\\nnear infrared light\\norange light\\ngreen light\",\n          \"options\": [\n            \" far infrared light\",\n            \"near infrared light\",\n            \"orange light\",\n            \"green light\"\n          ],\n          \"answer\": \n            \"green light\"\n          \n        }\n      ]\n    },\n    {\n      \"name\": \"6\",\n      \"questions\": [\n        {\n          \"question\": \"Which of these forms the fire triangle?\",\n          \"options\": [\n            \" fire, air, heat\",\n            \"fire, oxygen, wood\",\n            \"fuel, air, wood\",\n            \"fuel, oxygen, heat\"\n          ],\n          \"answer\": \n            \"fuel, oxygen, heat\"\n          \n        },\n        {\n          \"question\": \"The acronym HIPPO does not include\",\n          \"options\": [\n            \" habitat loss\",\n            \"invasive species\",\n            \"pollination\",\n            \"pollution\"\n          ],\n          \"answer\": \n            \"pollination\"\n          \n        },\n        {\n          \"question\": \"In the formula I = PXAXT, T refers to\",\n          \"options\": [\n            \" transference\",\n            \"time\",\n            \"technology\",\n            \"none of the above\"\n          ],\n          \"answer\": \n            \"technology\"\n          \n        },\n        {\n          \"question\": \"Which of these is a stochastic factor?\",\n          \"options\": [\n            \" birth rate\",\n            \"death rate\",\n            \"population structure\",\n            \"forest fire\"\n          ],\n          \"answer\": \n            \"forest fire\"\n          \n        },\n        {\n          \"question\": \"Which of these is a deterministic factor?\",\n          \"options\": [\n            \" environmental variation\",\n            \"forest fire\",\n            \"death rate\",\n            \"diseases\"\n          ],\n          \"answer\": \n            \"death rate\"\n          \n        },\n        {\n          \"question\": \"A scientist uses a trap to capture a monkey. In the context of Wildlife Protection Act 1972, \",\n          \"options\": [\n            \" the trap is a weapon and capturing is hunting.\",\n            \"the trap is not a weapon and capturing is hunting.\",\n            \"the trap is a weapon and capturing is not hunting.\",\n            \"the trap is not a weapon and capturing is not hunting.\"\n          ],\n          \"answer\": \n            \" the trap is a weapon and capturing is hunting.\"\n          \n        },\n        {\n          \"question\": \"The acronym HIPPO does not include\",\n          \"options\": [\n            \" habitat loss\",\n            \"habitat enhancement\",\n            \"invasive species\",\n            \"human over-population\"\n          ],\n          \"answer\": \n            \"habitat enhancement\"\n          \n        },\n        {\n          \"question\": \"Invasive climbers increase the probability of which of these fire types?\",\n          \"options\": [\n            \" ground fire\",\n            \"surface fire\",\n            \"ladder fire\",\n            \"firestorm\"\n          ],\n          \"answer\": \n            \"ladder fire\"\n          \n        },\n        {\n          \"question\": \"In the formula I = PXAXT, P refers to\",\n          \"options\": [\n            \" professional pressure\",\n            \"pollution pressure\",\n            \"population pressure\",\n            \"none of the above\"\n          ],\n          \"answer\": \n            \"population pressure\"\n          \n        },\n        {\n          \"question\": \"A veterinarian uses an immobilising gun to capture a deer. In the context of Wildlife Protection Act 1972,\",\n          \"options\": [\n            \" the immobilising gun is a weapon and capturing is hunting.\",\n            \"the immobilising gun is not a weapon and capturing is hunting.\",\n            \"the immobilising gun is a weapon and capturing is not hunting.\",\n            \"the immobilising gun is not a weapon and capturing is not hunting.\"\n          ],\n          \"answer\": \n            \" the immobilising gun is a weapon and capturing is hunting.\"\n          \n        }\n      ]\n    },\n    {\n      \"name\": \"7\",\n      \"questions\": [\n        {\n          \"question\": \"Which of these is the correct sequence of a silvicultural system?\",\n          \"options\": [\n            \" Stand tending -\\u003E Regeneration -\\u003E Harvesting\",\n            \"Harvesting -\\u003E Stand tending -\\u003E Regeneration\",\n            \"Harvesting -\\u003E Regeneration -\\u003E Stand tending\",\n            \"Regeneration -\\u003E Harvesting -\\u003E Stand tending\"\n          ],\n          \"answer\": \n            \"Harvesting -\\u003E Regeneration -\\u003E Stand tending\"\n          \n        },\n        {\n          \"question\": \"Tending is done during\",\n          \"options\": [\n            \" early stage of life\",\n            \"middle stage of life\",\n            \"late stage of life\",\n            \"any stage of life\"\n          ],\n          \"answer\": \n            \"any stage of life\"\n          \n        },\n        {\n          \"question\": \"Which of these is not a feature of natural regeneration?\",\n          \"options\": [\n            \" low cost\",\n            \"less requirement of heavy machinery and labour\",\n            \"preservation of genetic variability\",\n            \"good control over genetic improvement\"\n          ],\n          \"answer\": \n            \"good control over genetic improvement\"\n          \n        },\n        {\n          \"question\": \"Taungya regeneration is\",\n          \"options\": [\n            \" natural regeneration\",\n            \"artificial regeneration with villagers\",\n            \"artificial regeneration with nomadic tribes\",\n            \"artificial regeneration with hunters and gatherers\"\n          ],\n          \"answer\": \n            \"artificial regeneration with villagers\"\n          \n        },\n        {\n          \"question\": \"The movement of seeds away from their place of seed production into a new area is called\",\n          \"options\": [\n            \" translocation\",\n            \"migration\",\n            \"dispersal\",\n            \"drifting\"\n          ],\n          \"answer\": \n            \"dispersal\"\n          \n        },\n        {\n          \"question\": \"A site was clear-cut. Which of these methods of regeneration cannot be used?\",\n          \"options\": [\n            \" natural regeneration\",\n            \"artificial regeneration by direct sowing\",\n            \"artificial regeneration by planting seedlings\",\n            \"artificial regeneration by transplanting trees\"\n          ],\n          \"answer\": \n            \" natural regeneration\"\n          \n        },\n        {\n          \"question\": \"Ring weeding is primarily a feature of\",\n          \"options\": [\n            \" natural regeneration\",\n            \"assisted natural regeneration\",\n            \"artificial regeneration by direct sowing\",\n            \"artificial regeneration by planting seedlings\"\n          ],\n          \"answer\": \n            \"assisted natural regeneration\"\n          \n        },\n        {\n          \"question\": \"Which of these is not a feature of natural regeneration\",\n          \"options\": [\n            \" seed consumption by insects and seed feeders\",\n            \"little control over spacing and stand density\",\n            \"long time needed to regenerate forest\",\n            \"high requirement of heavy machinery and labour\"\n          ],\n          \"answer\": \n            \"high requirement of heavy machinery and labour\"\n          \n        },\n        {\n          \"question\": \"Which of these is not advantage of clear felling system\",\n          \"options\": [\n            \" Simple system, easy and efficient operations\",\n            \"Allows for establishment of a more uniform crop\",\n            \"Increases soil erosion and landslides in hilly areas\",\n            \"Mimics natural processes of fire and large-scale insect attacks\"\n          ],\n          \"answer\": \n            \"Increases soil erosion and landslides in hilly areas\"\n          \n        },\n        {\n          \"question\": \"Average age at which a tree is considered mature for felling is called as\",\n          \"options\": [\n            \" crop age\",\n            \"felling age\",\n            \"rotation age\",\n            \"maturity age\"\n          ],\n          \"answer\": \n            \"rotation age\"\n          \n        }\n      ]\n    },\n    {\n      \"name\": \"8\",\n      \"questions\": [\n        {\n          \"question\": \"Felling made with the object of opening the canopy to remove shelter and allow more light for the regenerated crop is\",\n          \"options\": [\n            \" preparatory felling\",\n            \"seeding felling\",\n            \"secondary felling\",\n            \"final felling\"\n          ],\n          \"answer\": \n            \"secondary felling\"\n          \n        },\n        {\n          \"question\": \"Clear felling system is not used for\",\n          \"options\": [\n            \" light demanding species\",\n            \"shade bearer species\",\n            \"plain areas\",\n            \"plateau areas\"\n          ],\n          \"answer\": \n            \"shade bearer species\"\n          \n        },\n        {\n          \"question\": \"For a crop with rotation age of 120 years, PB-III would have crop age\",\n          \"options\": [\n            \" 0-30 years\",\n            \"30-60 years\",\n            \"60-90 years\",\n            \"90-120 years\"\n          ],\n          \"answer\": \n            \"30-60 years\"\n          \n        },\n        {\n          \"question\": \"Catchment areas are best suited for\",\n          \"options\": [\n            \" clear felling system\",\n            \"selection system\",\n            \"uniform shelterwood system\",\n            \"group shelterwood system\"\n          ],\n          \"answer\": \n            \"selection system\"\n          \n        },\n        {\n          \"question\": \"Shelterwood system results in\",\n          \"options\": [\n            \" even aged stand with natural aesthetics\",\n            \"even aged stand with artificial aesthetics\",\n            \"uneven aged stand with natural aesthetics\",\n            \"uneven aged stand with artificial aesthetics\"\n          ],\n          \"answer\": \n            \" even aged stand with natural aesthetics\"\n          \n        },\n        {\n          \"question\": \"Which of these is the correct sequence for shelterwood system?\",\n          \"options\": [\n            \" Preparatory felling -\\u003ESecondary felling -\\u003E Seedling felling -\\u003E Final felling\",\n            \"Preparatory felling -\\u003E Seedling felling -\\u003E Secondary felling -\\u003E Final felling\",\n            \"Preparatory felling -\\u003ESecondary felling -\\u003E Seeding felling -\\u003E Final felling\",\n            \"Preparatory felling -\\u003E Seeding felling -\\u003E Secondary felling -\\u003E Final felling\"\n          ],\n          \"answer\": \n            \"Preparatory felling -\\u003E Seeding felling -\\u003E Secondary felling -\\u003E Final felling\"\n          \n        },\n        {\n          \"question\": \"Inverse-J shaped number-diameter curves are seen in\",\n          \"options\": [\n            \" clear felling system\",\n            \"selection system\",\n            \"uniform shelterwood system\",\n            \"group shelterwood system\"\n          ],\n          \"answer\": \n            \"selection system\"\n          \n        },\n        {\n          \"question\": \"Trees not putting increment are removed during\",\n          \"options\": [\n            \" preparatory felling\",\n            \"seeding felling\",\n            \"secondary felling\",\n            \"final felling\"\n          ],\n          \"answer\": \n            \" preparatory felling\"\n          \n        },\n        {\n          \"question\": \"Close to nature forestry is a feature of\",\n          \"options\": [\n            \" clear felling system\",\n            \"selection system\",\n            \"uniform shelterwood system\",\n            \"group shelterwood system\"\n          ],\n          \"answer\": \n            \"selection system\"\n          \n        },\n        {\n          \"question\": \"In group shelterwood system, the regeneration area is increased\",\n          \"options\": [\n            \" centrifugally around gaps\",\n            \"centripetally around gaps\",\n            \"parallel to gaps\",\n            \"perpendicular to gaps\"\n          ],\n          \"answer\": \n            \" centrifugally around gaps\"\n          \n        }\n      ]\n    },\n    {\n      \"name\": \"9\",\n      \"questions\": [\n        {\n          \"question\": \"Surveying timberlands to locate and estimate the volumes and grades of standing timber meeting requirements is known as\",\n          \"options\": [\n            \" surveying\",\n            \"cruising\",\n            \"marking\",\n            \"logging\"\n          ],\n          \"answer\": \n            \"cruising\"\n          \n        },\n        {\n          \"question\": \"Which of these gives the greatest saving of lumber\",\n          \"options\": [\n            \" conventional face\",\n            \"humboldt face\",\n            \"open face\",\n            \"all of these\"\n          ],\n          \"answer\": \n            \"humboldt face\"\n          \n        },\n        {\n          \"question\": \"Careful selection of trees for harvesting based on a forest management prescription is known as\",\n          \"options\": [\n            \" surveying\",\n            \"cruising\",\n            \"marking\",\n            \"logging\"\n          ],\n          \"answer\": \n            \"marking\"\n          \n        },\n        {\n          \"question\": \"Cutting of timber into logs is known as\",\n          \"options\": [\n            \" marking\",\n            \"bucking\",\n            \"skidding\",\n            \"delimbing\"\n          ],\n          \"answer\": \n            \"bucking\"\n          \n        },\n        {\n          \"question\": \"Research plots are shown in marking colour\",\n          \"options\": [\n            \" yellow\",\n            \"blue\",\n            \"red\",\n            \"white\"\n          ],\n          \"answer\": \n            \"white\"\n          \n        },\n        {\n          \"question\": \"Which of these gives the greatest accuracy in constructing face cuts\",\n          \"options\": [\n            \" conventional face\",\n            \"humboldt face\",\n            \"open face\",\n            \"all of these.\"\n          ],\n          \"answer\": \n            \" conventional face\"\n          \n        },\n        {\n          \"question\": \"Trees to be retained are shown in marking colour.\",\n          \"options\": [\n            \" yellow\",\n            \"blue\",\n            \"red\",\n            \"white\"\n          ],\n          \"answer\": \n            \"blue\"\n          \n        },\n        {\n          \"question\": \"Moving of logs from forest to landing area is known as\",\n          \"options\": [\n            \" marking\",\n            \"bucking\",\n            \"skidding\",\n            \"delimbing\"\n          ],\n          \"answer\": \n            \"skidding\"\n          \n        },\n        {\n          \"question\": \"Trees on boundary are shown in marking colour.\",\n          \"options\": [\n            \" yellow\",\n            \"blue\",\n            \"red\",\n            \"white\"\n          ],\n          \"answer\": \n            \"red\"\n          \n        },\n        {\n          \"question\": \"Net growth in initial volume is given by\",\n          \"options\": [\n            \" V2-V1\",\n            \"V2-V1+H-I\",\n            \"V2-V1+H-I+M\",\n            \"V2-V1+H-I-M\"\n          ],\n          \"answer\": \n            \"V2-V1+H-I\"\n          \n        }\n      ]\n    },\n    {\n      \"name\": \"10\",\n      \"questions\": [\n        {\n          \"question\": \"Which of these is not a laboratory method to determine best days for seed collection?\",\n          \"options\": [\n            \" maximum dry weight\",\n            \"colour of fruits\",\n            \"Omoisture content of fruits\",\n            \"chemical analysis of fat and nitrogen content\"\n          ],\n          \"answer\": \n            \"colour of fruits\"\n          \n        },\n        {\n          \"question\": \"\\\"Number of seeds in sample that germinate upto the peak germination period expressed as %\\\" is a definition of\",\n          \"options\": [\n            \" germination number\",\n            \"germination percentage\",\n            \"germination energy\",\n            \"germination power\"\n          ],\n          \"answer\": \n            \"germination energy\"\n          \n        },\n        {\n          \"question\": \"Which of these is a good storage condition\",\n          \"options\": [\n            \" high moisture, high temperature\",\n            \"high moisture, low temperature\",\n            \"low moisture, high temperature\",\n            \"low moisture, low temperature\"\n          ],\n          \"answer\": \n            \"low moisture, low temperature\"\n          \n        },\n        {\n          \"question\": \"Shell cracking of seeds is used for which species\",\n          \"options\": [\n            \" O amla\",\n            \"O mango\",\n            \"Ober (palm)\",\n            \"O teak\"\n          ],\n          \"answer\": \n            \"Ober (palm)\"\n          \n        },\n        {\n          \"question\": \"agave is used for\",\n          \"options\": [\n            \" barbed wire fencing\",\n            \"live fencing\",\n            \"chain link fencing\",\n            \"stone wall fencing\"\n          ],\n          \"answer\": \n            \"live fencing\"\n          \n        },\n        {\n          \"question\": \"Which of these prevents water logging\",\n          \"options\": [\n            \" sunken bed\",\n            \"Oraised bed\",\n            \"Oflat bed\",\n            \"all of these.\"\n          ],\n          \"answer\": \n            \"Oraised bed\"\n          \n        },\n        {\n          \"question\": \"Which of these characterises a refractory site\",\n          \"options\": [\n            \" soil depth \\u003C 10 cm\",\n            \"soil depth 10-30 cm\",\n            \"soil depth \\u003E 30 cm\",\n            \"none of these\"\n          ],\n          \"answer\": \n            \" soil depth \\u003C 10 cm\"\n          \n        },\n        {\n          \"question\": \"Which of these conserves moisture\",\n          \"options\": [\n            \" p\",\n            \"sunken bed\",\n            \"Oraised bed\",\n            \"flat bed\"\n          ],\n          \"answer\": \n            \"sunken bed\"\n          \n        },\n        {\n          \"question\": \"Choice of spacing is dependent upon\",\n          \"options\": [\n            \" objective of plantation\",\n            \"site-species matching\",\n            \"O growth rate\",\n            \"all of these.\"\n          ],\n          \"answer\": \n            \"all of these.\"\n          \n        },\n        {\n          \"question\": \"Wet and dry treatment of seeds is used for which species\",\n          \"options\": [\n            \" amla\",\n            \"mango\",\n            \"ber\",\n            \"O teak\"\n          ],\n          \"answer\": \n            \"O teak\"\n          \n        }\n      ]\n    },\n    {\n      \"name\": \"11\",\n      \"questions\": [\n        {\n          \"question\": \"Which of these is not a forest classification as per the 1894 Forest Policy:\",\n          \"options\": [\n            \" protection forest\",\n            \"production forest\",\n            \"Ominor forest\",\n            \"Omajor forest\"\n          ],\n          \"answer\": \n            \"Omajor forest\"\n          \n        },\n        {\n          \"question\": \"In 1931, Van Panchayats were constituted in areas that are now in\",\n          \"options\": [\n            \" Tamil Nadu\",\n            \"Madhya Pradesh\",\n            \"West Bengal\",\n            \"Uttarakhand\"\n          ],\n          \"answer\": \n            \"Uttarakhand\"\n          \n        },\n        {\n          \"question\": \"Planting along canal banks is a part of\",\n          \"options\": [\n            \" farm forestry\",\n            \"community forestry\",\n            \"extension forestry\",\n            \"O agroforestry\"\n          ],\n          \"answer\": \n            \"extension forestry\"\n          \n        },\n        {\n          \"question\": \"\\\"allowing some places and some creatures to exist without significant human interference\\\" is a definition of\",\n          \"options\": [\n            \" conservation\",\n            \"preservation\",\n            \"environmentalism\",\n            \"O all of these\"\n          ],\n          \"answer\": \n            \"preservation\"\n          \n        },\n        {\n          \"question\": \"Sustainable harvest of resources falls under the category of:\",\n          \"options\": [\n            \" conservation\",\n            \"preservation\",\n            \"environmentalism\",\n            \"none of the above\"\n          ],\n          \"answer\": \n            \" conservation\"\n          \n        },\n        {\n          \"question\": \"The tiger and the elephant can be called as\",\n          \"options\": [\n            \" umbrella species\",\n            \"umbrella species\",\n            \"flagship species\",\n            \"all of the above\"\n          ],\n          \"answer\": \n            \"all of the above\"\n          \n        },\n        {\n          \"question\": \"Which of these is a stochastic factor?\",\n          \"options\": [\n            \" birth rate\",\n            \"death rate\",\n            \"population structure\",\n            \"forest fire\"\n          ],\n          \"answer\": \n            \"forest fire\"\n          \n        },\n        {\n          \"question\": \"\\\"Science of relationships between organisms and their environments\\\" is the definition of:\",\n          \"options\": [\n            \" conservation\",\n            \"preservation\",\n            \"environmentalism\",\n            \"ecology\"\n          ],\n          \"answer\": \n            \"ecology\"\n          \n        },\n        {\n          \"question\": \"Which of these is a deterministic factor?\",\n          \"options\": [\n            \" environmental variation and fluctuations\",\n            \"migration among populations\",\n            \"Olitter size\",\n            \"O death rate\"\n          ],\n          \"answer\": \n            \"O death rate\"\n          \n        },\n        {\n          \"question\": \"The acronym HIPPO does not include\",\n          \"options\": [\n            \" habitat loss\",\n            \"habitat enhancement\",\n            \"invasive species\",\n            \"human over-population\"\n          ],\n          \"answer\": \n            \"habitat enhancement\"\n          \n        }\n      ]\n    },\n    {\n      \"name\": \"12\",\n      \"questions\": [\n        {\n          \"question\": \"A scientist uses a trap to capture a monkey. In the context of Wildlife Protection Act 1972, the trap is a weapon and capturing is hunting. \\nthe trap is not a weapon and capturing is hunting.\\nthe trap is a weapon and capturing is not hunting.\\nthe trap is not a weapon and capturing is not hunting.\",\n          \"options\": [\n            \" the trap is a weapon and capturing is hunting.\",\n            \"the trap is not a weapon and capturing is hunting.\",\n            \"the trap is a weapon and capturing is not hunting.\",\n            \"the trap is not a weapon and capturing is not hunting.\"\n          ],\n          \"answer\": \n            \" the trap is a weapon and capturing is hunting.\"\n          \n        },\n        {\n          \"question\": \"Which of these is not a characteristic of pioneer species\\nability to grow on bare rocks\\nability to tolerate extreme temperatures\\nlarge size\\nshort life span\",\n          \"options\": [\n            \" ability to grow on bare rocks\",\n            \"ability to tolerate extreme temperatures\",\n            \"large size\",\n            \"short life span\"\n          ],\n          \"answer\": \n            \"large size\"\n          \n        },\n        {\n          \"question\": \"agave is used for\\nbarbed wire fencing\\nOlive fencing\\nchain link fencing\\nstone wall fencing\",\n          \"options\": [\n            \" barbed wire fencing\",\n            \"Olive fencing\",\n            \"chain link fencing\",\n            \"stone wall fencing\"\n          ],\n          \"answer\": \n            \"Olive fencing\"\n          \n        },\n        {\n          \"question\": \"At compensation point,\\nphotosynthesis = respiration\\nphotosynthesis \\u003E respiration\\nphotosynthesis \\u003C respiration\\nnone of these\",\n          \"options\": [\n            \" photosynthesis = respiration\",\n            \"photosynthesis \\u003E respiration\",\n            \"photosynthesis \\u003C respiration\",\n            \"none of these\"\n          ],\n          \"answer\": \n            \" photosynthesis = respiration\"\n          \n        },\n        {\n          \"question\": \"The breast height for Japan and Korea is\\n1.1 m\\n1.2 m\\n1.3 m\\n1.4 m\",\n          \"options\": [\n            \" 1.1 m\",\n            \"1.2 m\",\n            \"1.3 m\",\n            \"1.4 m\"\n          ],\n          \"answer\": \n            \"1.2 m\"\n          \n        },\n        {\n          \"question\": \"In the triangle of figure, 0 = 60° and c = 2 cm. Find b.\",\n          \"options\": [\n            \" 0.33\",\n            \"0.5\",\n            \"0.75\",\n            \"1\"\n          ],\n          \"answer\": \n            \"1\"\n          \n        },\n        {\n          \"question\": \"The tiger and the elephant can be called as\\numbrella species\\nkeystone species\\nflagship species\\nall of the above\",\n          \"options\": [\n            \" umbrella species\",\n            \"keystone species\",\n            \"flagship species\",\n            \"all of the above\"\n          ],\n          \"answer\": \n            \"all of the above\"\n          \n        },\n        {\n          \"question\": \"The movement of seeds away from their place of seed production into a new area is called\\ntranslocation\\nmigration\\ndispersal\\ndrifting\",\n          \"options\": [\n            \" translocation\",\n            \"migration\",\n            \"dispersal\",\n            \"drifting\"\n          ],\n          \"answer\": \n            \"dispersal\"\n          \n        },\n        {\n          \"question\": \"According to the Supreme Court, the term forest land includes\\nsome area recorded as forest in the Government record according to ownership\\nany area recorded as forest in the Government record according to ownership\\nsome area recorded as forest in the Government record irrespective of ownership\\nany area recorded as forest in the Government record irrespective of ownership\",\n          \"options\": [\n            \" some area recorded as forest in the Government record according to ownership\",\n            \"any area recorded as forest in the Government record according to ownership\",\n            \"some area recorded as forest in the Government record irrespective of ownership\",\n            \"any area recorded as forest in the Government record irrespective of ownership\"\n          ],\n          \"answer\": \n            \"any area recorded as forest in the Government record irrespective of ownership\"\n          \n        },\n        {\n          \"question\": \"Which of these is a stochastic factor?\\nbirth rate\\ndeath rate\\npopulation structure\\nforest fire\",\n          \"options\": [\n            \" birth rate\",\n            \"death rate\",\n            \"population structure\",\n            \"forest fire\"\n          ],\n          \"answer\": \n            \"forest fire\"\n          \n        }\n      ]\n    }\n  ]\n}\nexport const spokenenglishJSON = {\n\"title\": \"NOC:Better Spoken English\",\n\"request_count\": \"1\",\n\"weeks\": [\n  {\n    \"name\": \"1\",\n    \"questions\": [\n      {\n        \"question\": \"To make a good presentation, choose a topic.\",\n        \"options\": [\n          \" Specific\",\n          \"Generic\",\n          \"Detailed\",\n          \"Random\"\n        ],\n        \"answer\": \n          \" Specific\"\n        \n      },\n      {\n        \"question\": \"Sounds are of two types - vowels and consonants. The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \" True\"\n        \n      },\n      {\n        \"question\": \"Reading out a presentation can distract/bore the audience. The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \" True\"\n        \n      },\n      {\n        \"question\": \"In a formal presentation, jargons are not recommended.\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \" True\"\n        \n      },\n      {\n        \"question\": \"Spoken English is guided by stress, pause and intonation.\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \" True\"\n        \n      },\n      {\n        \"question\": \"Darting glance makes the presentation effective. The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \"False\"\n        \n      },\n      {\n        \"question\": \"Body language, voice modulation and grooming just reinforce the content of the speech. The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \" True\"\n        \n      },\n      {\n        \"question\": \"Putting too much information in one slide ensure effective communication in less time. The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \"False\"\n        \n      },\n      {\n        \"question\": \"Complete the following sentence with appropriate option.\\nI hope you have a\",\n        \"options\": [\n          \" May you have a\",\n          \"Let it be a\",\n          \"I wish you a\"\n        ],\n        \"answer\": \n          \"I wish you a\"\n        \n      }\n    ]\n  },\n  {\n    \"name\": \"2\",\n    \"questions\": [\n      {\n        \"question\": \" \\\"Unlike Sanskrit and Latin, English is a spoken language\\\". The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \" True\"\n        \n      },\n      {\n        \"question\": \" \\\"Spoken language is guided by spelling\\\". The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\":\"False\"\n        \n      },\n      {\n        \"question\": \"3) \\\"A speech delivered without planning, organisation and rehearsal is called extempore\\\". The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \"False\"\n        \n      },\n      {\n        \"question\": \"4) A presentation should begin with\",\n        \"options\": [\n          \" Greeting\",\n          \"Time management\",\n          \"Eye contact\",\n          \"Pace\",\n          \"Option E: Pause\"\n        ],\n        \"answer\": \n          \" Greeting\"\n        \n      },\n      {\n        \"question\": \"5) The difference in 'talking' to the audience and 'reading' to the audience lies in\",\n        \"options\": [\n          \" Time management\",\n          \"Eye contact\",\n          \"Pace\",\n          \"Pause\"\n        ],\n        \"answer\": \n          \"Eye contact\"\n        \n      },\n      {\n        \"question\": \"6) Alok, a student of IIT, while introducing himself in a formal occasion (let us assume that it is a conference) says \\\" Hi Everybody, I am Alok from Civils Department\\\". Is it an appropriate introduction for a formal occasion?\",\n        \"options\": [\n          \" Yes\",\n          \"No\"\n        ],\n        \"answer\": \n          \"No\"\n        \n      },\n      {\n        \"question\": \"7) Use of non-linguistics fillers in speech is a sign of preparedness and confidence. The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \"False\"\n        \n      },\n      {\n        \"question\": \"8) In all abbreviations, the last component takes stress.\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \" True\"\n        \n      },\n      {\n        \"question\": \"9) In a formal speech, the use of hyperboles and self denigration is highly recommended.\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \"False\"\n        \n      },\n      {\n        \"question\": \"10 Presence of slang (in speech) is a sign of informality. The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \" True\"\n        \n      }\n    ]\n  },\n  {\n    \"name\": \"3\",\n    \"questions\": [\n      {\n        \"question\": \"Dressing is an important aspect of theatre in presentation. The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \" True\"\n        \n      },\n      {\n        \"question\": \"During a formal presentation, Shyam wears a pleasant smile on his face. Is it appropriate for the occasion?\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \" True\"\n        \n      },\n      {\n        \"question\": \"A funeral look is key to a successful presentation\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \"False\"\n        \n      },\n      {\n        \"question\": \"Do not have darting glances during a presentation. The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \" True\"\n        \n      },\n      {\n        \"question\": \"It is always good to have a copy of slides/notes (ready for reference) before the presentation. The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \" True\"\n        \n      },\n      {\n        \"question\": \"For a presentation, slow tempo is the best bet to be understood.\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \" True\"\n        \n      },\n      {\n        \"question\": \"Which among the following is a linguistic reason for mishearing?\",\n        \"options\": [\n          \" Distraction\",\n          \"Memory restrictions\",\n          \"Noise\",\n          \"Similar syllable structure\"\n        ],\n        \"answer\": \n          \"Similar syllable structure\"\n        \n      },\n      {\n        \"question\": \"How many syllables does the word \\\"university\\\" have?\",\n        \"options\": [\n          \" Two\",\n          \"Three\",\n          \"Four\",\n          \"Five\"\n        ],\n        \"answer\": \n          \"Five\"\n        \n      },\n      {\n        \"question\": \"More sounds in less time causes distortion. The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \" True\"\n        \n      },\n      {\n        \"question\": \"Misheard sounds are often somehow related to the right word. The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \" True\"\n        \n      }\n    ]\n  },\n  {\n    \"name\": \"4\",\n    \"questions\": [\n      {\n        \"question\": \"Which among the following is not a synonym of the word 'mannequin'\",\n        \"options\": [\n          \" Model\",\n          \"Figure\",\n          \"Dummie\",\n          \"Dissected human body\"\n        ],\n        \"answer\": \n          \"Dissected human body\"\n        \n      },\n      {\n        \"question\": \"Harsha makes a presentation on a civil problem. He begins the presentation by discussing the solution. Is it an appropriate way to begin a presentation.\",\n        \"options\": [\n          \" Yes\",\n          \"No\"\n        ],\n        \"answer\": \n          \"No\"\n        \n      },\n      {\n        \"question\": \"In making a presentation on a civic problem, it is always good to insert a few photographs that aptly highlights the issue.\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \" True\"\n        \n      },\n      {\n        \"question\": \"Which among the following is not a synonym of the word 'dishevel'\",\n        \"options\": [\n          \" Messy\",\n          \"Decluttered\",\n          \"Disorder\",\n          \"Disorganised\"\n        ],\n        \"answer\": \n          \"Decluttered\"\n        \n      },\n      {\n        \"question\": \"Archives are a great source of information. The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \" True\"\n        \n      },\n      {\n        \"question\": \"\\\" Perfection is inside you. The purpose of education is to bring it out.\\\" Whose quote is this?\",\n        \"options\": [\n          \" Prof. Shreesh Choudary\",\n          \"Swami Vivekananda\",\n          \"M.K. Gandhi\",\n          \"Martin Luther King\"\n        ],\n        \"answer\": \n          \"Swami Vivekananda\"\n        \n      },\n      {\n        \"question\": \"Numerical data is best transmitted visually. The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \" True\"\n        \n      },\n      {\n        \"question\": \"While presenting data visually in a PPT, maintain silence and allow the speakers watch it. The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \" True\"\n        \n      },\n      {\n        \"question\": \"Diagrams can be best used to present relative position. The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \" True\"\n        \n      }\n    ]\n  },\n  {\n    \"name\": \"5\",\n    \"questions\": [\n      {\n        \"question\": \"You cannot have 30 slides in a one minute presentation. The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \"False\"\n        \n      },\n      {\n        \"question\": \"Powerpoint slides aren't a great medium to communicate/showcase numbers\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \"False\"\n        \n      },\n      {\n        \"question\": \"Powerpoint slides are not good to present too much of information\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \" True\"\n        \n      },\n      {\n        \"question\": \"Powerpoint slides must be uncluttered.\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \" True\"\n        \n      },\n      {\n        \"question\": \"Powerpoint slides must have ______ font size\",\n        \"options\": [\n          \" Small\",\n          \"Medium\",\n          \"Large\"\n        ],\n        \"answer\": \n          \"Large\"\n        \n      },\n      {\n        \"question\": \"Which among the following words is the accurate meaning of the word \\\"serendipity\\\"\",\n        \"options\": [\n          \" Unfortunate Discovery\",\n          \"Effortless discovery\",\n          \"Discovery by chance\",\n          \"An unfortunate accident\"\n        ],\n        \"answer\": \n          \"Discovery by chance\"\n        \n      },\n      {\n        \"question\": \"A nervous speaker can be fidgeting with an object. The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \" True\"\n        \n      },\n      {\n        \"question\": \"When a person is not in control of his/her self, then the message doesnt go as intended. The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \" True\"\n        \n      },\n      {\n        \"question\": \"While presenting, it is important to look into the eyes of the audience. The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \" True\"\n        \n      },\n      {\n        \"question\": \"While making a presentation, speakers need to have a sense of time. The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \" True\"\n        \n      }\n    ]\n  },\n  {\n    \"name\": \"6\",\n    \"questions\": [\n      {\n        \"question\": \"Which is not correct about an ideal speaker among the following?\",\n        \"options\": [\n          \" Have total control in himself\",\n          \"Keep eye-contact with the listener\",\n          \"Keep fidgeting\",\n          \"Will be aware of the time limit\"\n        ],\n        \"answer\": \n          \"Keep fidgeting\"\n        \n      },\n      {\n        \"question\": \"Politeness is a ______ factor\",\n        \"options\": [\n          \" Political\",\n          \"Educational\",\n          \"Cultural\",\n          \"none of the above\"\n        ],\n        \"answer\": \n          \"Cultural\"\n        \n      },\n      {\n        \"question\": \"Choose the correct option:\",\n        \"options\": [\n          \" English does not have different pronouns and verbs in terms of respect\",\n          \"So English is a language without politeness\"\n        ],\n        \"answer\": \n          \" English does not have different pronouns and verbs in terms of respect\"\n        \n      },\n      {\n        \"question\": \"Match the following\\na. Thanks- i. Request\\nb. Sorry- ii. Favour\\nc. Please- iii. Before interruption\",\n        \"options\": [\n          \" A-i B-ii C-iii\",\n          \"A-ii B- iii C- i\",\n          \"A-iii B-ii C-i\",\n          \"A- ii B-i C- iii\"\n        ],\n        \"answer\": \n          \"A-ii B- iii C- i\"\n        \n      },\n      {\n        \"question\": \"Polite way of suggestion is?\",\n        \"options\": [\n          \" Assertive sentences\",\n          \"Question form\",\n          \"Both\",\n          \"None of the above\"\n        ],\n        \"answer\": \n          \"Question form\"\n        \n      },\n      {\n        \"question\": \"Satwik (during a presentation) introduces himself “Hi everyone! I am Satwik from the department of civil engineering”. Is it an appropriate introduction?\",\n        \"options\": [\n          \" Yes\",\n          \"No\"\n        ],\n        \"answer\": \n          \"No\"\n        \n      },\n      {\n        \"question\": \"Choose the correct option:\\nA. A good research requires a lot of money\\nB. A good research requires brain and creativity\",\n        \"options\": [\n          \" Only A is true\",\n          \"Only B is true\",\n          \"Both are true\",\n          \"Both are false\"\n        ],\n        \"answer\": \n          \"Only B is true\"\n        \n      },\n      {\n        \"question\": \"Presenter should overcome nervousness through___\",\n        \"options\": [\n          \" Appearance\",\n          \"Research\",\n          \"Constant practice\",\n          \"None of the above\"\n        ],\n        \"answer\": \n          \"Constant practice\"\n        \n      },\n      {\n        \"question\": \"Absence of problem quantification would lead to ___\",\n        \"options\": [\n          \" Inadequate message\",\n          \"Generalisation\",\n          \"Vague presentation\",\n          \"None of the above\"\n        ],\n        \"answer\": \n          \"Generalisation\"\n        \n      },\n      {\n        \"question\": \"Meena had to do a three minutes presentation. She showed 10 photographs. What would be the effect of Seetha's presentation on the audience?\",\n        \"options\": [\n          \" Made the audience stay with the topic\",\n          \"Distracted from the topic\",\n          \"Entertain audience\",\n          \"None of the above\"\n        ],\n        \"answer\": \n          \"Distracted from the topic\"\n        \n      }\n    ]\n  },\n  {\n    \"name\": \"7\",\n    \"questions\": [\n      {\n        \"question\": \"Which among the following is not a synonym for the word 'salient'\",\n        \"options\": [\n          \" Chief\",\n          \"Major\",\n          \"Silent\",\n          \"notable\"\n        ],\n        \"answer\": \n          \"Silent\"\n        \n      },\n      {\n        \"question\": \"A: Words in South Indian languages mostly end in vowels, m and n sounds. B: Words in North Indian languages mostly do not end in Vowels, m and n sounds.\",\n        \"options\": [\n          \" A and B are true\",\n          \"A and B are false\",\n          \"A is true, B is false\",\n          \"A is false, B is true\"\n        ],\n        \"answer\": \n          \" A and B are true\"\n        \n      },\n      {\n        \"question\": \"In the word elephant, which syllable is stressed?\",\n        \"options\": [\n          \" el-e -'phant\",\n          \"'el-e-phant\",\n          \"el-'e-phant\"\n        ],\n        \"answer\": \n          \"'el-e-phant\"\n        \n      },\n      {\n        \"question\": \"They have different sounds (sometimes)\",\n        \"options\": [\n          \" They are differently organised\",\n          \"They are differently emphasised\",\n          \"All of the above\"\n        ],\n        \"answer\": \n          \"All of the above\"\n        \n      },\n      {\n        \"question\": \"A pause is a brief silence between two words, phrases or sentences. The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \" True\"\n        \n      },\n      {\n        \"question\": \"I didn't have my breakfast today morning. Is the sentence grammatically right?\",\n        \"options\": [\n          \" Yes\",\n          \"No\"\n        ],\n        \"answer\": \n          \"No\"\n        \n      },\n      {\n        \"question\": \"In dictionaries, the pronunciation of a word is represented using\",\n        \"options\": [\n          \" Numbers\",\n          \"Logos\",\n          \"Figures\",\n          \"Phonetic alphabet\"\n        ],\n        \"answer\": \n          \"Phonetic alphabet\"\n        \n      },\n      {\n        \"question\": \"English has an audible pause after every few words. The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \" True\"\n        \n      },\n      {\n        \"question\": \"One or more words used like one word in a sentence is called a phrase. The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \" True\"\n        \n      },\n      {\n        \"question\": \"n the word engi'neer, the vertical stroke above and in front of the second syllable indicates that it has\",\n        \"options\": [\n          \" Pitch\",\n          \"Stress\",\n          \"Rythm\",\n          \"Lengthening\"\n        ],\n        \"answer\": \n          \"Stress\"\n        \n      }\n    ]\n  },\n  {\n    \"name\": \"8\",\n    \"questions\": [\n      {\n        \"question\": \"While listening, keen attention has to be paid to the pronunciation of names and numbers because\",\n        \"options\": [\n          \" They carry information\",\n          \"They are easily forgotten\",\n          \"They are easily misunderstood\",\n          \"All the above\"\n        ],\n        \"answer\": \n          \"All the above\"\n        \n      },\n      {\n        \"question\": \"Stress is marked on the consonant cluster. The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \"False\"\n        \n      },\n      {\n        \"question\": \"In the pronunciation of a word, the strongest degree of stress placed is called the loudness. The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \"False\"\n        \n      },\n      {\n        \"question\": \"Abbreviations take stress on the first letter. The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \"False\"\n        \n      },\n      {\n        \"question\": \"The fourth syllable of the word 'examination' receives the primary stress. The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \" True\"\n        \n      },\n      {\n        \"question\": \"There are three syllables in the word \\\"happiness\\\". The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \" True\"\n        \n      },\n      {\n        \"question\": \"The word 'free' is monosyllabic\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \" True\"\n        \n      },\n      {\n        \"question\": \"In questions 9 and 10, stress is marked differently. Choose the correct one\",\n        \"options\": [\n          \" /brıgə'dıǝ/\",\n          \"/brı'gədıə/\",\n          \"/'brıgədıə/\",\n          \"/b'rıgədıǝ/\"\n        ],\n        \"answer\": \n          \" /brıgə'dıǝ/\"\n        \n      },\n      {\n        \"question\": \"Population\",\n        \"options\": [\n          \" /'pppjulers(ə)n/\",\n          \"/pppju'lers(ə)n/\",\n          \"/pppjuler's(ə)n/\",\n          \"/pp'pju'lers(ə)n/\"\n        ],\n        \"answer\": \n          \"/pppju'lers(ə)n/\"\n        \n      }\n    ]\n  },\n  {\n    \"name\": \"9\",\n    \"questions\": [\n      {\n        \"question\": \"One speech unit that can be produced in one breath pulse is equal to one intonation. The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \"False\"\n        \n      },\n      {\n        \"question\": \"The number of syllables in a word is determined by the number of letters in that word The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \"False\"\n        \n      },\n      {\n        \"question\": \"Only one speech unit can be produced in one breath pulse. The statement is-----\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \" True\"\n        \n      },\n      {\n        \"question\": \"A syllable does not exist without a vowel. The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \" True\"\n        \n      },\n      {\n        \"question\": \"When we pronounce a syllable more prominently than the other syllables in that word, then the syllable is said to have received\",\n        \"options\": [\n          \" Stress\",\n          \"Pitch\",\n          \"Loudness\",\n          \"Amplitude\"\n        ],\n        \"answer\": \n          \" Stress\"\n        \n      },\n      {\n        \"question\": \"In English, the stress shifts as the word derives new forms with suffixation/prefixation. The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \" True\"\n        \n      },\n      {\n        \"question\": \"Stress marking in English is a big challenge for the non native speakers. The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \" True\"\n        \n      },\n      {\n        \"question\": \"Vowels are the elements and Consonants are the elements in a word\",\n        \"options\": [\n          \" Unimportant and obligatory\",\n          \"Obligatory and optional\",\n          \"Optional and obligatory\",\n          \"None of the above\"\n        ],\n        \"answer\": \n          \"Obligatory and optional\"\n        \n      },\n      {\n        \"question\": \"Photography\",\n        \"options\": [\n          \" First syllable\",\n          \"Second syllable\",\n          \"Last syllable\",\n          \"Penultimate syllable\"\n        ],\n        \"answer\": \n          \"Second syllable\"\n        \n      },\n      {\n        \"question\": \"Photographic\",\n        \"options\": [\n          \" First syllable\",\n          \"Second syllable\",\n          \"Third syllable\",\n          \"Last syllable\"\n        ],\n        \"answer\": \n          \"Third syllable\"\n        \n      }\n    ]\n  },\n  {\n    \"name\": \"10\",\n    \"questions\": [\n      {\n        \"question\": \"Which among the following words is not a derived word?\",\n        \"options\": [\n          \" Painter\",\n          \"Serviceable\",\n          \"harmony\",\n          \"unhappy\"\n        ],\n        \"answer\": \n          \"harmony\"\n        \n      },\n      {\n        \"question\": \"Words that end in the suffix -ate usually take stress on the last syllable. The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \"False\"\n        \n      },\n      {\n        \"question\": \"Words ending in -ea, -ean, -ee-eer or – ere, -esce, -ese, -esque, -ette, -ier take stress on the first syllable. The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \"False\"\n        \n      },\n      {\n        \"question\": \"Authenticate\",\n        \"options\": [\n          \" au-\",\n          \"-then\",\n          \"ti-\",\n          \"-cate\"\n        ],\n        \"answer\": \n          \"-then\"\n        \n      },\n      {\n        \"question\": \"Automatic\",\n        \"options\": [\n          \" au-\",\n          \"to-\",\n          \"ma-\",\n          \"-tic\"\n        ],\n        \"answer\": \n          \"ma-\"\n        \n      },\n      {\n        \"question\": \"Admission\",\n        \"options\": [\n          \" Ad-\",\n          \"mi-\",\n          \"-(s)ion\",\n          \"No stress\"\n        ],\n        \"answer\": \n          \"mi-\"\n        \n      },\n      {\n        \"question\": \"Demoralize\",\n        \"options\": [\n          \" /dı'mprǝlnıΖ/\",\n          \"/'dımprǝlnız/\",\n          \"/dımprə'lnız/\",\n          \"/dımp'rəlnız/\"\n        ],\n        \"answer\": \n          \" /dı'mprǝlnıΖ/\"\n        \n      },\n      {\n        \"question\": \"Degenerate\",\n        \"options\": [\n          \" /'dıdzen(ə)rət/\",\n          \"/dı'dzen(ə)rət/\",\n          \"/dı'dze'n(ə)rət/\",\n          \"/dı'dzen(ə) 'rət/\"\n        ],\n        \"answer\": \n          \"/dı'dzen(ə)rət/\"\n        \n      },\n      {\n        \"question\": \"Contaminate\",\n        \"options\": [\n          \" kənta: 'mınert/\",\n          \"kənta:mı'next/\",\n          \"kən'ta:mıneit/\",\n          \"'kənta:mıneit/\"\n        ],\n        \"answer\": \n          \"kən'ta:mıneit/\"\n        \n      }\n    ]\n  },\n  {\n    \"name\": \"11\",\n    \"questions\": [\n      {\n        \"question\": \"For a presentation to be precise within the time limits, it is important to choose a specific topic over a generic/random topic. The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \" True\"\n        \n      },\n      {\n        \"question\": \"While presenting, Anil is looking at the slides again and again. What could be the possible reason for it?\",\n        \"options\": [\n          \" He is not confident of his slides\",\n          \"He wants to relax\",\n          \"He wants to give emphasis to a particular slide\",\n          \"All the above\"\n        ],\n        \"answer\": \n          \" He is not confident of his slides\"\n        \n      },\n      {\n        \"question\": \"The basic principle behind making a good presentation is to load the slides with information to make it interesting for the audience. The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \"False\"\n        \n      },\n      {\n        \"question\": \"Veena chooses to speak on Deforestation. But majority of her slides talk about planting of trees. Her presentation lacks\",\n        \"options\": [\n          \" Timing\",\n          \"Precision\",\n          \"Focus\",\n          \"None of the above\"\n        ],\n        \"answer\": \n          \"Focus\"\n        \n      },\n      {\n        \"question\": \"Which among the following is true about an ideal presentation?\",\n        \"options\": [\n          \" a and b\",\n          \"b and c\",\n          \"a and c\",\n          \"a, b, c, and d\"\n        ],\n        \"answer\": \n          \"a, b, c, and d\"\n        \n      },\n      {\n        \"question\": \"Cartoons in slides can\",\n        \"options\": [\n          \" Avoid the problem of listeners' monotony\",\n          \"Cause tiredness\",\n          \"Make the presentation worthless\",\n          \"None of the above\"\n        ],\n        \"answer\": \n          \" Avoid the problem of listeners' monotony\"\n        \n      },\n      {\n        \"question\": \"Constant practice can overcome nervousness. The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \" True\"\n        \n      },\n      {\n        \"question\": \"A diagram that represents a process by showing the steps as boxes of various kinds, and their order by connecting them with arrows is called\",\n        \"options\": [\n          \" Bar graph\",\n          \"Map\",\n          \"Line graph\",\n          \"Flowchart\"\n        ],\n        \"answer\": \n          \"Flowchart\"\n        \n      },\n      {\n        \"question\": \"While making a presentation, Arjun made a statement regarding a problem - \\\"Everyone is dying of starvation in Telangana\\\". What is the problem with this statement?\",\n        \"options\": [\n          \" The statement is ungrammatical\",\n          \"The statement is too long\",\n          \"He did not quantify the problem\",\n          \"None of the above\"\n        ],\n        \"answer\": \n          \"He did not quantify the problem\"\n        \n      }\n    ]\n  },\n  {\n    \"name\": \"12\",\n    \"questions\": [\n      {\n        \"question\": \"Choose the correct order of airflow during sound production\",\n        \"options\": [\n          \" Lungs- Uvula- Vocal cords- Larynx- Mouth\",\n          \"Lungs- Vocal Cords- Uvula- Larynx- Mouth\",\n          \"Lungs- Larynx- uvula- vocal cords- Mouth\",\n          \"Lungs- Larynx-Vocal cords- uvula - mouth\"\n        ],\n        \"answer\": \n          \"Lungs- Larynx-Vocal cords- uvula - mouth\"\n        \n      },\n      {\n        \"question\": \"Study of production of speech sounds is called morphology. The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \"False\"\n        \n      },\n      {\n        \"question\": \"The Greek word for the term \\\"sound\\\" is lexicon. The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \"False\"\n        \n      },\n      {\n        \"question\": \"Vibration of pharynx causes sound. The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \" True\"\n        \n      },\n      {\n        \"question\": \"Identify the nasal sound from the following\",\n        \"options\": [\n          \" k\",\n          \"s\",\n          \"n\",\n          \"p\"\n        ],\n        \"answer\": \n          \"n\"\n        \n      },\n      {\n        \"question\": \"Identify the vowel sound in the term \\\"Gate\\\"\",\n        \"options\": [\n          \" ei\",\n          \"a\",\n          \"e\",\n          \"ae\"\n        ],\n        \"answer\": \n          \" ei\"\n        \n      },\n      {\n        \"question\": \"Identify the vowel sound in the term \\\"Doubt\\\"\",\n        \"options\": [\n          \" ou\",\n          \"o\",\n          \"eu\",\n          \"au\"\n        ],\n        \"answer\": \n          \"au\"\n        \n      },\n      {\n        \"question\": \"The sounds. 'f' and 'v' differ only in terms of?\",\n        \"options\": [\n          \" Place of articulation\",\n          \"Manner of articulation\",\n          \"Vibration\",\n          \"All of the above\"\n        ],\n        \"answer\": \n          \"Vibration\"\n        \n      },\n      {\n        \"question\": \"dentify the vowel distribution in the word \\\"beetle\\\"\",\n        \"options\": [\n          \" Only one long vowel\",\n          \"Only short vowel\",\n          \"Long vowel and short vowel\",\n          \"Short vowel and long vowel\"\n        ],\n        \"answer\": \n          \" Only one long vowel\"\n        \n      }\n    ]\n  },\n  {\n    \"name\": \"12\",\n    \"questions\": [\n      {\n        \"question\": \"The ability to learn language begins at 2 years. The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \"False\"\n        \n      },\n      {\n        \"question\": \"Language learning requires exposure. The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \" True\"\n        \n      },\n      {\n        \"question\": \"Choose the correct option:\\nA: If you want to tell jokes while speaking, they have to be delivered with a degree of theatricality\\nB: Joke is the best tool to get the attention of the listeners\",\n        \"options\": [\n          \" Only A is true\",\n          \"Only B is true\",\n          \"Both A and B are true\",\n          \"Both A and B are false\"\n        ],\n        \"answer\": \n          \" Only A is true\"\n        \n      },\n      {\n        \"question\": \"A:Puppies were adopted by numerous kind souls at the puppy drive.\\nB:Many kind souls adopted puppies during the puppy drive.\\nSentence A has been transcribed to form sentence B. The statement is\",\n        \"options\": [\n          \" True\",\n          \"False\"\n        ],\n        \"answer\": \n          \"False\"\n        \n      },\n      {\n        \"question\": \"Choose the correct option:\\nA: The sound /h/ in the word vehicle is silent.\\nB: The second syllable receives the main stress in the word industry.\",\n        \"options\": [\n          \"Only A is true\",\n          \"Only B is true\",\n          \"Both A and B are true\",\n          \"Both A and B are false\"\n        ],\n        \"answer\": \n          \"Only A is true\"\n        \n      },\n      {\n        \"question\": \"7) Which is not true about written English?\",\n        \"options\": [\n          \"It has grammar\",\n          \"It has punctuation\",\n          \"It has pronunciation\",\n          \"It has spelling\"\n        ],\n        \"answer\": \n          \"It has pronunciation\"\n        \n      },\n      {\n        \"question\": \"Inability to learn the phonology of the second language is the main reason for non-standard sounds in second language. The statement is\",\n        \"options\": [\n          \"True\",\n          \"False\"\n        ],\n        \"answer\": \n          \"True\"\n        \n      },\n      {\n        \"question\": \"Acquiring standard sounds is the way to communicate with the rest of the world. The statement is\",\n        \"options\": [\n          \"True\",\n          \"False\"\n        ],\n        \"answer\": \n          \"True\"\n        \n      },\n      {\n        \"question\": \"Choose the correct option:\\nA: Made by plastic\\nB: Made with China\",\n        \"options\": [\n          \"Only A is correct\",\n          \"Only B is correct\",\n          \"Both A and B are correct\",\n          \"Both A and B are false\"\n        ],\n        \"answer\": \n          \"Both A and B are false\"\n        \n      }\n    ]\n  }\n]\n}\n\n\n\n\n\n"
    },
    {
      "id": 52,
      "name": "tailwind.config.ts",
      "category": "file",
      "path": "ExamCooker-2024/tailwind.config.ts",
      "content": "import type { Config } from \"tailwindcss\"\n\nconst config = {\n  darkMode: [\"class\"],\n  content: [\n    './pages/**/*.{ts,tsx}',\n    './components/**/*.{ts,tsx}',\n    './app/**/*.{ts,tsx}',\n    './src/**/*.{ts,tsx}',\n  ],\n  prefix: \"\",\n  theme: {\n    container: {\n      center: true,\n      padding: \"2rem\",\n      screens: {\n        \"2xl\": \"1400px\",\n      },\n    },\n    extend: {\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: \"0\" },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: \"0\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\")],\n} satisfies Config\n\nexport default config",
      "dependencies": [
        "tailwindcss",
        "tailwindcss-animate"
      ]
    },
    {
      "id": 53,
      "name": "home_footer.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/@protected_routes/home/home_footer.tsx",
      "content": "import React from 'react';\nimport Image from 'next/image';\nimport { faInstagram } from '@fortawesome/free-brands-svg-icons';\nimport { faLinkedinIn } from '@fortawesome/free-brands-svg-icons';\nimport { faYoutube } from '@fortawesome/free-brands-svg-icons';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ExamCookerLogo from '@/app/components/common/ExamCookerLogo';\n\nfunction HomeFooter() {\n    return (\n        \u003cfooter className=\"text-black dark:text-[#D5D5D5] flex flex-col sm:flex-row justify-between items-center pt-6 pb-6 mx-20% bg-[#C2E6EC] dark:bg-[#0C1222] border-t border-t-[#82BEE9] dark:border-t-[#3BF4C7] px-4 sm:px-8\"\u003e\n            \u003cdiv className=\"flex justify-center mb-4 sm:mb-0\"\u003e\n                \u003cImage\n                    src={'/assets/ACM logo.svg'}\n                    alt=\"ACM VIT Student Chapter\"\n                    width={180}\n                    height={180}\n                    className=\"rounded-full hidden sm:block\"\n                /\u003e\n            \u003c/div\u003e\n            \u003cExamCookerLogo /\u003e\n            \u003cdiv className=\"flex items-center space-x-3 sm:space-x-4\"\u003e\n                \u003cp className=\"text-lg sm:text-xl font-semibold text-black dark:text-[#D5D5D5]\"\u003eFind us:\u003c/p\u003e\n                \u003ca href=\"https://www.instagram.com/acmvit?igsh=cXEybjdxb3hja3Iw\" target=\"_blank\" \u003e\n                    \u003cFontAwesomeIcon icon={faInstagram} className=\"text-xl sm:text-2xl text-black dark:text-[#D5D5D5]\" /\u003e\n                \u003c/a\u003e\n                \u003ca href=\"https://in.linkedin.com/company/acmvit\" target=\"_blank\"\u003e\n                    \u003cFontAwesomeIcon icon={faLinkedinIn} className=\"text-xl sm:text-2xl text-black dark:text-[#D5D5D5]\" /\u003e\n                \u003c/a\u003e\n                \u003ca href=\"https://www.youtube.com/@acm_vit\" target=\"_blank\"\u003e\n                    \u003cFontAwesomeIcon icon={faYoutube} className=\"text-xl sm:text-2xl text-black dark:text-[#D5D5D5]\" /\u003e\n                \u003c/a\u003e\n                \u003ca href=\"https://github.com/ACM-VIT\" target=\"_blank\"\u003e\n                    \u003cFontAwesomeIcon icon={faGithub} className=\"text-xl sm:text-2xl text-black dark:text-[#D5D5D5]\" /\u003e\n                \u003c/a\u003e\n            \u003c/div\u003e\n        \u003c/footer\u003e\n    );\n}\n\nexport default HomeFooter;\n",
      "dependencies": [
        "/assets/ACM logo.svg",
        "react",
        "next/image",
        "@fortawesome/free-brands-svg-icons",
        "@fortawesome/react-fontawesome",
        "@/app/components/common/ExamCookerLogo"
      ]
    },
    {
      "id": 54,
      "name": "loading.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/@protected_routes/loading.tsx",
      "content": "\"use client\";\nimport LoadingSvg from \"@/public/assets/Loader.svg\"\nimport Image from \"next/image\";\nimport {useMemo} from \"react\";\n\nfunction getQuirkyLine() {\n    const lines = [\n        \"Brewing up something amazing for you...\",\n        \"Grinding away at loading your content...\",\n        \"Loading up the next serving of coffee...\",\n        \"Adding a shot of speed to your load...\",\n        \"Avoiding work by loading things...\",\n        \"Brewing up a page just for you...\",\n        \"Procrastinating by making you wait for this load...\",\n    ]\n\n\n    return lines[Math.floor(Math.random() * lines.length)];\n}\n\nexport default function Loading() {\n\n    const line = useMemo(getQuirkyLine, [])\n\n    return (\n        \u003cdiv\n            style={{\n                position: 'fixed',\n                top: 0,\n                left: 0,\n                width: '100vw',\n                height: '100vh',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                backgroundColor: 'rgba(0, 0, 0, 0.8)',\n                zIndex: 50,\n                color: 'white',\n            }}\n        \u003e\n            \u003cdiv className=\"flex flex-col justify-center items-center\"\u003e\n                \u003cImage src={LoadingSvg} alt=\"Loader\" className=\"animate-spin size-1/3\" /\u003e\n                \u003ch6 className=\"p-5\"\u003e{line}\u003c/h6\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    );\n}\n",
      "dependencies": [
        "@/public/assets/Loader.svg",
        "next/image",
        "react"
      ]
    },
    {
      "id": 55,
      "name": "page.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/@protected_routes/mod/page.tsx",
      "content": "import React from \"react\";\nimport {auth} from \"../../auth\";\nimport {fetchUnclearedItems} from \"../../actions/moderatorActions\";\nimport ModeratorDashboardClient from \"../../components/ModeratorDashBoard\";\n\nasync function ModeratorDashboard({searchParams}: {\n    searchParams: { page?: string; search?: string; tags?: string | string[] };\n}) {\n    const session = await auth();\n\n    // @ts-ignore\n    if (session?.user?.role !== \"MODERATOR\") {\n        return \u003cdiv\u003eAccess denied. Only moderators can view this page.\u003c/div\u003e;\n    }\n\n    try {\n        const {notes, pastPapers, totalUsers} = await fetchUnclearedItems();\n        return (\n            \u003cModeratorDashboardClient\n                initialNotes={notes}\n                initialPastPapers={pastPapers}\n                searchParams={searchParams}\n                totalUsers={totalUsers}\n            /\u003e\n        );\n    } catch (error) {\n        if (error instanceof Error) {\n            return \u003cdiv\u003eError fetching data: {error.message}\u003c/div\u003e;\n        } else {\n            return \u003cdiv\u003eError fetching data: Unknown error occurred.\u003c/div\u003e;\n        }\n    }\n}\n\nexport default ModeratorDashboard;\n",
      "dependencies": [
        "react"
      ]
    },
    {
      "id": 56,
      "name": "loading.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/@protected_routes/notes/loading.tsx",
      "content": "import Loading from \"../loading\";\n\nexport default Loading;\n"
    },
    {
      "id": 57,
      "name": "page.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/@protected_routes/notes/page.tsx",
      "content": "import React from 'react';\nimport Fuse from 'fuse.js';\nimport {Note, PrismaClient, Tag} from \"@prisma/client\";\nimport {redirect} from 'next/navigation';\nimport Pagination from \"../../components/Pagination\";\nimport NotesCard from \"../../components/NotesCard\";\nimport SearchBar from \"../../components/SearchBar\";\nimport Dropdown from \"../../components/FilterComponent\";\nimport UploadButtonNotes from \"../../components/UploadButtonNotes\";\n\n\nconst SCORE_THRESHOLD = 0.6;\n\ntype NoteWithTags = Note \u0026 {\n    tags: Tag[];\n};\n\nfunction validatePage(page: number, totalPages: number): number {\n    if (isNaN(page) || page \u003c 1) {\n        return 1;\n    }\n    if (page \u003e totalPages \u0026\u0026 totalPages \u003e 0) {\n        return totalPages;\n    }\n    return page;\n}\n\nfunction performSearch(query: string, dataSet: NoteWithTags[]) {\n    const options = {\n        includeScore: true,\n        keys: [\n            { name: 'title', weight: 2 },\n            { name: 'tags.name', weight: 1 }\n        ],\n        threshold: 0.6,\n        ignoreLocation: true,\n        minMatchCharLength: 2,\n        findAllMatches: true,\n        useExtendedSearch: true,\n    };\n    const fuse = new Fuse(dataSet, options);\n    const searchResults = fuse.search({\n        $or: [\n            { title: query },\n            { 'tags.name': query },\n            { title: `'${query}` }\n        ]\n    });\n    return searchResults\n        .filter((fuseResult) =\u003e (fuseResult.score || 1) \u003c SCORE_THRESHOLD)\n        .map((fuseResult) =\u003e fuseResult.item);\n}\n\nasync function notesPage({ searchParams }: { searchParams: { page?: string, search?: string, tags?: string | string[] } }) {\n    const prisma = new PrismaClient();\n    const pageSize = 9;\n    const search = searchParams.search || '';\n    const page = parseInt(searchParams.page || '1', 10);\n    const tags: string[] = Array.isArray(searchParams.tags)\n        ? searchParams.tags\n        : (searchParams.tags ? searchParams.tags.split(',') : []);\n\n    let filteredNotes = await prisma.note.findMany({\n        where: {\n            isClear: true,\n            ...(tags.length \u003e 0 \u0026\u0026 {\n                tags: {\n                    some: {\n                        name: {\n                            in: tags,\n                        },\n                    },\n                },\n            }),\n        },\n        include: {\n            tags: true,\n        },\n        orderBy: {\n            createdAt: 'desc',\n        }\n    });\n    if (search) {\n        filteredNotes = performSearch(search, filteredNotes);\n    }\n\n    const totalCount = filteredNotes.length;\n    const totalPages = Math.ceil(totalCount / pageSize);\n\n    const validatedPage = validatePage(page, totalPages);\n\n    const startIndex = (validatedPage - 1) * pageSize;\n    const endIndex = startIndex + pageSize;\n    const paginatedNotes = filteredNotes.slice(startIndex, endIndex);\n\n    if (validatedPage !== page) {\n        const searchQuery = search ? `\u0026search=${encodeURIComponent(search)}` : '';\n        const tagsQuery = tags.length \u003e 0 ? `\u0026tags=${encodeURIComponent(tags.join(','))}` : '';\n        redirect(`/notes?page=${validatedPage}${searchQuery}${tagsQuery}`);\n    }\n\n    return (\n        \u003cdiv className=\"p-8 transition-colors flex flex-col min-h-screen items-center text-black dark:text-[#D5D5D5]\"\u003e\n            \u003ch1 className=\"text-center mb-4\"\u003eNotes\u003c/h1\u003e\n            \u003cdiv className=\"hidden w-5/6 lg:w-1/2 md:flex items-center justify-center p-4 space-y-4 sm:space-y-0 sm:space-x-4 pt-2\"\u003e\n                \u003cDropdown pageType='notes' /\u003e\n                \u003cSearchBar pageType=\"notes\" initialQuery={search} /\u003e\n                \u003cUploadButtonNotes /\u003e\n            \u003c/div\u003e\n\n            \u003cdiv className='flex-col w-5/6 md:hidden space-y-4'\u003e\n                \u003cSearchBar pageType=\"notes\" initialQuery={search} /\u003e\n                \u003cdiv className='flex justify-between'\u003e\n                    \u003cDropdown pageType='notes' /\u003e\n                    \u003cUploadButtonNotes /\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n\n            {tags.length \u003e 0 \u0026\u0026 (\n                \u003cdiv className=\"flex justify-center mb-4\"\u003e\n                    \u003cdiv className=\"flex flex-wrap gap-2\"\u003e\n                        {tags.map((tag, index) =\u003e (\n                            \u003cspan key={index} className=\"bg-blue-100 text-blue-800 px-2 py-1 rounded\"\u003e\n                                {tag}\n                            \u003c/span\u003e\n                        ))}\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            )}\n\n            \u003cdiv className='flex justify-center'\u003e\n                \u003cdiv className=\"w-full grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-5 p-6  place-content-center\"\u003e\n                    {paginatedNotes.length \u003e 0 ? (\n                        paginatedNotes.map((eachNote, index) =\u003e (\n                            \u003cNotesCard\n                                key={eachNote.id}\n                                note={eachNote}\n                                index={index}\n                            /\u003e\n                        ))\n                    ) : (\n                        \u003cp className=\"col-span-3 text-center\"\u003e\n                            {search || tags.length \u003e 0\n                                ? \"No notes found matching your search or selected tags.\"\n                                : \"No notes found.\"}\n                        \u003c/p\u003e\n                    )}\n                \u003c/div\u003e\n            \u003c/div\u003e\n\n            {totalPages \u003e 1 \u0026\u0026 (\n                \u003cdiv className=\"mt-auto\"\u003e\n                    \u003cPagination\n                        currentPage={validatedPage}\n                        totalPages={totalPages}\n                        basePath=\"/notes\"\n                        searchQuery={search}\n                        tagsQuery={tags.join(',')}\n                    /\u003e\n                \u003c/div\u003e\n            )}\n        \u003c/div\u003e\n    );\n}\n\nexport default notesPage;\n",
      "dependencies": [
        "next/navigation",
        "react",
        "fuse.js",
        "@prisma/client"
      ]
    },
    {
      "id": 58,
      "name": "loading.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/@protected_routes/resources/[id]/loading.tsx",
      "content": "import Loading from \"../loading\";\n\nexport default Loading;\n"
    },
    {
      "id": 59,
      "name": "page.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/@protected_routes/syllabus/page.tsx",
      "content": "import React from 'react';\nimport { PrismaClient, syllabi } from '@prisma/client';\nimport SyllabusCard from '@/app/components/SyllabusCard';\nimport SearchBar from \"../../components/SearchBar\";\nimport Pagination from \"../../components/Pagination\";\nimport Fuse from 'fuse.js';\n\nconst prisma = new PrismaClient();\nconst SCORE_THRESHOLD = 0.6;\n\nfunction validatePage(page: number, totalPages: number): number {\n    if (isNaN(page) || page \u003c 1) {\n        return 1;\n    }\n    if (page \u003e totalPages \u0026\u0026 totalPages \u003e 0) {\n        return totalPages;\n    }\n    return page;\n}\n\nfunction performSearch(query: string, dataSet: syllabi[]) {\n    const options = {\n        includeScore: true,\n        keys: [\n            { name: 'name', weight: 2 },\n        ],\n        threshold: 0.6,\n        ignoreLocation: true,\n        minMatchCharLength: 2,\n        findAllMatches: true,\n        useExtendedSearch: true\n    };\n    const fuse = new Fuse(dataSet, options);\n    const searchResults = fuse.search(query);\n    return searchResults\n        .filter((fuseResult) =\u003e (fuseResult.score || 1) \u003c SCORE_THRESHOLD)\n        .map((fuseResult) =\u003e fuseResult.item);\n}\n\nexport default async function SyllabusPage({ searchParams }: { searchParams: { page?: string, search?: string } }) {\n    const syllabi = await prisma.syllabi.findMany();\n    const pageSize = 16; // We'll keep this constant for server-side pagination\n    const search = searchParams.search || '';\n    const page = parseInt(searchParams.page || '1', 10);\n    \n    let filteredSyllabi = syllabi;\n    if (search) {\n        filteredSyllabi = performSearch(search, syllabi);\n    }\n\n    const totalCount = filteredSyllabi.length;\n    const totalPages = Math.ceil(totalCount / pageSize);\n\n    const validatedPage = validatePage(page, totalPages);\n\n    const startIndex = (validatedPage - 1) * pageSize;\n    const endIndex = startIndex + pageSize;\n    const paginatedSyllabi = filteredSyllabi.slice(startIndex, endIndex);\n\n    return (\n        \u003cdiv className=\"min-h-screen text-black dark:text-gray-200 flex flex-col items-center justify-start p-8\"\u003e\n            \u003ch1 className=\"text-center mb-4\"\u003eSyllabus\u003c/h1\u003e\n            \n            \u003cdiv className=\"w-full max-w-3xl mb-6 sm:mb-8 pt-2\"\u003e\n                \u003cSearchBar pageType=\"syllabus\" initialQuery={search} /\u003e\n            \u003c/div\u003e\n\n            \u003cdiv className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4 sm:gap-6 w-[90vw]\"\u003e\n                {paginatedSyllabi.map((syllabus, index) =\u003e (\n                    \u003cdiv key={syllabus.id} className={`\n                        ${index \u003c 8 ? '' : 'hidden sm:block'}\n                        ${index \u003c 12 ? '' : 'hidden lg:block'}\n                        ${index \u003c 16 ? '' : 'hidden xl:block'}\n                    `}\u003e\n                        \u003cSyllabusCard syllabus={syllabus} /\u003e\n                    \u003c/div\u003e\n                ))}\n            \u003c/div\u003e\n\n            {totalPages \u003e 1 \u0026\u0026 (\n                \u003cdiv className=\"mt-8 sm:mt-10 md:mt-12\"\u003e\n                    \u003cPagination\n                        currentPage={validatedPage}\n                        totalPages={totalPages}\n                        basePath=\"/syllabus\"\n                        searchQuery={search}\n                    /\u003e\n                \u003c/div\u003e\n            )}\n        \u003c/div\u003e\n    );\n}\n",
      "dependencies": [
        "react",
        "@prisma/client",
        "@/app/components/SyllabusCard",
        "fuse.js"
      ]
    },
    {
      "id": 60,
      "name": "page.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/@unprotected_routes/[...slug]/page.tsx",
      "content": "import {redirect} from \"next/navigation\";\nimport {headers} from \"next/headers\";\n\nfunction Page() {\n        const header_url = headers().get('x-url') || \"\";\n        return redirect(`/api/auth/init?redirect=${encodeURIComponent(header_url)}`);\n}\n\nexport default Page;",
      "dependencies": [
        "next/navigation",
        "next/headers"
      ]
    },
    {
      "id": 61,
      "name": "EditButton.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/components/EditButton.tsx",
      "content": "'use client'\n\nimport React, { useState } from 'react';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter } from \"@/components/ui/dialog\";\nimport { updateFile } from '../actions/UpdateFile';\n\nconst EditButton = ({ itemID, title, activeTab } : { itemID: string, title: string, activeTab: string }) =\u003e {\n  const [isOpen, setIsOpen] = useState(false);\n  const [editedTitle, setEditedTitle] = useState(title);\n\n  const handleEdit = async () =\u003e {\n    try {\n      const result = await updateFile(itemID, editedTitle, activeTab);\n      if (result?.success) {\n        console.log(`${activeTab} updated successfully:`, result.note);\n        \n      } else {\n        console.error(`Failed to update ${activeTab}:`, result?.error);\n      }\n    } catch (error) {\n      console.error(`Error updating ${activeTab}:`, error);\n    } finally {\n        setIsOpen(false);\n    }\n  };\n\n\n  return (\n    \u003c\u003e\n      \u003cbutton\n        onClick={() =\u003e setIsOpen(true)}\n        className=\"text-base sm:text-xs bg-blue-500 text-white px-3 py-1 rounded-md \n                    opacity-75 group-hover:opacity-100 transition-opacity duration-200 ease-in-out\n                    hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50\"\n      \u003e\n        Edit\n      \u003c/button\u003e\n\n      \u003cDialog open={isOpen} onOpenChange={setIsOpen}\u003e\n        \u003cDialogContent\u003e\n          \u003cDialogHeader\u003e\n            \u003cDialogTitle\u003eEdit {activeTab === 'notes' ? 'Note' : 'Past Paper'}\u003c/DialogTitle\u003e\n          \u003c/DialogHeader\u003e\n          \u003cinput\n            type=\"text\"\n            value={editedTitle}\n            onChange={(e) =\u003e setEditedTitle(e.target.value)}\n            placeholder=\"Enter new title\"\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          /\u003e\n          \u003cDialogFooter className=\"flex justify-end space-x-2 mt-4\"\u003e\n            {editedTitle !== title \u0026\u0026 \u003cbutton\n              onClick={handleEdit}\n              className=\"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 focus:outline-none\"\n                \u003e\n              Save\n            \u003c/button\u003e}\n          \u003c/DialogFooter\u003e\n        \u003c/DialogContent\u003e\n      \u003c/Dialog\u003e\n    \u003c/\u003e\n  );\n};\n\nexport default EditButton;",
      "dependencies": [
        "@/components/ui/dialog",
        "react"
      ]
    },
    {
      "id": 62,
      "name": "FavFetchFilter.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/components/FavFetchFilter.tsx",
      "content": "\"use client\";\n\n// todo sort the types out\n\nimport React, { useState, useEffect } from 'react';\nimport NotesCard from './NotesCard';\nimport PastPaperCard from './PastPaperCard';\nimport ResourceCard from './ResourceCard';\nimport ForumCard from './ForumCard';\nimport { useRouter } from 'next/navigation';\nimport { ForumPost, Tag, Comment, PastPaper, Note, Subject, User } from \"@prisma/client\";\n\ninterface ForumPostItem extends Omit\u003cForumPost, 'upvoteCount' | 'downvoteCount'\u003e {\n  type: 'forumpost';\n  author?: { name: string | null };\n  tags: Tag[];\n  comments: (Comment \u0026 { author: User })[];\n  upvoteCount: number;\n  downvoteCount: number;\n  votes: { type: 'UPVOTE' | 'DOWNVOTE' }[];\n  userVote?: 'UPVOTE' | 'DOWNVOTE' | null;\n}\n\n\ninterface PastPaperItem extends Omit\u003cPastPaper, 'type'\u003e {\n  type: 'pastpaper';\n}\n\ninterface NoteItem extends Omit\u003cNote, 'type'\u003e {\n  type: 'note';\n}\n\ninterface SubjectItem extends Omit\u003cSubject, 'type'\u003e {\n  type: 'subject';\n}\n\nexport function mapBookmarkToItem(bookmark: any): Item {\n  switch (bookmark.type) {\n    case 'forumpost':\n      return bookmark as ForumPostItem\n    case 'note':\n      return bookmark as NoteItem;\n    case 'pastpaper':\n      return bookmark as PastPaperItem;\n    case 'subject':\n      return {\n        id: bookmark.id,\n        name: bookmark.title,\n        type: 'subject',\n      } as SubjectItem;\n    default:\n      throw new Error(`Unknown bookmark type: ${(bookmark as any).type}`);\n  }\n}\n\n\ntype Item = PastPaperItem | NoteItem | SubjectItem | ForumPostItem;\n\n\ninterface FavFetchProps {\n  items: Item[];\n  activeTab: string;\n}\n\nconst FavFetch: React.FC\u003cFavFetchProps\u003e = ({ items, activeTab }) =\u003e {\n  const router = useRouter();\n  const [currentTab, setCurrentTab] = useState(activeTab);\n  useEffect(() =\u003e {\n    setCurrentTab(activeTab);\n  }, [activeTab]);\n\n  const tabs = ['Past Papers', 'Notes', 'Forum', 'Resources'];\n\n  const handleTabChange = (tab: string) =\u003e {\n    const url = new URL(window.location.href);\n    url.searchParams.set('type', tab);\n    url.searchParams.set('page', '1');\n    router.push(url.toString());\n  };\n\n  const renderContent = () =\u003e {\n    const filteredItems = items.filter(item =\u003e {\n      switch (currentTab) {\n        case 'Past Papers':\n          return item.type === 'pastpaper';\n        case 'Notes':\n          return item.type === 'note';\n        case 'Forum':\n          return item.type === 'forumpost';\n        case 'Resources':\n          return item.type === 'subject';\n        default:\n          return false;\n      }\n    });\n\n    if (filteredItems.length === 0) {\n      return (\n        \u003cdiv className=\"flex justify-center items-center h-[calc(65vh-200px)]\"\u003e\n          \u003cp className=\"text-gray-500\"\u003eIt seems you have not liked anything as of now...\u003c/p\u003e\n        \u003c/div\u003e\n      );\n    }\n\n    if (currentTab === 'Forum') {\n      return (\n        \u003cdiv className=\"flex flex-col gap-4 pt-6\"\u003e\n          {filteredItems.map((item) =\u003e {\n            if (item.type === 'forumpost') {\n              const forumPostItem = item as ForumPostItem;\n              return (\n                \u003cForumCard\n                  key={forumPostItem.id}\n                  post={forumPostItem}\n                  title={forumPostItem.title}\n                  desc={forumPostItem.description}\n                  author={forumPostItem.author?.name || null}\n                  createdAt={forumPostItem.createdAt}\n                  tags={forumPostItem.tags}\n                  comments={forumPostItem.comments}\n                /\u003e\n              );\n            }\n            return null;\n          })}\n        \u003c/div\u003e\n      );\n    }\n\n    return (\n      \u003cdiv className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4 pt-6\"\u003e\n        {filteredItems.map((item, index) =\u003e {\n          switch (item.type) {\n            case 'pastpaper':\n              return (\n                \u003cdiv key={item.id} className=\"flex justify-center\"\u003e\n                  \u003cPastPaperCard index={index} pastPaper={item} /\u003e\n                \u003c/div\u003e\n              );\n            case 'note':\n              return (\n                \u003cdiv key={item.id} className=\"flex justify-center\"\u003e\n                  \u003cNotesCard index={index} note={item} /\u003e\n                \u003c/div\u003e\n              );\n            case 'subject':\n              return (\n                \u003cdiv key={item.id} className=\"flex justify-center\"\u003e\n                  \u003cResourceCard subject={item} /\u003e\n                \u003c/div\u003e\n              );\n            default:\n              return null;\n          }\n        })}\n      \u003c/div\u003e\n    );\n  };\n\n  return (\n    \u003cdiv className=\"flex flex-col items-center\"\u003e\n      \u003cdiv className=\"flex flex-wrap justify-center w-fit space-x-2 sm:space-x-4 bg-[#82BEE9] dark:bg-[#232530] p-2 sm:p-2 mb-6\"\u003e\n        {tabs.map((tab) =\u003e (\n          \u003cbutton\n            key={tab}\n            onClick={() =\u003e handleTabChange(tab)}\n            className={`px-1 py-1 sm:px-1 sm:py-1 text-sm sm:text-xs transition-colors duration-200 ${currentTab === tab ? 'bg-[#C2E6EC] dark:bg-[#0C1222] font-semibold' : 'hover:bg-[#ffffff]/10'\n              }`}\n          \u003e\n            {tab}\n          \u003c/button\u003e\n        ))}\n      \u003c/div\u003e\n      \u003cdiv className=\"flex justify-center w-svw\"\u003e\n        \u003cdiv className=\"w-full md:w-3/4\"\u003e\n          {renderContent()}\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n  );\n}\n\nexport default FavFetch;\n",
      "dependencies": [
        "react",
        "next/navigation",
        "@prisma/client"
      ]
    },
    {
      "id": 63,
      "name": "ModeratorDashBoard.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/components/ModeratorDashBoard.tsx",
      "content": "\"use client\";\n\nimport React, { useState } from \"react\";\nimport { Note, PastPaper } from \"@prisma/client\";\nimport Pagination from \"./Pagination\";\nimport NotesCard from \"./NotesCard\";\nimport PastPaperCard from \"./PastPaperCard\";\nimport {approveItem, deleteItem, renameItem} from \"../actions/moderatorActions\";\n\nconst PAGE_SIZE = 9;\n\ntype NoteWithoutTags = Omit\u003cNote, \"tags\"\u003e;\ntype PastPaperWithoutTags = Omit\u003cPastPaper, \"tags\"\u003e;\n\ntype ModeratorDashboardClientProps = {\n    initialNotes: NoteWithoutTags[];\n    initialPastPapers: PastPaperWithoutTags[];\n    searchParams: { page?: string; search?: string; tags?: string | string[] };\n    totalUsers: number;\n};\n\nfunction validatePage(page: number, totalPages: number): number {\n    if (isNaN(page) || page \u003c 1) {\n        return 1;\n    }\n    if (page \u003e totalPages \u0026\u0026 totalPages \u003e 0) {\n        return totalPages;\n    }\n    return page;\n}\n\nconst ModeratorDashboardClient: React.FC\u003cModeratorDashboardClientProps\u003e = ({\n    initialNotes,\n    initialPastPapers,\n    searchParams,\n    totalUsers,\n}) =\u003e {\n    const [notes, setNotes] = useState\u003cNoteWithoutTags[]\u003e(initialNotes);\n    const [pastPapers, setPastPapers] =\n        useState\u003cPastPaperWithoutTags[]\u003e(initialPastPapers);\n    const [activeTab, setActiveTab] = useState\u003c\"notes\" | \"past_papers\"\u003e(\n        \"notes\"\n    );\n    const [selectedItems, setSelectedItems] = useState\u003cstring[]\u003e([]);\n\n    const page = parseInt(searchParams.page || \"1\", 10);\n\n    const items = activeTab === \"notes\" ? notes : pastPapers;\n\n    const totalCount = items.length;\n    const totalPages = Math.ceil(totalCount / PAGE_SIZE);\n    const validatedPage = validatePage(page, totalPages);\n\n    const startIndex = (validatedPage - 1) * PAGE_SIZE;\n    const endIndex = startIndex + PAGE_SIZE;\n    const paginatedItems = items.slice(startIndex, endIndex);\n\n    const handleApprove = async (id: string, type: \"note\" | \"pastPaper\") =\u003e {\n        try {\n            await approveItem(id, type);\n            if (type === \"note\") {\n                setNotes(notes.filter((note) =\u003e note.id !== id));\n            } else {\n                setPastPapers(pastPapers.filter((paper) =\u003e paper.id !== id));\n            }\n            setSelectedItems(selectedItems.filter((item) =\u003e item !== id));\n        } catch (error) {\n            console.error(\"Error approving item:\", error);\n        }\n    };\n\n    const handleRename = async (id: string, type: \"note\" | \"pastPaper\", newName: string) =\u003e {\n        try {\n            await renameItem(id, type, newName);\n            if (type === \"note\") {\n                setNotes(notes.map((note) =\u003e note.id === id ? {...note, title: newName} : note));\n            } else {\n                setPastPapers(pastPapers.map((paper) =\u003e paper.id === id ? {...paper, title: newName} : paper));\n            }\n        } catch (error) {\n            console.error(\"Error renaming item:\", error);\n        }\n    };\n\n    const handleDelete = async (id: string, type: \"note\" | \"pastPaper\") =\u003e {\n        try {\n            await deleteItem(id, type);\n            type === \"note\"\n                ? setNotes(notes.filter((note) =\u003e note.id !== id))\n                : setPastPapers(pastPapers.filter((paper) =\u003e paper.id !== id));\n\n            setSelectedItems(selectedItems.filter((item) =\u003e item !== id));\n        } catch (error) {\n            console.error(\"Error deletign item:\", error);\n        }\n    };\n\n    const handleBulkApprove = async () =\u003e {\n        for (const id of selectedItems) {\n            await handleApprove(\n                id,\n                activeTab === \"notes\" ? \"note\" : \"pastPaper\"\n            );\n        }\n        setSelectedItems([]);\n    };\n\n    const handleBulkDelete = async () =\u003e {\n        for (const id of selectedItems) {\n            await handleDelete(\n                id,\n                activeTab === \"notes\" ? \"note\" : \"pastPaper\"\n            );\n        }\n    };\n\n    const toggleItemSelection = (id: string) =\u003e {\n        setSelectedItems((prev) =\u003e\n            prev.includes(id)\n                ? prev.filter((item) =\u003e item !== id)\n                : [...prev, id]\n        );\n    };\n\n    return (\n        \u003cdiv className=\"p-8 transition-colors flex flex-col min-h-screen items-center text-black dark:text-[#D5D5D5]\"\u003e\n            \u003ch1 className=\"text-center mb-4  font-bold\"\u003eModerator Dashboard\u003c/h1\u003e\n            \u003ch3\u003eTotal Users: {totalUsers}\u003c/h3\u003e\n            \u003cbr /\u003e\n            \u003cdiv className=\"w-full flex justify-center mb-6\"\u003e\n                \u003cbutton\n                    className={`mr-2 px-4 py-2 rounded-lg font-semibold transition-colors duration-200 ease-in-out\n                        ${\n                            activeTab === \"notes\"\n                                ? \"bg-blue-500 text-white shadow-md\"\n                                : \"bg-gray-200 text-gray-700 hover:bg-gray-300\"\n                        }`}\n                    onClick={() =\u003e setActiveTab(\"notes\")}\n                \u003e\n                    Notes\n                \u003c/button\u003e\n                \u003cbutton\n                    className={`ml-2 px-4 py-2 rounded-lg font-semibold transition-colors duration-200 ease-in-out\n                        ${\n                            activeTab === \"past_papers\"\n                                ? \"bg-blue-500 text-white shadow-md\"\n                                : \"bg-gray-200 text-gray-700 hover:bg-gray-300\"\n                        }`}\n                    onClick={() =\u003e setActiveTab(\"past_papers\")}\n                \u003e\n                    Past Papers\n                \u003c/button\u003e\n            \u003c/div\u003e\n\n            {selectedItems.length \u003e 0 \u0026\u0026 (\n                \u003cbutton\n                    className=\"mb-4 bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded\"\n                    onClick={handleBulkApprove}\n                \u003e\n                    Approve Selected ({selectedItems.length})\n                \u003c/button\u003e\n            )}\n\n            {selectedItems.length \u003e 0 \u0026\u0026 (\n                \u003cbutton\n                    className=\"mb-4 bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded\"\n                    onClick={handleBulkDelete}\n                \u003e\n                    Delete Selected ({selectedItems.length})\n                \u003c/button\u003e\n            )}\n\n            \u003cdiv className=\"flex justify-center\"\u003e\n                \u003cdiv className=\"w-full grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-5 p-6 place-content-center\"\u003e\n                    {paginatedItems.length \u003e 0 ? (\n                        paginatedItems.map((item, index) =\u003e (\n                            \u003cdiv key={item.id} className=\"relative group\"\u003e\n                                \u003cinput\n                                    type=\"checkbox\"\n                                    className=\"absolute top-2 left-2 z-10\"\n                                    checked={selectedItems.includes(item.id)}\n                                    onChange={() =\u003e\n                                        toggleItemSelection(item.id)\n                                    }\n                                /\u003e\n                                {activeTab === \"notes\" ? (\n                                    \u003cNotesCard\n                                        note={item as NoteWithoutTags}\n                                        index={index}\n                                        openInNewTab={true}\n                                    /\u003e\n                                ) : (\n                                    \u003cPastPaperCard\n                                        pastPaper={item as PastPaperWithoutTags}\n                                        index={index}\n                                        openInNewTab={true}\n                                    /\u003e\n                                )}\n                                \u003cdiv className=\"flex gap-2 absolute top-2 right-2\"\u003e\n                                    \u003cbutton\n                                        className=\"bg-green-500 text-white px-3 py-1 rounded-md \n                                                opacity-0 group-hover:opacity-100 transition-opacity duration-200 ease-in-out\n                                                hover:bg-green-600 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-opacity-50\"\n                                        onClick={() =\u003e\n                                            handleRename(\n                                                item.id,\n                                                activeTab === \"notes\"\n                                                    ? \"note\"\n                                                    : \"pastPaper\",\n                                                prompt(\"Enter new name:\") || item.title\n                                            )\n                                        }\n                                    \u003e\n                                        Rename\n                                    \u003c/button\u003e\n                                    \u003cbutton\n                                        className=\"bg-green-500 text-white px-3 py-1 rounded-md\n                                                opacity-0 group-hover:opacity-100 transition-opacity duration-200 ease-in-out\n                                                hover:bg-green-600 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-opacity-50\"\n                                        onClick={() =\u003e\n                                            handleApprove(\n                                                item.id,\n                                                activeTab === \"notes\"\n                                                    ? \"note\"\n                                                    : \"pastPaper\"\n                                            )\n                                        }\n                                    \u003e\n                                        Approve\n                                    \u003c/button\u003e\n                                    \u003cbutton\n                                        className=\"bg-red-500 text-white px-3 py-1 rounded-md \n                                                opacity-0 group-hover:opacity-100 transition-opacity duration-200 ease-in-out\n                                                hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-opacity-50\"\n                                        onClick={() =\u003e\n                                            handleDelete(\n                                                item.id,\n                                                activeTab === \"notes\"\n                                                    ? \"note\"\n                                                    : \"pastPaper\"\n                                            )\n                                        }\n                                    \u003e\n                                        Delete\n                                    \u003c/button\u003e\n                                \u003c/div\u003e\n                            \u003c/div\u003e\n                        ))\n                    ) : (\n                        \u003cp className=\"col-span-3 text-center text-gray-500 italic\"\u003e\n                            No {activeTab === \"notes\" ? \"notes\" : \"past papers\"}{\" \"}\n                            found.\n                        \u003c/p\u003e\n                    )}\n                \u003c/div\u003e\n            \u003c/div\u003e\n\n            {totalPages \u003e 1 \u0026\u0026 (\n                \u003cdiv className=\"mt-auto\"\u003e\n                    \u003cPagination\n                        currentPage={validatedPage}\n                        totalPages={totalPages}\n                        basePath=\"/mod\"\n                    /\u003e\n                \u003c/div\u003e\n            )}\n        \u003c/div\u003e\n    );\n};\n\nexport default ModeratorDashboardClient;\n",
      "dependencies": [
        "react",
        "@prisma/client"
      ]
    },
    {
      "id": 64,
      "name": "NotesCard.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/components/NotesCard.tsx",
      "content": "\"use client\";\n\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\nimport { Note } from '@prisma/client';\nimport { useBookmarks } from './BookmarksProvider';\nimport { useRouter } from 'next/navigation';\nimport {useToast} from \"@/components/ui/use-toast\";\n\ninterface NotesCardProps {\n    note: Note;\n    index: number;\n    openInNewTab?: boolean;\n}\n\n\nexport function removePdfExtension(filename: string): string {\n    if (filename.endsWith('.pdf')) {\n        return filename.slice(0, -4);\n    }\n    return filename;\n}\n\nfunction NotesCard({ note }: NotesCardProps) {\n    const { isBookmarked, toggleBookmark } = useBookmarks();\n    const router = useRouter();\n    const isFav = isBookmarked(note.id, 'note');\n    const { toast } = useToast();\n\n    const handleToggleFav = (e: React.MouseEvent) =\u003e {\n        e.stopPropagation();\n        e.preventDefault();\n        toggleBookmark({ id: note.id, type: 'note', title: note.title }, !isFav).catch(()=\u003e toast({title: \"Error! Could not add to favorites\", variant: \"destructive\"}) );\n    };\n\n    return (\n\n \u003cdiv className={`max-w-sm w-full h-full text-black dark:text-[#D5D5D5]`}\u003e\n    \u003cdiv className=\"hover:shadow-xl px-5 py-6 w-full text-center bg-[#5FC4E7] dark:bg-[#ffffff]/10 lg:dark:bg-[#0C1222] dark:border-b-[#3BF4C7] dark:lg:border-b-[#ffffff]/20 dark:border-[#ffffff]/20 border-2 border-[#5FC4E7] hover:border-b-[#ffffff] hover:border-b-2 dark:hover:border-b-[#3BF4C7]  dark:hover:bg-[#ffffff]/10 transition duration-200 transform hover:scale-105 max-w-96 cursor-pointer\"\n                onClick={() =\u003e router.push(`/notes/${note.id}`)}\u003e\n        \u003cdiv className=\"bg-[#d9d9d9] w-full h-44 relative overflow-hidden\"\u003e\n                    \u003cimg\n                        className=\"w-full object-cover\"\n                        src={note.thumbNailUrl || \"https://topperworld.in/media/2022/11/c-sc.png\"} // migration to make thumbnail mandatory \n                        alt={removePdfExtension(note.title)}\n                    /\u003e\n                \u003c/div\u003e\n                \u003cdiv className=\"flex justify-between items-center\"\u003e\n                    \u003cdiv\u003e\u003c/div\u003e\n                    \u003cdiv className=\"mb-2 w-full whitespace-nowrap overflow-hidden text-ellipsis text-lg\"\u003e\n                        {removePdfExtension(note.title)}\n                    \u003c/div\u003e\n                    \u003cbutton onClick={handleToggleFav} className=\"transition-colors duration-200\"\u003e\n                        \u003cFontAwesomeIcon icon={faHeart} color={isFav ? 'red' : 'lightgrey'} /\u003e\n                    \u003c/button\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    );\n}\n\nexport default NotesCard;\n",
      "dependencies": [
        "@prisma/client",
        "next/navigation",
        "@/components/ui/use-toast",
        "https://topperworld.in/media/2022/11/c-sc.png",
        "react",
        "@fortawesome/react-fontawesome",
        "@fortawesome/free-solid-svg-icons"
      ]
    },
    {
      "id": 65,
      "name": "TodoListModal.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/components/TodoListModal.tsx",
      "content": "import React, { useState, useRef, useEffect, KeyboardEvent } from \"react\";\nimport { XIcon, PlusIcon, TrashIcon, CheckIcon, UndoIcon } from \"lucide-react\";\nimport { setLocalStorage, getLocalStorage } from \"./../../lib/localStorage\";\n\ninterface Todo {\n  id: number;\n  task: string;\n  completed: boolean;\n}\n\ninterface TodoListDropdownProps {\n  buttonRef: React.RefObject\u003cHTMLButtonElement\u003e;\n}\n\nconst TodoListDropdown: React.FC\u003cTodoListDropdownProps\u003e = ({ buttonRef }) =\u003e {\n  const [isOpen, setIsOpen] = useState(false);\n  const dropdownRef = useRef\u003cHTMLDivElement\u003e(null);\n  const [todos, setTodos] = useState\u003cTodo[]\u003e([]);\n  const [newTask, setNewTask] = useState(\"\");\n\n  const loadTodos = () =\u003e {\n    const storedTodos = getLocalStorage(\"todos\");\n    if (storedTodos) {\n      try {\n        const parsedTodos = JSON.parse(storedTodos);\n        if (Array.isArray(parsedTodos)) {\n          setTodos(parsedTodos);\n        } else {\n          console.error(\"Stored todos is not an array\");\n          setTodos([]);\n        }\n      } catch (error) {\n        console.error(\"Error parsing stored todos:\", error);\n        setTodos([]);\n      }\n    } else {\n      setTodos([]);\n    }\n  };\n\n  useEffect(() =\u003e {\n    loadTodos();\n  }, []);\n\n  useEffect(() =\u003e {\n    const updateDropdownPosition = () =\u003e {\n      if (isOpen \u0026\u0026 buttonRef.current \u0026\u0026 dropdownRef.current) {\n        const buttonRect = buttonRef.current.getBoundingClientRect();\n        const viewportWidth = window.innerWidth;\n        const viewportHeight = window.innerHeight;\n\n        const dropdownWidth = Math.min(320, viewportWidth * 0.9);\n        const dropdownHeight = Math.min(400, viewportHeight * 0.7);\n\n        let left = buttonRect.left;\n        if (left + dropdownWidth \u003e viewportWidth) {\n          left = Math.max(0, viewportWidth - dropdownWidth);\n        }\n\n        let top = buttonRect.bottom;\n        if (top + dropdownHeight \u003e viewportHeight) {\n          top = Math.max(0, buttonRect.top - dropdownHeight);\n        }\n\n        dropdownRef.current.style.left = `${left}px`;\n        dropdownRef.current.style.top = `${top}px`;\n        dropdownRef.current.style.width = `${dropdownWidth}px`;\n        dropdownRef.current.style.maxHeight = `${dropdownHeight}px`;\n      }\n    };\n\n    updateDropdownPosition();\n    window.addEventListener(\"resize\", updateDropdownPosition);\n    window.addEventListener(\"scroll\", updateDropdownPosition);\n\n    return () =\u003e {\n      window.removeEventListener(\"resize\", updateDropdownPosition);\n      window.removeEventListener(\"scroll\", updateDropdownPosition);\n    };\n  }, [isOpen, buttonRef]);\n\n  useEffect(() =\u003e {\n    const handleClickOutside = (event: MouseEvent) =\u003e {\n      if (\n        dropdownRef.current \u0026\u0026\n        !dropdownRef.current.contains(event.target as Node) \u0026\u0026\n        buttonRef.current \u0026\u0026\n        !buttonRef.current.contains(event.target as Node)\n      ) {\n        setIsOpen(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () =\u003e {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [buttonRef]);\n\n  const toggleDropdown = () =\u003e {\n    setIsOpen(!isOpen);\n  };\n\n  const addTodo = () =\u003e {\n    if (newTask.trim()) {\n      const updatedTodos = [\n        ...todos,\n        { id: Date.now(), task: newTask.trim(), completed: false },\n      ];\n      setTodos(updatedTodos);\n      setLocalStorage(\"todos\", JSON.stringify(updatedTodos));\n      setNewTask(\"\");\n    }\n  };\n\n  const handleKeyPress = (e: KeyboardEvent\u003cHTMLInputElement\u003e) =\u003e {\n    if (e.key === \"Enter\") {\n      addTodo();\n    }\n  };\n\n  const toggleComplete = (id: number) =\u003e {\n    const updatedTodos = todos.map((todo) =\u003e\n      todo.id === id ? { ...todo, completed: !todo.completed } : todo\n    );\n    setTodos(updatedTodos);\n    setLocalStorage(\"todos\", JSON.stringify(updatedTodos));\n  };\n\n  const removeTodo = (id: number) =\u003e {\n    const updatedTodos = todos.filter((todo) =\u003e todo.id !== id);\n    setTodos(updatedTodos);\n    setLocalStorage(\"todos\", JSON.stringify(updatedTodos));\n  };\n\n  const clearTodos = () =\u003e {\n    setTodos([]);\n    setLocalStorage(\"todos\", JSON.stringify([]));\n  };\n\n  return (\n    \u003c\u003e\n      \u003cbutton\n        ref={buttonRef}\n        onClick={toggleDropdown}\n        className={`font-bold py-2.5 px-2.5 ${\n          isOpen ? \"bg-white/20 dark:bg-white/20\" : \"\"\n        } `}\n      \u003e\n        \u003cdiv\u003e\n          \u003cimg\n            src=\"/assets/Todo.svg\"\n            alt=\"To-Do List\"\n            className=\"w-6 h-6 dark:invert-[.835]\"\n          /\u003e\n        \u003c/div\u003e\n      \u003c/button\u003e\n\n      {isOpen \u0026\u0026 (\n        \u003cdiv\n          ref={dropdownRef}\n          className=\"overflow-y-scroll no-scrollbar overflow-hidden fixed bg-[#C2E6EC] dark:bg-[#0C1222] shadow-xl transform transition-all ease-in-out duration-300 opacity-100 z-50 border-2 border-[#5FC4E7] dark:border-[#008A90] overflow-hidden\"\n          style={{ maxWidth: \"90vw\", maxHeight: \"70vh\" }}\n        \u003e\n          \u003cdiv className=\"flex justify-between items-center p-4 border-b\"\u003e\n            \u003ch2 className=\"text-lg font-semibold dark:text-[#D5D5D5]\"\u003e\n              To-Do List\n            \u003c/h2\u003e\n            \u003cbutton\n              onClick={() =\u003e setIsOpen(false)}\n              className=\"text-gray-500 hover:text-gray-700\"\n            \u003e\n              \u003cXIcon size={24} /\u003e\n            \u003c/button\u003e\n          \u003c/div\u003e\n          \u003cdiv\n            className=\"p-4 overflow-y-auto\"\n            style={{ maxHeight: \"calc(70vh - 60px)\" }}\n          \u003e\n            \u003cdiv className=\"flex mb-4\"\u003e\n              \u003cinput\n                type=\"text\"\n                value={newTask}\n                onChange={(e) =\u003e setNewTask(e.target.value)}\n                onKeyPress={handleKeyPress}\n                placeholder=\"Enter new task\"\n                className=\"flex-grow border px-2 dark:text-white py-1 focus:outline-none focus:ring-2 focus:ring-blue-300 bg-white dark:bg-[#3D414E] rounded \"\n              /\u003e\n              \u003cbutton\n                onClick={addTodo}\n                className=\"bg-[#82BEE9] hover:bg-[#5FA0D9] dark:bg-[#008A90] text-white dark:text-[#D5D5D5] px-3 py-1 rounded p-2 transition duration-200\"\n              \u003e\n                \u003cPlusIcon size={20} /\u003e\n              \u003c/button\u003e\n            \u003c/div\u003e\n            \u003cul className=\"space-y-2\"\u003e\n              {todos.map((todo) =\u003e (\n                \u003cli\n                  key={todo.id}\n                  className=\"flex items-center justify-between bg-[#5FC4E7] dark:bg-[#008A90] dark:text-[#D5D5D5] p-2 \"\n                \u003e\n                  \u003cspan className={todo.completed ? \"line-through\" : \"\"}\u003e\n                    {todo.task}\n                  \u003c/span\u003e\n                  \u003cdiv\u003e\n                    \u003cbutton\n                      onClick={() =\u003e toggleComplete(todo.id)}\n                      className=\"text-blue-500 mr-2 hover:text-blue-600 transition duration-200\"\n                    \u003e\n                      {todo.completed ? (\n                        \u003cUndoIcon size={16} color=\"#d5d5d5\" /\u003e\n                      ) : (\n                        \u003cCheckIcon size={16} color=\"#d5d5d5\" /\u003e\n                      )}\n                    \u003c/button\u003e\n                    \u003cbutton\n                      onClick={() =\u003e removeTodo(todo.id)}\n                      className=\"text-red-500 hover:text-red-600 transition duration-200\"\n                    \u003e\n                      \u003cTrashIcon size={16} color=\"#d5d5d5\" /\u003e\n                    \u003c/button\u003e\n                  \u003c/div\u003e\n                \u003c/li\u003e\n              ))}\n            \u003c/ul\u003e\n            {todos.length \u003e 0 \u0026\u0026 (\n              \u003cbutton\n                onClick={clearTodos}\n                className=\"mt-4 bg-red-500 hover:bg-red-600 text-white dark:text-[#D5D5D5] px-3 py-1 rounded w-full transition duration-200\"\n              \u003e\n                Clear All\n              \u003c/button\u003e\n            )}\n          \u003c/div\u003e\n        \u003c/div\u003e\n      )}\n    \u003c/\u003e\n  );\n};\n\nexport default TodoListDropdown;\n",
      "dependencies": [
        "/assets/Todo.svg",
        "react",
        "lucide-react"
      ]
    },
    {
      "id": 66,
      "name": "Buttons.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/components/common/Buttons.tsx",
      "content": "\"use client\";\n\nimport React, { useState, useCallback } from \"react\";\nimport { useRouter } from 'next/navigation';\nimport { upvotePost, downvotePost } from '@/app/actions/forumVote';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faThumbsDown, faThumbsUp } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface VoteButtonsProps {\n    postId: string;\n    initialUpvotes: number;\n    initialDownvotes: number;\n    initialUserVote: 'up' | 'down' | null;\n}\n\nexport function VoteButtons({ postId, initialUpvotes, initialDownvotes, initialUserVote }: VoteButtonsProps) {\n    const [votes, setVotes] = useState({\n        upvotes: initialUpvotes,\n        downvotes: initialDownvotes,\n        userVote: initialUserVote\n    });\n    const [isLocked, setIsLocked] = useState(false);\n    const router = useRouter();\n\n    const handleVote = useCallback(async (voteType: 'up' | 'down') =\u003e {\n        if (isLocked) return;\n        setIsLocked(true);\n\n        const oldVotes = { ...votes };\n        let newVotes = { ...votes };\n\n        if (votes.userVote === voteType) {\n            newVotes[voteType === 'up' ? 'upvotes' : 'downvotes'] -= 1;\n            newVotes.userVote = null;\n        } else {\n            if (votes.userVote) {\n                newVotes[votes.userVote === 'up' ? 'upvotes' : 'downvotes'] -= 1;\n            }\n            newVotes[voteType === 'up' ? 'upvotes' : 'downvotes'] += 1;\n            newVotes.userVote = voteType;\n        }\n\n        setVotes(newVotes);\n\n        try {\n            await (voteType === 'up' ? upvotePost : downvotePost)(postId);\n        } catch (error) {\n            console.error('Error voting:', error);\n            setVotes(oldVotes);\n        } finally {\n            setIsLocked(false);\n            router.refresh();\n        }\n    }, [votes, isLocked, postId, router]);\n\n    return (\n        \u003cdiv className=\"flex gap-2\"\u003e\n            \u003cVoteButton\n                type=\"up\"\n                count={votes.upvotes}\n                isActive={votes.userVote === 'up'}\n                onClick={() =\u003e handleVote('up')}\n                isLocked={isLocked}\n            /\u003e\n            \u003cVoteButton\n                type=\"down\"\n                count={votes.downvotes}\n                isActive={votes.userVote === 'down'}\n                onClick={() =\u003e handleVote('down')}\n                isLocked={isLocked}\n            /\u003e\n        \u003c/div\u003e\n    );\n}\n\ninterface VoteButtonProps {\n    type: 'up' | 'down';\n    count: number;\n    isActive: boolean;\n    onClick: () =\u003e void;\n    isLocked: boolean;\n}\n\nfunction VoteButton({ type, count, isActive, onClick, isLocked }: VoteButtonProps) {\n    //const imageSrc = type === 'up' ? \"/comment/ThumbsUpIcon.svg\" : \"/comment/ThumbsDownIcon.svg\";\n    const upVote = type === 'up';\n    const downVote = type === 'down'\n    const altText = type === 'up' ? \"Thumb Up\" : \"Thumb Down\";\n    // const activeClass = isActive ? (type === 'up' ? 'bg-blue-200 dark:bg-blue-800' : 'bg-red-200 dark:bg-red-800') : '';\n\n    return (\n        \u003cdiv className=\"flex gap-1 p-1\"\u003e\n            \u003cbutton\n                onClick={onClick}\n                className={`relative flex items-center justify-center transition-colors duration-150 ease-in-out hover:bg-gray-200 dark:hover:bg-white/20 `} //${activeClass}\n                title={type === 'up' ? \"Like\" : \"Dislike\"}\n                disabled={isLocked}\n            \u003e\n            {/* {imageSrc === \"/comment/ThumbsUpIcon.svg\" \u0026\u0026 \u003cFontAwesomeIcon icon={ faThumbsUp}/\u003e} */}\n            {upVote \u0026\u0026 \u003cFontAwesomeIcon icon={faThumbsUp} color={ isActive ? \"green\" : \"black\"}/\u003e}\n            {downVote \u0026\u0026 \u003cFontAwesomeIcon icon={faThumbsDown} color={ isActive ? \"red\" : \"black\"}/\u003e}\n                {/* \u003cImage\n                    src={imageSrc}\n                    alt={altText}\n                    width={21}\n                    height={21}\n                    className={`w-6 h-6 ${isActive ? (type === 'up' ? 'text-blue-500' : 'text-red-500') : 'text-gray-500'}`}\n                /\u003e */}\n            \u003c/button\u003e\n            {count}\n        \u003c/div\u003e\n    );\n}\n",
      "dependencies": [
        "@fortawesome/react-fontawesome",
        "@fortawesome/free-solid-svg-icons",
        "/comment/ThumbsUpIcon.svg",
        "/comment/ThumbsDownIcon.svg",
        "react",
        "next/navigation",
        "@/app/actions/forumVote"
      ]
    },
    {
      "id": 67,
      "name": "CommentContainer.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/components/forumpost/CommentContainer.tsx",
      "content": "import {type Comment, PrismaClient} from \"@prisma/client\";\n\nconst prisma = new PrismaClient();\n\n\nexport function NumberOfComments({ commentArray }: { commentArray: Comment[] | undefined }) {\n    return (\n        \u003cdiv\u003e\n            \u003ctext className=\"bg-none text-base py-4 px-2\"\u003e{commentArray?.length} Comments\u003c/text\u003e\n        \u003c/div\u003e\n    );\n}\n\n\nexport default function CommentContainer({ comments }: { comments: Comment[] | undefined }) {\n\n    return (\n        \u003cdiv className=\"bg-[#7BBFE8] dark:bg-[#008A90] p-0 md:px-2 h-full\"\u003e\n            {comments?.map((comment: Comment) =\u003e (\n                \u003cComment\n                    key={comment.id}\n                    commentId={comment.id}\n                    time={comment.createdAt.toLocaleString(\"en-US\", {timeZone: \"Asia/Kolkata\"})}\n                    content={comment.content}\n                /\u003e\n            ))}\n        \u003c/div\u003e\n    );\n}\n\nexport function TimeHandler(isoString: string) {\n    const dateObj = new Date(isoString);\n\n    const year = dateObj.getFullYear();\n    const month = String(dateObj.getMonth() + 1).padStart(2, '0');\n    const day = String(dateObj.getDate()).padStart(2, '0');\n    const hours = String((dateObj.getHours() \u003e 12 ? dateObj.getHours() - 12 : dateObj.getHours())).padStart(2, '0');\n    const minutes = String(dateObj.getMinutes()).padStart(2, '0');\n    const seconds = String(dateObj.getSeconds()).padStart(2, '0');\n    const amOrPm = Number(dateObj.getHours()) \u003c 12 ? 'am' : 'pm';\n\n    return {\n        year,\n        month,\n        day,\n        hours,\n        minutes,\n        seconds,\n        amOrPm,\n    };\n}\n\nexport async function Comment({ commentId, time, content }: { commentId: string, time: string, content: string }) {\n    const dateTimeObj = TimeHandler(time);\n    const creator = await prisma.comment.findUnique({\n        where: {\n            id: commentId,\n        },\n        include: {\n            author: {\n                select: {\n                    name: true\n                }\n            },\n        }\n    })\n    return (\n        \u003cdiv className=\"m-0 p-2 border-black border-l w-full\"\u003e\n            \u003cdiv className=\"flex justify-between w-full\"\u003e\n                \u003cp className=\"font-semibold\"\u003e{creator?.author.name?.slice(0, -10)}\u003c/p\u003e\n                \u003cp className=\"text-xs md:text-base\"\u003ePosted at {dateTimeObj.hours}:{dateTimeObj.minutes} {dateTimeObj.amOrPm}, {dateTimeObj.day}/{dateTimeObj.month}/{dateTimeObj.year}\u003c/p\u003e\n            \u003c/div\u003e\n            \u003ch6\u003e{content}\u003c/h6\u003e\n            \u003chr className=\"border-0 h-px my-2 bg-black\" /\u003e\n        \u003c/div\u003e\n    );\n}\n",
      "dependencies": [
        "@prisma/client"
      ]
    },
    {
      "id": 68,
      "name": "layout.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/layout.tsx",
      "content": "import type React from \"react\";\nimport { Plus_Jakarta_Sans } from \"next/font/google\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { auth } from \"@/app/auth\";\nimport \"@/app/globals.css\";\nimport SocialMediaFollowToast from \"@/components/ui/SocialMediaToast\";\nimport { redirect } from \"next/navigation\";\n\nexport const metadata = {\n    title: {\n        template: \"%s | ExamCooker\",\n        default: \"ExamCooker - ACM-VIT\",\n    },\n    description: \"Cram up for your exams with ExamCooker!! \",\n    keywords: [\n        \"vit\",\n        \"previous year question papers\",\n        \"pdf\",\n        \"notes\",\n        \"question papers\",\n        \"exam\",\n        \"examcooker\",\n        \"acm\",\n        \"vit acm\",\n        \"vit acm examcooker\",\n    ],\n    metadataBase: new URL(process.env.NEXT_PUBLIC_BASE_URL!),\n    openGraph: {\n        images: [\n            { url: `${process.env.NEXT_PUBLIC_BASE_URL!}/opengraph-image.png` },\n        ],\n    },\n};\nconst plus_jakarta_sans = Plus_Jakarta_Sans({ subsets: [\"latin\"] });\n\nexport default async function RootLayout({\n    protected_routes,\n    unprotected_routes,\n}: {\n    protected_routes: React.ReactNode;\n    unprotected_routes: React.ReactNode;\n}) {\n    const session = await auth();\n\n    return (\n        \u003chtml lang=\"en\"\u003e\n            \u003cbody\n                className={`${plus_jakarta_sans.className} antialiased bg-[#C2E6EC] dark:bg-[#0C1222]`}\n                style={{ margin: \"0\" }}\n            \u003e\n                {session?.user?.email\n                    ? protected_routes ?? redirect(\"/\")\n                    : unprotected_routes}\n                \u003cToaster /\u003e\n                \u003cSocialMediaFollowToast /\u003e\n            \u003c/body\u003e\n        \u003c/html\u003e\n    );\n}\n",
      "dependencies": [
        "@/app/globals.css",
        "react",
        "next/font/google",
        "@/components/ui/toaster",
        "@/app/auth",
        "@/components/ui/SocialMediaToast",
        "next/navigation"
      ]
    },
    {
      "id": 69,
      "name": "loading.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/@protected_routes/past_papers/[id]/loading.tsx",
      "content": "import Loading from \"../loading\";\n\nexport default Loading;\n"
    },
    {
      "id": 70,
      "name": "loading.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/@protected_routes/resources/loading.tsx",
      "content": "import Loading from \"../loading\";\n\nexport default Loading;\n"
    },
    {
      "id": 71,
      "name": "ForumCard.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/components/ForumCard.tsx",
      "content": "\"use client\";\n\nimport React from 'react';\nimport { NumberOfComments, TimeHandler } from \"@/app/components/forumpost/CommentContainer\";\nimport TagContainer from \"@/app/components/forumpost/TagContainer\";\nimport { VoteButtons } from \"@/app/components/common/Buttons\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\nimport { useBookmarks } from './BookmarksProvider';\nimport { useRouter } from 'next/navigation';\nimport { ForumPost, Tag, Comment, User, Vote } from \"@prisma/client\";\nimport {useToast} from \"@/components/ui/use-toast\";\n\n\ninterface ForumCardProps {\n    post: ForumPost \u0026 {\n        author: User;\n        tags: Tag[];\n        comments: (Comment \u0026 { author: User })[];\n        votes: Vote[];\n    } | any;\n    title: string;\n    desc: string;\n    author: string | null;\n    tags: Tag[];\n    createdAt: Date;\n    comments: (Comment \u0026 { author: User })[];\n}\n\nfunction formatTimeDifference(hours: string, minutes: string, seconds: string, amOrPm: string, day: string, month: string, year: number): string {\n\n    let inputHours = parseInt(hours);\n    const inputMinutes = parseInt(minutes);\n    const inputSeconds = parseInt(seconds);\n    const inputDay = parseInt(day);\n    const inputMonth = parseInt(month) - 1;\n    const inputYear = year;\n\n    if (amOrPm.toLowerCase() === 'pm' \u0026\u0026 inputHours \u003c 12) {\n      inputHours += 12;\n    } else if (amOrPm.toLowerCase() === 'am' \u0026\u0026 inputHours === 12) {\n      inputHours = 0;\n    }\n\n    const inputDate = new Date(inputYear, inputMonth, inputDay, inputHours, inputMinutes, inputSeconds);\n\n    const currentDate = new Date();\n\n    const diffMillis = currentDate.getTime() - inputDate.getTime();\n\n    const diffMinutes = Math.floor(diffMillis / (1000 * 60));\n    const diffHours = Math.floor(diffMillis / (1000 * 60 * 60));\n    const diffDays = Math.floor(diffMillis / (1000 * 60 * 60 * 24));\n\n    if (diffMillis \u003c 0) {\n      return \"Input time is in the future\";\n    } else if (diffMinutes \u003c 60) {\n      return `${diffMinutes} minute${diffMinutes !== 1 ? 's' : ''}`;\n    } else if (diffHours \u003c 24) {\n      return `${diffHours} hour${diffHours !== 1 ? 's' : ''}`;\n    } else {\n      return `${diffDays} day${diffDays !== 1 ? 's' : ''}`;\n    }\n  }\n\nexport default function ForumCard({ post, title, desc, author, tags, createdAt, comments }: ForumCardProps) {\n    const dateTimeObj = TimeHandler(createdAt.toISOString());\n    const router = useRouter();\n\n    const {toast} = useToast();\n    const { isBookmarked, toggleBookmark } = useBookmarks();\n\n    const isFav = isBookmarked(post.id, 'forumpost');\n\n    const handleToggleFav = (e: React.MouseEvent) =\u003e {\n        e.stopPropagation();\n        e.preventDefault();\n        toggleBookmark({ id: post.id, type: 'forumpost', title: post.title }, !isFav).catch(()=\u003e toast({title: \"Error! Could not add to favorites\", variant: \"destructive\"}));\n    };\n\n    const userVote = post.votes \u0026\u0026 post.votes.length \u003e 0 ? post.votes[0].type : null;\n\n    const handleVoteClick = (e: React.MouseEvent) =\u003e {\n        e.stopPropagation();\n        e.preventDefault();\n    };\n\n    return (\n        \u003cdiv className=\"w-full flex pl-11 pr-7 pt-7 justify-center text-black dark:text-[#D5D5D5]\"\u003e\n            \u003cdiv\n                className=\"bg-[#5FC4E7] dark:bg-[#ffffff]/10 dark:lg:bg-[#0C1222] border-2 border-[#5FC4E7] dark:border-[#ffffff]/20 dark:border-b-[#3BF4C7] dark:lg:border-b-[#ffffff]/20 dark:hover:bg-[#ffffff]/10 hover:border-b-2 dark:hover:border-b-[#3BF4C7] hover:border-b-white p-5 md:p-10 size-full md:size-5/6 transition duration-200 transform hover:scale-105 hover:shadow-xl cursor-pointer\"\n                onClick={() =\u003e router.push(`/forum/${post.id}`)}\n            \u003e\n                \u003cdiv className=\"flex justify-between items-center\"\u003e\n                    \u003ch2 className=\"font-extrabold lg:text-3xl md:text-xl text-base\"\u003e{title}\u003c/h2\u003e\n                    \u003cdiv className=\"flex items-center space-x-4\"\u003e\n                        \u003cdiv className=\"bg-white dark:bg-[#3F4451] p-1 hidden md:block\"\u003e\n                            \u003cNumberOfComments commentArray={comments} /\u003e\n                        \u003c/div\u003e\n                        \u003cdiv className=\"flex space-x-2 p-0.5 bg-white dark:bg-[#3F4451]\" onClick={handleVoteClick}\u003e\n                            \u003cVoteButtons\n                                postId={post.id}\n                                initialUpvotes={post.upvoteCount ?? 0}\n                                initialDownvotes={post.downvoteCount ?? 0}\n                                initialUserVote={userVote === 'UPVOTE' ? 'up' : userVote === 'DOWNVOTE' ? 'down' : null}\n                            /\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n\n                \u003cbr /\u003e\n                \u003cp className=\"text-xs\"\u003e{desc}\u003c/p\u003e\n                \u003cbr /\u003e\n\n                \u003cdiv className=\"flex justify-between items-center sm:w-2/3 md:w-full\"\u003e\n                    \u003cdiv className=\"sm:w-2/3 md:flex md:w-full md:justify-between\"\u003e\n                        \u003cTagContainer tags={tags} /\u003e\n                    \u003c/div\u003e\n                    \u003cbutton onClick={handleToggleFav} className=\"transition-colors duration-200\"\u003e\n                        \u003cFontAwesomeIcon icon={faHeart} color={isFav ? 'red' : 'lightgrey'} /\u003e\n                    \u003c/button\u003e\n                \u003c/div\u003e\n\n                \u003cdiv className=\"text-xs text-right\"\u003e\n                    \u003cp\u003e{author?.slice(0, -10)} asked {formatTimeDifference(dateTimeObj.hours, dateTimeObj.minutes, dateTimeObj.seconds, dateTimeObj.amOrPm, dateTimeObj.day, dateTimeObj.month, dateTimeObj.year)} ago\u003c/p\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    );\n}\n",
      "dependencies": [
        "react",
        "@/app/components/forumpost/TagContainer",
        "@fortawesome/react-fontawesome",
        "@fortawesome/free-solid-svg-icons",
        "next/navigation",
        "@/app/components/forumpost/CommentContainer",
        "@/app/components/common/Buttons",
        "@prisma/client",
        "@/components/ui/use-toast"
      ]
    },
    {
      "id": 72,
      "name": "ShareLink.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/components/ShareLink.tsx",
      "content": "\"use client\"\nimport { faShareNodes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useEffect, useState } from 'react'\n\nconst ShareLink = ({ fileType }: { fileType: string }) =\u003e {\n\n    const [isVisible, setisVisible] = useState(false);\n\n    const copyToClipboard = () =\u003e {\n        const msg: string = `Dude! Checkout ${fileType}! ${location.href}`;\n        navigator.clipboard.writeText(msg);\n    }\n\n    const handleClick = () =\u003e {\n        setisVisible(true);\n        copyToClipboard();\n    }\n\n    useEffect(() =\u003e {\n        let timer: NodeJS.Timeout;\n        if (isVisible) {\n            timer = setTimeout(() =\u003e {\n                setisVisible(false)\n            }, 3000)\n        }\n        return (\n            () =\u003e clearTimeout(timer)\n        );\n\n    }, [isVisible])\n\n    return (\n        \u003cbutton onClick={handleClick}\u003e\n            \u003cdiv className=\"group relative\"\u003e\n                \u003cdiv className={`\n                px-3 py-2 absolute right-0 bottom-0 -translate-y-full\n                text-white dark:text-[#232530] text-sm font-medium break-normal \n\n                bg-gradient-to-b from-[#5fc4e7] to-[#4db3d6] dark:from-[#3BF4C7] dark:to-[#2ad3a7] shadow-lg rounded-md\n                transition-all duration-300 ease-in-out\n                ${isVisible ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-1'}\n                `}\n                \u003e\n                    Copied!\n                \u003c/div\u003e\n            \u003c/div\u003e\n            \u003cFontAwesomeIcon icon={faShareNodes} /\u003e\n        \u003c/button\u003e\n    );\n}\n\nexport default ShareLink;\n",
      "dependencies": [
        "@fortawesome/free-solid-svg-icons",
        "@fortawesome/react-fontawesome",
        "react"
      ]
    },
    {
      "id": 73,
      "name": "UploadButtonNotes.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/components/UploadButtonNotes.tsx",
      "content": "\"use client\";\nimport React from \"react\";\nimport Link from \"next/link\";\n\nconst UploadButtonNotes: React.FC = () =\u003e {\n    return (\n        \u003cdiv className=\"relative group inline-flex items-center\"\u003e\n            \u003cdiv className=\"absolute inset-0 bg-black dark:bg-[#3BF4C7]\"\u003e\u003c/div\u003e\n            \u003cdiv className=\"dark:absolute dark:inset-0 dark:blur-[75px] dark:lg:bg-none lg:dark:group-hover:bg-[#3BF4C7] transition dark:group-hover:duration-200 duration-1000\" /\u003e\n            \u003cbutton\n                type=\"submit\"\n                title=\"Create New Note\"\n                className=\"border-black dark:text-[#D5D5D5] dark:group-hover:text-[#3BF4C7] dark:group-hover:border-[#3BF4C7] dark:border-[#D5D5D5] dark:bg-[#0C1222] border-2 relative flex items-center px-4 py-2 text-lg bg-[#3BF4C7] text-black font-bold group-hover:-translate-x-1 group-hover:-translate-y-1 transition duration-150\"\n            \u003e\n                \u003cLink\n                    href={\"/notes/create\"}\n                    className=\"flex items-center space-x-1\"\n                \u003e\n                    \u003cspan className=\"text-xl\"\u003e+\u003c/span\u003e\n                    \u003cspan className=\"text-lg\"\u003eNew\u003c/span\u003e\n                \u003c/Link\u003e\n            \u003c/button\u003e\n        \u003c/div\u003e\n    );\n};\n\nexport default UploadButtonNotes;\n",
      "dependencies": [
        "react",
        "next/link"
      ]
    },
    {
      "id": 74,
      "name": "use-toast.ts",
      "category": "file",
      "path": "ExamCooker-2024/components/ui/use-toast.ts",
      "content": "\"use client\"\n\n// Inspired by react-hot-toast library\nimport * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps \u0026 {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial\u003cToasterToast\u003e\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map\u003cstring, ReturnType\u003ctypeof setTimeout\u003e\u003e()\n\nconst addToRemoveQueue = (toastId: string) =\u003e {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() =\u003e {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State =\u003e {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =\u003e\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) =\u003e {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =\u003e\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) =\u003e t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array\u003c(state: State) =\u003e void\u003e = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) =\u003e {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit\u003cToasterToast, \"id\"\u003e\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =\u003e\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () =\u003e dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) =\u003e {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState\u003cState\u003e(memoryState)\n\n  React.useEffect(() =\u003e {\n    listeners.push(setState)\n    return () =\u003e {\n      const index = listeners.indexOf(setState)\n      if (index \u003e -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) =\u003e dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n",
      "dependencies": [
        "react"
      ]
    },
    {
      "id": 75,
      "name": "clientSide.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/@protected_routes/clientSide.tsx",
      "content": "\"use client\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport NavBar from \"@/app/components/NavBar\";\nimport Header from \"@/app/components/header\";\nimport Image from \"next/image\";\nimport HomeFooter from \"@/app/@protected_routes/home/home_footer\";\n\nexport default function ClientSide({\n    children,\n}: {\n    children: React.ReactNode;\n}) {\n    const [isNavOn, setIsNavOn] = useState(false);\n    const [darkMode, setDarkMode] = useState(false);\n    const navbarRef = useRef\u003cHTMLDivElement | null\u003e(null);\n\n    useEffect(() =\u003e {\n        const savedNavState = localStorage.getItem(\"isNavOn\");\n        const savedDarkMode = localStorage.getItem(\"darkMode\");\n        if (savedNavState !== null) {\n            setIsNavOn(savedNavState === \"true\");\n        }\n        if (savedDarkMode !== null) {\n            setDarkMode(savedDarkMode === \"true\");\n        }\n    }, []);\n\n    const toggleNavbar = () =\u003e {\n        setIsNavOn((prevState) =\u003e {\n            const newState = !prevState;\n            localStorage.setItem(\"isNavOn\", newState.toString());\n            return newState;\n        });\n    };\n\n    const toggleTheme = () =\u003e {\n        setDarkMode((prevState) =\u003e {\n            const newState = !prevState;\n            localStorage.setItem(\"darkMode\", newState.toString());\n            return newState;\n        });\n    };\n\n    const handleClickOutside = (event: MouseEvent) =\u003e {\n        if (\n            navbarRef.current \u0026\u0026\n            !navbarRef.current.contains(event.target as Node)\n        ) {\n            setIsNavOn(false);\n            localStorage.setItem(\"isNavOn\", \"false\");\n        }\n    };\n\n    useEffect(() =\u003e {\n        if (isNavOn) {\n            document.addEventListener(\"mousedown\", handleClickOutside);\n        } else {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        }\n\n        return () =\u003e {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, [isNavOn]);\n\n    return (\n        \u003cdiv className={`relative flex`}\u003e\n            {!isNavOn \u0026\u0026 (\n                \u003cbutton\n                    title=\"Open Navbar\"\n                    onClick={toggleNavbar}\n                    className=\"absolute top-4 left-4 z-50 opacity-100\"\n                \u003e\n                    \u003cImage\n                        src=\"/assets/HamburgerIcon.svg\"\n                        alt=\"Menu\"\n                        width={30}\n                        height={30}\n                        className=\"dark:invert-[.835] transition-transform transform-gpu hover:scale-110 hover:-translate-y-1\"\n                    /\u003e\n                \u003c/button\u003e\n            )}\n            \u003cdiv ref={navbarRef}\u003e\n                \u003cNavBar isNavOn={isNavOn} toggleNavbar={toggleNavbar} /\u003e\n            \u003c/div\u003e\n            {isNavOn \u0026\u0026 (\n                \u003cdiv className=\"fixed inset-0 bg-black bg-opacity-50 z-10 transition-opacity duration-300\"\u003e\u003c/div\u003e\n            )}\n            \u003cmain\n                className={`flex-grow transition-all duration-300 ease-in-out ${\n                    isNavOn ? \"lg:w-[95vw] md:w-[92vw]\" : \"w-[100vw]\"\n                }`}\n            \u003e\n                \u003cdiv\n                    className={`min-h-screen flex flex-col justify-between ${\n                        darkMode ? \"dark\" : \"\"\n                    }`}\n                \u003e\n                    \u003cHeader toggleTheme={toggleTheme} darkMode={darkMode} /\u003e\n                    {children}\n                    \u003cHomeFooter /\u003e\n                \u003c/div\u003e\n            \u003c/main\u003e\n        \u003c/div\u003e\n    );\n}\n",
      "dependencies": [
        "@/app/components/header",
        "next/image",
        "@/app/@protected_routes/home/home_footer",
        "/assets/HamburgerIcon.svg",
        "react",
        "@/app/components/NavBar"
      ]
    },
    {
      "id": 76,
      "name": "layout.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/@protected_routes/layout.tsx",
      "content": "import React from \"react\";\nimport {auth} from \"@/app/auth\";\nimport {SessionProvider} from \"next-auth/react\";\nimport ClientSide from \"./clientSide\";\nimport {PrismaClient} from \"@prisma/client\";\nimport BookmarksProvider from \"@/app/components/BookmarksProvider\";\n\nexport default async function Layout({\n                                         children,\n                                     }: Readonly\u003c{\n    children: React.ReactNode;\n}\u003e) {\n    const prisma = new PrismaClient();\n\n    const session = (await auth())!;\n\n    const user = await prisma.user.findUniqueOrThrow({\n        where: {email: session.user!.email!},\n        include: {\n            bookmarkedNotes: true,\n            bookmarkedPastPapers: true,\n            bookmarkedForumPosts: {\n                include: {\n                    votes: true,\n                    author: true,\n                    tags: true,\n                    comments: {\n                        include: {\n                            author: true,\n                        },\n                    },\n                },\n            },\n            bookmarkedResources: true,\n        },\n    });\n\n    const initialBookmarks = [\n        ...user.bookmarkedNotes.map((note) =\u003e ({\n            id: note.id,\n            type: \"note\" as const,\n            title: note.title,\n            thumbNailUrl: note.thumbNailUrl,\n        })),\n        ...user.bookmarkedPastPapers.map((paper) =\u003e ({\n            id: paper.id,\n            type: \"pastpaper\" as const,\n            title: paper.title,\n            thumbNailUrl: paper.thumbNailUrl,\n        })),\n        ...user.bookmarkedForumPosts.map((post) =\u003e ({\n            id: post.id,\n            type: \"forumpost\" as const,\n            title: post.title,\n            upvoteCount: post.upvoteCount,\n            createdAt: post.createdAt,\n            downvoteCount: post.downvoteCount,\n            votes: post.votes.map((vote) =\u003e ({type: vote.type})),\n            author: post.author ? {name: post.author.name} : undefined,\n            tags: post.tags,\n            comments: post.comments.map((comment) =\u003e ({\n                ...comment,\n                author: comment.author\n                    ? {name: comment.author.name}\n                    : undefined,\n            })),\n        })),\n        ...user.bookmarkedResources.map((resource) =\u003e ({\n            id: resource.id,\n            type: \"subject\" as const,\n            title: resource.name,\n        })),\n    ];\n\n    return (\n        \u003cSessionProvider\u003e\n            \u003cClientSide\u003e\n                \u003cBookmarksProvider initialBookmarks={initialBookmarks}\u003e\n                    {children}\n                \u003c/BookmarksProvider\u003e\n            \u003c/ClientSide\u003e\n        \u003c/SessionProvider\u003e\n    );\n}\n",
      "dependencies": [
        "@/app/components/BookmarksProvider",
        "react",
        "@/app/auth",
        "next-auth/react",
        "@prisma/client"
      ]
    },
    {
      "id": 77,
      "name": "page.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/@protected_routes/resources/page.tsx",
      "content": "import React from 'react';\nimport Fuse from 'fuse.js';\nimport { PrismaClient, Subject } from '@prisma/client';\nimport { redirect } from 'next/navigation';\nimport ResourceCard from '../../components/ResourceCard';\nimport Pagination from '../../components/Pagination';\nimport SearchBar from '../../components/SearchBar';\n\nconst SCORE_THRESHOLD = 0.8;\nconst prisma = new PrismaClient();\n\nfunction validatePage(page: number, totalPages: number): number {\n    if (isNaN(page) || page \u003c 1) {\n        return 1;\n    }\n    if (page \u003e totalPages \u0026\u0026 totalPages \u003e 0) {\n        return totalPages;\n    }\n    return page;\n}\n\nfunction performSearch(query: string, dataSet: Subject[]) {\n    const options = {\n        includeScore: true,\n        keys: ['name'],\n        threshold: 0.6,\n        ignoreLocation: true,\n        minMatchCharLength: 2,\n    };\n    const fuse = new Fuse(dataSet, options);\n    const searchResults = fuse.search(query);\n    return searchResults\n        .filter((fuseResult) =\u003e (fuseResult.score || 1) \u003c SCORE_THRESHOLD)\n        .map((fuseResult) =\u003e fuseResult.item);\n}\n\nexport default async function ResourcesPage({ searchParams }: { searchParams: { page?: string, search?: string } }) {\n    const pageSize = 12;\n    const search = searchParams.search || '';\n    const page = parseInt(searchParams.page || '1', 10);\n\n    const allSubjects = await prisma.subject.findMany();\n\n    let filteredSubjects = allSubjects;\n    if (search) {\n        filteredSubjects = performSearch(search, allSubjects);\n    }\n\n    const totalCount = filteredSubjects.length;\n    const totalPages = Math.ceil(totalCount / pageSize);\n\n    const validatedPage = validatePage(page, totalPages);\n\n    const startIndex = (validatedPage - 1) * pageSize;\n    const endIndex = startIndex + pageSize;\n    const paginatedSubjects = filteredSubjects.slice(startIndex, endIndex);\n\n    if (validatedPage !== page) {\n        redirect(`/resources?page=${validatedPage}${search ? `\u0026search=${encodeURIComponent(search)}` : ''}`);\n    }\n\n    return (\n        \u003cdiv className=\"transition-colors min-h-screen text-black dark:text-gray-200\"\u003e\n            \u003cdiv className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-8\"\u003e\n                \u003ch1 className=\"text-center mb-8\"\u003eResource Repo\u003c/h1\u003e\n\n                \u003cdiv className=\"max-w-3xl mx-auto mb-8\"\u003e\n                    \u003cSearchBar pageType=\"resources\" initialQuery={search} /\u003e\n                \u003c/div\u003e\n\n                {paginatedSubjects.length \u003e 0 ? (\n                    \u003cdiv className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\"\u003e\n                        {paginatedSubjects.map((subject) =\u003e (\n                            \u003cResourceCard key={subject.id} subject={subject} /\u003e\n                        ))}\n                    \u003c/div\u003e\n                ) : (\n                    \u003cp className=\"text-center text-lg\"\u003e\n                        {search\n                            ? \"No subjects found matching your search.\"\n                            : \"No subjects found.\"}\n                    \u003c/p\u003e\n                )}\n\n                {totalPages \u003e 1 \u0026\u0026 (\n                    \u003cdiv className=\"mt-12\"\u003e\n                        \u003cPagination\n                            currentPage={validatedPage}\n                            totalPages={totalPages}\n                            basePath=\"/resources\"\n                            searchQuery={search}\n                        /\u003e\n                    \u003c/div\u003e\n                )}\n            \u003c/div\u003e\n        \u003c/div\u003e\n    );\n}\n",
      "dependencies": [
        "@prisma/client",
        "next/navigation",
        "react",
        "fuse.js"
      ]
    },
    {
      "id": 78,
      "name": "UpdateFile.ts",
      "category": "file",
      "path": "ExamCooker-2024/app/actions/UpdateFile.ts",
      "content": "'use server'\n\nimport { PrismaClient } from '@prisma/client'\nimport { revalidatePath } from 'next/cache'\n\nconst prisma = new PrismaClient();\n\nexport async function updateFile(itemID: string, newTitle: string, activeTab: string) {\n\n    if(activeTab === \"notes\") {\n        try {\n            const updatedNote = await prisma.note.update({\n            where: { id: itemID },\n            data: { \n                title: newTitle\n            },\n            })\n\n            revalidatePath('/notes') // Adjust this path as needed\n\n            return { success: true, note: updatedNote }\n        } catch (error) {\n            console.error('Failed to update note:', error)\n            return { success: false, error: 'Failed to update note' }\n        }\n\n    } else if (activeTab === \"pastPaper\") {\n        try {\n            const updatedPaper = await prisma.pastPaper.update({\n            where: { id: itemID },\n            data: { \n                title: newTitle\n            },\n            })\n\n            revalidatePath('/past_papers') // Adjust this path as needed\n\n            return { success: true, note: updatedPaper }\n        } catch (error) {\n            console.error('Failed to update note:', error)\n            return { success: false, error: 'Failed to update note' }\n        }\n    }\n\n\n\n}",
      "dependencies": [
        "@prisma/client",
        "next/cache"
      ]
    },
    {
      "id": 79,
      "name": "auth.ts",
      "category": "file",
      "path": "ExamCooker-2024/app/auth.ts",
      "content": "import NextAuth from \"next-auth\";\nimport Google from \"next-auth/providers/google\";\nimport { PrismaAdapter } from \"@auth/prisma-adapter\";\nimport { PrismaClient } from \"@prisma/client\";\n\nconst prisma = new PrismaClient();\n\nexport const { handlers, auth, signIn, signOut } = NextAuth({\n    adapter: PrismaAdapter(prisma),\n    providers: [Google({\n        clientId: process.env.AUTH_GOOGLE_ID,\n        clientSecret: process.env.AUTH_GOOGLE_SECRET,\n        authorization: 'https://accounts.google.com/o/oauth2/auth?response_type=code\u0026hd=vitstudent.ac.in',\n    })],\n});\n",
      "dependencies": [
        "next-auth",
        "next-auth/providers/google",
        "@auth/prisma-adapter",
        "@prisma/client"
      ]
    },
    {
      "id": 80,
      "name": "PastPaperCard.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/components/PastPaperCard.tsx",
      "content": "\"use client\";\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\nimport { useBookmarks } from './BookmarksProvider';\nimport { PastPaper } from '@prisma/client';\nimport { useRouter } from 'next/navigation';\nimport {useToast} from \"@/components/ui/use-toast\";\n\ninterface PastPaperCardProps {\n    pastPaper: PastPaper;\n    index: number;\n    openInNewTab?: boolean;\n}\n\nfunction removePdfExtension(title: string) {\n    return title.replace(/\\.pdf$/, '');\n}\n\nfunction PastPaperCard({ pastPaper }: PastPaperCardProps) {\n    const { isBookmarked, toggleBookmark } = useBookmarks();\n    const router = useRouter();\n    const isFav = isBookmarked(pastPaper.id, 'pastpaper');\n    const { toast } = useToast();\n\n    const handleToggleFav = (e: React.MouseEvent) =\u003e {\n        e.stopPropagation();\n        e.preventDefault();\n        toggleBookmark({ id: pastPaper.id, type: 'pastpaper', title: pastPaper.title }, !isFav).catch(() =\u003e toast({title: \"Error! Could not add to favorites\", variant: \"destructive\"}) );\n    };\n\n    return (\n        \u003cdiv className={`max-w-sm w-full h-full text-black dark:text-[#D5D5D5]`}\u003e\n            \u003cdiv className=\"hover:shadow-xl px-5 py-6 w-full text-center bg-[#5FC4E7] dark:bg-[#ffffff]/10 lg:dark:bg-[#0C1222] dark:border-b-[#3BF4C7] dark:lg:border-b-[#ffffff]/20 dark:border-[#ffffff]/20 border-2 border-[#5FC4E7] hover:border-b-[#ffffff] hover:border-b-2 dark:hover:border-b-[#3BF4C7]  dark:hover:bg-[#ffffff]/10 transition duration-200 transform hover:scale-105 max-w-96 cursor-pointer\"\n                onClick={() =\u003e router.push(`/past_papers/${pastPaper.id}`)}\u003e\n                \u003cdiv className=\"bg-[#d9d9d9] w-full h-44 relative overflow-hidden\"\u003e\n                    \u003cimg\n                        className=\"w-full object-cover\"\n                        src={pastPaper.thumbNailUrl || \"https://topperworld.in/media/2022/11/c-sc.png\"} // migration to make thumbnail mandatory \n                        alt={removePdfExtension(pastPaper.title)}\n                    /\u003e\n                \u003c/div\u003e\n                \u003cdiv className=\"flex justify-between items-center\"\u003e\n                    \u003cdiv\u003e\u003c/div\u003e\n                    \u003cdiv className=\"mb-2 w-full whitespace-nowrap overflow-hidden text-ellipsis text-lg\"\u003e\n                        {removePdfExtension(pastPaper.title)}\n                    \u003c/div\u003e\n                    \u003cbutton onClick={handleToggleFav} className=\"transition-colors duration-200\"\u003e\n                        \u003cFontAwesomeIcon icon={faHeart} color={isFav ? 'red' : 'lightgrey'} /\u003e\n                    \u003c/button\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    );\n}\n\nexport default PastPaperCard;\n\n//     return (\n//         \u003cdiv className=\"max-w-sm w-full h-full text-black dark:text-[#D5D5D5] \"\u003e\n//             \u003cdiv className=\"hover:shadow-xl px-5 py-6 w-full text-center bg-[#5FC4E7] dark:bg-[#ffffff]/10 lg:dark:bg-[#0C1222] dark:border-b-[#3BF4C7] dark:lg:border-b-[#ffffff]/20 dark:border-[#ffffff]/20 border-2 border-[#5FC4E7] hover:border-b-[#ffffff] hover:border-b-2 dark:hover:border-b-[#3BF4C7]  dark:hover:bg-[#ffffff]/10 transition duration-200 transform hover:scale-105 max-w-96\"\u003e\n//                 \u003cdiv className=\"bg-[#d9d9d9] w-full h-44 overflow-hidden\"\u003e\n//                     \u003cimg\n//                         src=\"https://topperworld.in/media/2022/11/c-sc.png\"\n//                         alt={pastPaper.title}\n//                         className=\"w-full h-full object-cover\"\n//                     /\u003e\n//                 \u003c/div\u003e\n//                 \u003cdiv className=\"mb-2 w-full whitespace-nowrap overflow-hidden text-ellipsis\"\u003e\n//                     {removePdfExtension(pastPaper.title)}\n//                 \u003c/div\u003e\n//                 \u003cdiv className=\"flex justify-between items-center space-x-4\"\u003e\n//                     \u003cdiv\u003e\u003c/div\u003e\n//                     \u003cLink\n//                         href={`/past_papers/${pastPaper.id}`}\n//                         {...(openInNewTab ? { target: \"_blank\", rel: \"noopener noreferrer\" } : {})}\n//                         className=\"py-1 px-2 text-sm flex items-center bg-white dark:bg-[#3D414E]\"\n//                     \u003e\n//                         \u003cspan className=\"mr-1 flex items-center justify-center\"\u003e\n//                             \u003cFontAwesomeIcon icon={faEye} /\u003e\n//                         \u003c/span\u003e\n//                         View\n//                     \u003c/Link\u003e\n//                     \u003cbutton onClick={handleToggleFav} style={{ color: isFavorite(pastPaper.id, 'pastPaper') ? 'red' : 'lightgrey' }}\u003e\n//                         \u003cFontAwesomeIcon icon={faHeart} /\u003e\n//                     \u003c/button\u003e\n//                 \u003c/div\u003e\n//             \u003c/div\u003e\n//         \u003c/div\u003e\n//     );\n// }\n//\n// export default PastPaperCard;\n\n",
      "dependencies": [
        "react",
        "@fortawesome/react-fontawesome",
        "@fortawesome/free-solid-svg-icons",
        "@prisma/client",
        "next/navigation",
        "@/components/ui/use-toast",
        "https://topperworld.in/media/2022/11/c-sc.png"
      ]
    },
    {
      "id": 81,
      "name": "QuizModalComponent.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/components/QuizModalComponent.tsx",
      "content": "\"use client\";\n\nimport React, { useState, useRef } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { ArrowLeft, Check } from \"lucide-react\";\n\ninterface QuizModalContentProps {\n  courseCode: string;\n  courseName: string;\n  onClose: () =\u003e void;\n}\n\ninterface QuizState {\n  selectedWeeks: number[];\n  numQuestions: number | null;\n  duration: {\n    hours: number;\n    minutes: number;\n    seconds: number;\n  };\n}\n\ninterface ValidationState {\n  weeks: {\n    isValid: boolean;\n    message: string;\n  };\n  questions: {\n    isValid: boolean;\n    message: string;\n  };\n  duration: {\n    isValid: boolean;\n    message: string;\n  };\n}\n\nexport default function QuizModalContent({\n  courseCode,\n  courseName,\n  onClose,\n}: QuizModalContentProps) {\n  const router = useRouter();\n  const [showDropdown, setShowDropdown] = useState(false);\n  const dropdownRef = useRef\u003cHTMLDivElement\u003e(null);\n  const TOTAL_WEEKS = 12;\n\n  const [quizState, setQuizState] = useState\u003cQuizState\u003e({\n    selectedWeeks: [],\n    numQuestions: null,\n    duration: { hours: 0, minutes: 0, seconds: 0 },\n  });\n\n  const [validation, setValidation] = useState\u003cValidationState\u003e({\n    weeks: { isValid: true, message: \"\" },\n    questions: { isValid: true, message: \"\" },\n    duration: { isValid: true, message: \"\" },\n  });\n\n  React.useEffect(() =\u003e {\n    const handleClickOutside = (event: MouseEvent) =\u003e {\n      if (\n        dropdownRef.current \u0026\u0026\n        !dropdownRef.current.contains(event.target as Node)\n      ) {\n        setShowDropdown(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () =\u003e {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [dropdownRef]);\n\n  const getTotalSeconds = () =\u003e {\n    const { hours, minutes, seconds } = quizState.duration;\n    return hours * 3600 + minutes * 60 + seconds;\n  };\n\n  const validateInputs = (): boolean =\u003e {\n    const newValidation = { ...validation };\n    let isValid = true;\n\n    if (quizState.selectedWeeks.length === 0) {\n      newValidation.weeks = {\n        isValid: false,\n        message: \"Please select at least one week\",\n      };\n      isValid = false;\n    } else {\n      newValidation.weeks = {\n        isValid: true,\n        message: `${quizState.selectedWeeks.length} weeks selected`,\n      };\n    }\n\n    const maxQuestions = quizState.selectedWeeks.length * 10;\n    if (!quizState.numQuestions || quizState.numQuestions \u003c= 0) {\n      newValidation.questions = {\n        isValid: false,\n        message: \"Please enter a valid number of questions\",\n      };\n      isValid = false;\n    } else if (quizState.numQuestions \u003e maxQuestions) {\n      newValidation.questions = {\n        isValid: false,\n        message: `Maximum ${maxQuestions} questions allowed for selected weeks`,\n      };\n      isValid = false;\n    } else {\n      newValidation.questions = {\n        isValid: true,\n        message: `${quizState.numQuestions} questions selected`,\n      };\n    }\n\n    const totalSeconds = getTotalSeconds();\n    if (totalSeconds === 0) {\n      newValidation.duration = {\n        isValid: false,\n        message: \"Please set a duration greater than 0\",\n      };\n      isValid = false;\n    } else {\n      newValidation.duration = {\n        isValid: true,\n        message: `${formatDuration(quizState.duration)} duration set`,\n      };\n    }\n\n    setValidation(newValidation);\n    return isValid;\n  };\n\n  const formatDuration = (duration: {\n    hours: number;\n    minutes: number;\n    seconds: number;\n  }) =\u003e {\n    return `${String(duration.hours).padStart(2, \"0\")}:${String(\n      duration.minutes\n    ).padStart(2, \"0\")}:${String(duration.seconds).padStart(2, \"0\")}`;\n  };\n\n  const handleStartQuiz = () =\u003e {\n    if (validateInputs()) {\n      const formattedWeeks = quizState.selectedWeeks.join(\"-\");\n      const formattedDuration = formatDuration(quizState.duration).replace(\n        /:/g,\n        \"\"\n      );\n      router.push(\n        `/quiz/weeks=${formattedWeeks}\u0026numQ=${quizState.numQuestions}\u0026time=${formattedDuration}\u0026course=${courseCode}`\n      );\n    }\n  };\n\n  const toggleAllWeeks = () =\u003e {\n    setQuizState((prev) =\u003e ({\n      ...prev,\n      selectedWeeks:\n        prev.selectedWeeks.length === TOTAL_WEEKS\n          ? []\n          : Array.from({ length: TOTAL_WEEKS }, (_, i) =\u003e i + 1),\n    }));\n  };\n\n  const toggleWeek = (week: number) =\u003e {\n    setQuizState((prev) =\u003e ({\n      ...prev,\n      selectedWeeks: prev.selectedWeeks.includes(week)\n        ? prev.selectedWeeks.filter((w) =\u003e w !== week)\n        : [...prev.selectedWeeks, week].sort((a, b) =\u003e a - b),\n    }));\n  };\n\n  const handleNumQuestionsChange = (value: number) =\u003e {\n    setQuizState((prev) =\u003e ({\n      ...prev,\n      numQuestions: Math.max(0, value),\n    }));\n  };\n\n  const handleDurationChange = (\n    field: \"hours\" | \"minutes\" | \"seconds\",\n    value: number\n  ) =\u003e {\n    const maxValue = field === \"hours\" ? 23 : 59;\n    const sanitizedValue = Math.max(0, Math.min(value, maxValue));\n\n    setQuizState((prev) =\u003e ({\n      ...prev,\n      duration: {\n        ...prev.duration,\n        [field]: sanitizedValue,\n      },\n    }));\n  };\n\n  return (\n    \u003cdiv className=\"relative p-6 max-w-2xl mx-auto shadow-lg bg-[#C2E6EC] dark:bg-[#0C1222]\"\u003e\n      \u003cdiv className=\"flex justify-between items-center mb-6\"\u003e\n        \u003cbutton\n          onClick={onClose}\n          className=\"p-2 hover:bg-gray-100 transition-colors\"\n        \u003e\n          \u003cArrowLeft size={24} className=\"text-black dark:text-[#D5D5D5]\" /\u003e\n        \u003c/button\u003e\n        \u003cdiv className=\"text-center\"\u003e\n          \u003ch2 className=\"text-2xl font-bold text-black dark:text-[#D5D5D5]\"\u003e\n            {courseName}\n          \u003c/h2\u003e\n          \u003ch3 className=\"text-lg font-semibold text-black dark:text-[#D5D5D5]\"\u003e\n            {courseCode}\n          \u003c/h3\u003e\n        \u003c/div\u003e\n        \u003cbutton onClick={handleStartQuiz} className=\"relative group\"\u003e\n          \u003cdiv className=\"absolute inset-0 bg-black dark:bg-[#3BF4C7]\" /\u003e\n          \u003cdiv className=\"absolute inset-0 blur-[75px] dark:lg:bg-none lg:dark:group-hover:bg-[#3BF4C7] transition dark:group-hover:duration-200 duration-1000\" /\u003e\n          \u003cbutton\n            type=\"submit\"\n            title=\"Start Quiz\"\n            className=\"dark:text-[#D5D5D5] dark:group-hover:text-[#3BF4C7] dark:group-hover:border-[#3BF4C7]\n                        dark:border-[#D5D5D5] dark:bg-[#0C1222] border-black border-2 relative px-4 py-2 text-lg bg-[#3BF4C7] text-black font-bold\n                        group-hover:-translate-x-1 group-hover:-translate-y-1 transition duration-150\"\n          \u003e\n            Start Quiz\n          \u003c/button\u003e\n        \u003c/button\u003e\n      \u003c/div\u003e\n\n      \u003cdiv className=\"flex space-x-4 mb-6\"\u003e\n        \u003cdiv className=\"w-1/2 flex flex-col justify-between\" ref={dropdownRef}\u003e\n          \u003cdiv className=\"flex items-center mb-2\"\u003e\n            \u003clabel className=\"text-sm font-medium text-black dark:text-[#D5D5D5]\"\u003e\n              Select Weeks\n            \u003c/label\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"relative\"\u003e\n            \u003cbutton\n              className={`p-3 w-full border text-left flex justify-between items-center bg-white dark:bg-[#3D414E] text-black dark:text-[#D5D5D5] ${\n                validation.weeks.isValid ? \"border-gray-300\" : \"border-red-500\"\n              }`}\n              onClick={() =\u003e setShowDropdown(!showDropdown)}\n            \u003e\n              \u003cp className=\"text-sm sm:text-base\"\u003e\n                {quizState.selectedWeeks.length === 0\n                  ? \"Select Weeks\"\n                  : quizState.selectedWeeks.join(\", \")}\n              \u003c/p\u003e\n              \u003cCheck\n                className=\"mr-2 text-black dark:text-[#D5D5D5]\"\n                size={20}\n              /\u003e\n            \u003c/button\u003e\n            {showDropdown \u0026\u0026 (\n              \u003cdiv className=\"absolute z-10 w-full bg-white dark:bg-[#3D414E] text-black dark:text-[#D5D5D5] border mt-1 shadow-lg overflow-y-auto max-h-64\"\u003e\n                \u003cdiv\n                  onClick={toggleAllWeeks}\n                  className=\"cursor-pointer p-2 hover:bg-black/20 dark:hover:bg-white/20 border-b\"\n                \u003e\n                  \u003cinput\n                    type=\"checkbox\"\n                    checked={quizState.selectedWeeks.length === TOTAL_WEEKS}\n                    readOnly\n                    className=\"mr-2\"\n                  /\u003e\n                  \u003cspan\u003eAll Weeks\u003c/span\u003e\n                \u003c/div\u003e\n                {Array.from({ length: TOTAL_WEEKS }, (_, i) =\u003e i + 1).map(\n                  (week) =\u003e (\n                    \u003cdiv\n                      key={week}\n                      onClick={() =\u003e toggleWeek(week)}\n                      className=\"cursor-pointer p-2 hover:bg-black/20 dark:hover:bg-white/20\"\n                    \u003e\n                      \u003cinput\n                        type=\"checkbox\"\n                        checked={quizState.selectedWeeks.includes(week)}\n                        readOnly\n                        className=\"mr-2\"\n                      /\u003e\n                      \u003cspan\u003eWeek {week}\u003c/span\u003e\n                    \u003c/div\u003e\n                  )\n                )}\n              \u003c/div\u003e\n            )}\n          \u003c/div\u003e\n          {!validation.weeks.isValid \u0026\u0026 (\n            \u003cp className=\"text-red-500 text-xs\"\u003e{validation.weeks.message}\u003c/p\u003e\n          )}\n        \u003c/div\u003e\n\n        \u003cdiv className=\"w-1/2\"\u003e\n          \u003cdiv className=\"flex items-center mb-2\"\u003e\n            \u003clabel className=\"text-sm font-medium text-black dark:text-[#D5D5D5]\"\u003e\n              Number of Questions\n            \u003c/label\u003e\n          \u003c/div\u003e\n          \u003cinput\n            type=\"number\"\n            min=\"0\"\n            value={quizState.numQuestions || \"\"}\n            onChange={(e) =\u003e handleNumQuestionsChange(Number(e.target.value))}\n            placeholder=\"Enter number\"\n            className={`text-sm sm:text-base w-full p-2 border dark:bg-[#3D414E] text-black dark:text-[#D5D5D5] placeholder:text-[#D5D5D5] ${\n              validation.questions.isValid ? \"border-gray-300\" : \"border-red-500\"\n            }`}\n            style={{ height: \"3rem\" }}\n          /\u003e\n          {!validation.questions.isValid \u0026\u0026 (\n            \u003cp className=\"text-red-500 text-xs\"\u003e{validation.questions.message}\u003c/p\u003e\n          )}\n        \u003c/div\u003e\n      \u003c/div\u003e\n\n      \u003cdiv className=\"flex space-x-4 mb-6\"\u003e\n        \u003cdiv className=\"w-1/3\"\u003e\n          \u003clabel className=\"text-sm font-medium text-black dark:text-[#D5D5D5]\"\u003e\n            Hours\n          \u003c/label\u003e\n          \u003cinput\n            type=\"number\"\n            value={quizState.duration.hours}\n            onChange={(e) =\u003e\n              handleDurationChange(\"hours\", Number(e.target.value))\n            }\n            className={`w-full p-2 border dark:bg-[#3D414E] text-black dark:text-[#D5D5D5] ${\n              validation.duration.isValid ? \"border-gray-300\" : \"border-red-500\"\n            }`}\n            style={{ height: \"3rem\" }}\n          /\u003e\n        \u003c/div\u003e\n        \u003cdiv className=\"w-1/3\"\u003e\n          \u003clabel className=\"text-sm font-medium text-black dark:text-[#D5D5D5]\"\u003e\n            Minutes\n          \u003c/label\u003e\n          \u003cinput\n            type=\"number\"\n            value={quizState.duration.minutes}\n            onChange={(e) =\u003e\n              handleDurationChange(\"minutes\", Number(e.target.value))\n            }\n            className={`w-full p-2 border dark:bg-[#3D414E] text-black dark:text-[#D5D5D5] ${\n              validation.duration.isValid ? \"border-gray-300\" : \"border-red-500\"\n            }`}\n            style={{ height: \"3rem\" }}\n          /\u003e\n        \u003c/div\u003e\n        \u003cdiv className=\"w-1/3\"\u003e\n          \u003clabel className=\"text-sm font-medium text-black dark:text-[#D5D5D5]\"\u003e\n            Seconds\n          \u003c/label\u003e\n          \u003cinput\n            type=\"number\"\n            value={quizState.duration.seconds}\n            onChange={(e) =\u003e\n              handleDurationChange(\"seconds\", Number(e.target.value))\n            }\n            className={`w-full p-2 border dark:bg-[#3D414E] text-black dark:text-[#D5D5D5] ${\n              validation.duration.isValid ? \"border-gray-300\" : \"border-red-500\"\n            }`}\n            style={{ height: \"3rem\" }}\n          /\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n      {!validation.duration.isValid \u0026\u0026 (\n        \u003cp className=\"text-red-500 text-xs\"\u003e{validation.duration.message}\u003c/p\u003e\n      )}\n    \u003c/div\u003e\n  );\n}\n",
      "dependencies": [
        "react",
        "next/navigation",
        "lucide-react"
      ]
    },
    {
      "id": 82,
      "name": "SearchBar.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/components/SearchBar.tsx",
      "content": "'use client';\n\nimport React, { useState, useCallback, useEffect, useMemo } from 'react';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport Image from \"next/image\";\nimport debounce from 'lodash/debounce';\nimport Seacrh from \"@/app/components/assets/seacrh.svg\";\n\ninterface SearchProps {\n    pageType: 'syllabus' | 'notes' | 'past_papers' | 'resources' | 'forum' | 'favourites';\n    availableTags?: string[];\n    initialQuery?: string;\n}\n\nexport default function Search({ pageType, availableTags, initialQuery = '' }: SearchProps) {\n    const router = useRouter();\n    const searchParams = useSearchParams();\n    const [query, setQuery] = useState(initialQuery || searchParams.get('search') || '');\n    const [selectedTags, setSelectedTags] = useState\u003cstring[]\u003e([]);\n\n    useEffect(() =\u003e {\n        const tags = searchParams.getAll('tags');\n        if (tags.length \u003e 0) {\n            setSelectedTags(tags);\n        }\n    }, [searchParams]);\n\n    const updateURL = useCallback((newQuery: string, newTags: string[]) =\u003e {\n        const params = new URLSearchParams(searchParams);\n        params.set('search', newQuery);\n        params.delete('tags');\n        newTags.forEach(tag =\u003e params.append('tags', tag));\n        const newURL = `/${pageType}?${params.toString()}`;\n        router.push(newURL);\n    }, [pageType, router, searchParams]);\n\n    const debouncedSearch = useMemo(\n        () =\u003e debounce((newQuery: string, newTags: string[]) =\u003e updateURL(newQuery, newTags), 300),\n        [updateURL]\n    );\n\n    useEffect(() =\u003e {\n        return () =\u003e {\n            debouncedSearch.cancel();\n        };\n    }, [debouncedSearch]);\n\n    const handleChange = (e: React.ChangeEvent\u003cHTMLInputElement\u003e) =\u003e {\n        const newQuery = e.target.value;\n        setQuery(newQuery);\n        debouncedSearch(newQuery, selectedTags);\n    };\n\n    const handleTagToggle = (tag: string) =\u003e {\n        setSelectedTags(prev =\u003e {\n            const newTags = prev.includes(tag)\n                ? prev.filter(t =\u003e t !== tag)\n                : [...prev, tag];\n            updateURL(query, newTags);\n            return newTags;\n        });\n    };\n\n    const handleSubmit = (e: React.FormEvent) =\u003e {\n        e.preventDefault();\n        updateURL(query, selectedTags);\n    };\n\n    return (\n        \u003cform onSubmit={handleSubmit} className=\"relative flex items-center w-full\"\u003e\n            \u003cdiv className=\"relative flex items-center bg-white dark:bg-[#3D414E] border border-black dark:border-[#D5D5D5] w-full px-2 py-0.5 shadow-[2px_2px_0_0_rgba(0,0,0,1)]\"\u003e\n                \u003cImage src={Seacrh} alt=\"search\" className=\"dark:invert-[.835]\" /\u003e\n                \u003cinput\n                    type=\"text\"\n                    className=\"px-4 py-2 w-full focus:outline-none bg-white dark:bg-[#3D414E]\"\n                    placeholder=\"Search\"\n                    value={query}\n                    onChange={handleChange}\n                /\u003e\n                \u003cbutton type=\"submit\" className=\"hidden\"\u003eSearch\u003c/button\u003e\n            \u003c/div\u003e\n            {availableTags \u0026\u0026 (\n                \u003cdiv className=\"flex flex-wrap gap-2 mt-2\"\u003e\n                    {availableTags.map(tag =\u003e (\n                        \u003cbutton\n                            key={tag}\n                            type=\"button\"\n                            onClick={() =\u003e handleTagToggle(tag)}\n                            className={`px-3 py-1 rounded-full text-sm ${selectedTags.includes(tag)\n                                ? 'bg-blue-500 text-white'\n                                : 'bg-gray-200 text-gray-700'\n                                }`}\n                        \u003e\n                            {tag}\n                        \u003c/button\u003e\n                    ))}\n                \u003c/div\u003e\n            )}\n        \u003c/form\u003e\n    );\n}\n",
      "dependencies": [
        "react",
        "next/navigation",
        "next/image",
        "lodash/debounce",
        "@/app/components/assets/seacrh.svg"
      ]
    },
    {
      "id": 83,
      "name": "loading.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/@protected_routes/forum/[id]/loading.tsx",
      "content": "import Loading from \"../loading\";\n\nexport default Loading;\n"
    },
    {
      "id": 84,
      "name": "page.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/@protected_routes/notes/create/page.tsx",
      "content": "import React from \"react\";\nimport UploadFile from \"@/app/components/UploadFile\";\nimport { PrismaClient } from \"@prisma/client\";\n\nasync function NewForumPage() {\n    const prisma = new PrismaClient();\n\n    const allTags = await prisma.tag.findMany();\n    return (\n        \u003cdiv className=\"create-notes\"\u003e\n            \u003cUploadFile allTags={allTags.map(i =\u003e i.name)} variant=\"Notes\"/\u003e\n        \u003c/div\u003e\n    );\n}\n\nexport default NewForumPage;\n",
      "dependencies": [
        "react",
        "@/app/components/UploadFile",
        "@prisma/client"
      ]
    },
    {
      "id": 85,
      "name": "loading.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/@protected_routes/past_papers/loading.tsx",
      "content": "import Loading from \"../loading\";\n\nexport default Loading;\n"
    },
    {
      "id": 86,
      "name": "CreateForumPost.ts",
      "category": "file",
      "path": "ExamCooker-2024/app/actions/CreateForumPost.ts",
      "content": "'use server'\n\nimport { PrismaClient, Tag } from '@prisma/client'\nimport { auth } from '../auth'\nimport { revalidatePath } from 'next/cache'\n\nconst prisma = new PrismaClient()\n\ntype CreateForumPostInput = {\n  title: string\n  forumId: string\n  description: string\n  year?: string\n  slot?: string\n  selectedTags: string[]\n}\n\nasync function findOrCreateTag(name: string): Promise\u003cTag\u003e {\n  let tag = await prisma.tag.findUnique({ where: { name } });\n  if (!tag) {\n    tag = await prisma.tag.create({ data: { name } });\n  }\n  return tag;\n}\n\nexport async function createForumPost(inputData: CreateForumPostInput) {\n  try {\n    const session = await auth();\n    if(!session|| !session.user){\n      return {\n        success: false,\n        error: \"LOGIN KAR LODE\",\n      };\n    }\n    const tagConnections = [\n      ...(inputData.year ? [await findOrCreateTag(inputData.year)] : []),\n      ...(inputData.slot ? [await findOrCreateTag(inputData.slot)] : []),\n      ...await Promise.all(inputData.selectedTags.map(tag =\u003e findOrCreateTag(tag)))\n    ].map(tag =\u003e ({ id: tag.id }));\n\n    const newForumPost = await prisma.forumPost.create({\n      data: {\n        title: inputData.title,\n        author: {\n          connect: { email: session.user.email!}\n        },\n        forum: {\n          connect: { id: inputData.forumId }\n        },\n        description: inputData.description,\n        tags: {\n          connect: tagConnections\n        }\n      },\n      include: {\n        tags: true\n      }\n    });\n\n    revalidatePath(`/forum`)\n    return {success: true, data: newForumPost}\n  } catch (error) {\n    console.error('Failed to create forum post:', error)\n    return { success: false, error: 'Failed to create forum post' }\n  }  \n}\n",
      "dependencies": [
        "@prisma/client",
        "next/cache"
      ]
    },
    {
      "id": 87,
      "name": "NewForumButton.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/components/NewForumButton.tsx",
      "content": "'use client';\n\nimport React from 'react';\nimport Link from 'next/link';\n\nconst NewForumButton: React.FC = () =\u003e {\n    return (\n\n        \u003cdiv className=\"relative group\"\u003e\n            \u003cdiv className=\"absolute inset-0 bg-black dark:bg-[#3BF4C7]\" /\u003e\n            \u003cdiv className=\"dark:absolute dark:inset-0 dark:blur-[75px] dark:lg:bg-none lg:dark:group-hover:bg-[#3BF4C7] transition dark:group-hover:duration-200 duration-1000\" /\u003e\n            \u003cbutton type=\"submit\" title=\"Create New Post\" className=\"dark:text-[#D5D5D5] dark:group-hover:text-[#3BF4C7] dark:group-hover:border-[#3BF4C7] dark:border-[#D5D5D5] dark:bg-[#0C1222] border-black border-2 relative px-4 py-2 text-lg bg-[#3BF4C7] text-black font-bold group-hover:-translate-x-1 group-hover:-translate-y-1 transition duration-150\"\u003e\n                \u003cLink href={\"/forum/create\"} className=\"flex items-center space-x-1\"\u003e\n                    \u003cspan className=\"text-xl\"\u003e+\u003c/span\u003e\n                    \u003cspan className=\"text-lg\"\u003eNew\u003c/span\u003e\n                \u003c/Link\u003e\n            \u003c/button\u003e\n        \u003c/div\u003e\n    );\n};\n\nexport default NewForumButton;\n",
      "dependencies": [
        "react",
        "next/link"
      ]
    },
    {
      "id": 88,
      "name": "QuizCard.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/components/QuizCard.tsx",
      "content": "import React from \"react\";\nimport FavouriteIcon from \"/public/FavouriteIcon.svg\";\nimport Image from \"next/image\";\ninterface QuizCardProps {\n  courseName: string;\n  courseCode: string;\n}\n\nconst QuizCard: React.FC\u003cQuizCardProps\u003e = ({ courseName, courseCode }) =\u003e {\n  return (\n    \u003cdiv className=\"bg-[#5FC4E7] dark-[#0C1222] h-[10vh] w-[30vw] flex flex-col justify-center space-y-4 p-2 px-2\"\u003e\n      \u003cdiv className=\"flex justify-start pl-4 text-black dark:text-white\"\u003e\n        {courseName}\n      \u003c/div\u003e\n      \u003cdiv className=\"flex flex-row justify-between\"\u003e\n        \u003cdiv className=\"flex justify-start pl-4 text-black dark:text-white\"\u003e\n          {courseCode}\n        \u003c/div\u003e\n        \u003cdiv className=\"pr-4\"\u003e\n          \u003cImage src={FavouriteIcon} alt=\"favicon\" /\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n  );\n};\n\nexport default QuizCard;\n",
      "dependencies": [
        "react",
        "/public/FavouriteIcon.svg",
        "next/image"
      ]
    },
    {
      "id": 89,
      "name": "UploadFile.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/components/UploadFile.tsx",
      "content": "\"use client\"\nimport React, {useState, useCallback, useTransition} from 'react';\nimport Link from 'next/link';\nimport {useDropzone} from 'react-dropzone';\nimport uploadFile from \"../actions/uploadFile\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faArrowLeft, faCircleXmark} from '@fortawesome/free-solid-svg-icons';\nimport {removePdfExtension} from './NotesCard';\nimport Loading from '../loading';\nimport TagsInput from \"@/app/components/tagsInput\";\nimport {useToast} from \"@/components/ui/use-toast\";\nimport {useRouter} from \"next/navigation\";\n\nconst years = ['2020', '2021', '2022', '2023', '2024', '2025'];\n\nconst UploadFile = ({allTags, variant}: { allTags: string[], variant: \"Notes\" | \"Past Papers\" }) =\u003e {\n    const [fileTitles, setFileTitles] = useState\u003cstring[]\u003e([]);\n    const [year, setYear] = useState('');\n    const [slot, setSlot] = useState('');\n    const [selectedTags, setSelectedTags] = useState\u003cstring[]\u003e([]);\n    const [files, setFiles] = useState\u003cFile[]\u003e([]);\n    const [isDragging, setIsDragging] = useState(false);\n    const [error, setError] = useState(\"\");\n    const [pending, startTransition] = useTransition();\n\n    const {toast} = useToast();\n    const router = useRouter();\n\n    const handleSubmit = async (e: React.FormEvent) =\u003e {\n        e.preventDefault();\n        setError(\"\");\n\n        if (files.length === 0) {\n            setError(\"Please select at least one file to upload.\");\n            return;\n        }\n\n        startTransition(async () =\u003e {\n            try {\n                const formDatas = files.map((file, index) =\u003e {\n                    const formData = new FormData();\n                    formData.append(\"file\", file);\n                    formData.append(\"filetitle\", fileTitles[index]);\n                    return formData;\n                })\n                const promises = formDatas.map(async (formData) =\u003e {\n\n                    const response = await fetch(`${process.env.NEXT_PUBLIC_MICROSERVICE_URL}/process_pdf`, {\n                        method: \"POST\",\n                        body: formData,\n                    });\n\n                    if (!response.ok) {\n                        console.log(response);\n                        throw new Error(`Failed to upload file ${formData.get(\"fileTitle\")}`);\n                    }\n\n                    return await response.json();\n                });\n\n                const results = await Promise.all(promises) as {\n                    fileUrl: string,\n                    thumbnailUrl: string,\n                    filename: string,\n                    message: string\n                }[];\n\n                const response = await uploadFile({results, tags: selectedTags, year, slot, variant});\n                if (!response.success) {\n                    setError(\"Error uploading files: \" + response.error);\n                    return;\n                }\n\n                toast({title: \"Selected files uploaded successfully.\"})\n\n                router.push(`/past_papers`)\n\n                // todo delete the next 5 lines and uncomment the previous line\n                // setFiles([]);\n                // setSelectedTags([]);\n                // setYear('');\n                // setSlot('');\n                // setFileTitles([]);\n\n            } catch (error) {\n                console.error(\"Error uploading files:\", error);\n                setError(`Error uploading files: ${error instanceof Error ? error.message : 'Unknown error'}`);\n            }\n        });\n    };\n\n    const {getRootProps, getInputProps} = useDropzone({\n        onDrop: (acceptedFiles: File[]) =\u003e {\n            setFiles(f =\u003e [...f, ...acceptedFiles]);\n            setFileTitles(f =\u003e [...f, ...acceptedFiles.map(file =\u003e removePdfExtension(file.name))])\n            setIsDragging(false);\n        },\n        onDragEnter: () =\u003e setIsDragging(true),\n        onDragLeave: () =\u003e setIsDragging(false),\n        multiple: true,\n        accept: {\n            'application/pdf': ['.pdf'],\n        },\n    });\n\n    const handleTitleChange = useCallback((index: number, value: string) =\u003e {\n        setFileTitles(prevTitles =\u003e {\n            const newTitles = [...prevTitles];\n            newTitles[index] = value;\n            return newTitles;\n        });\n    }, []);\n\n    const handleRemoveFile = (index: number) =\u003e {\n        setFiles(f =\u003e f.filter((_, i) =\u003e i !== index));\n        setFileTitles(f =\u003e f.filter((_, i) =\u003e i !== index));\n    };\n\n    const TextField = useCallback(({value, onChange, index}: {\n        value: string,\n        onChange: (index: number, value: string) =\u003e void,\n        index: number\n    }) =\u003e {\n        return (\n            \u003cinput\n                type=\"text\"\n                className={`p-2 border-2 border-dashed dark:bg-[#0C1222] border-gray-300 w-full text-black dark:text-[#D5D5D5] text-lg font-bold`}\n                value={value}\n                onChange={(e) =\u003e onChange(index, e.target.value)}\n                required\n            /\u003e\n        );\n    }, []);\n    return (\n        \u003cdiv className=\"flex justify-center items-center min-h-screen\"\u003e\n            {pending \u0026\u0026 \u003cLoading/\u003e}\n            \u003cdiv\n                className=\"bg-white dark:bg-[#0C1222] p-6 shadow-lg w-full max-w-md border-dashed border-2 border-[#D5D5D5] text-black dark:text-[#D5D5D5] \"\u003e\n                \u003cdiv className=\"flex justify-between items-center mb-4\"\u003e\n                    \u003cLink href={'/notes'}\u003e\n                        \u003cbutton\n                            className=\"text-[#3BF3C7] px-2 py-2 border-2 border-[#3BF3C7] flex items-center justify-center font-bold hover:bg-[#ffffff]/10\"\u003e\n                            \u003cFontAwesomeIcon icon={faArrowLeft}/\u003e\n                        \u003c/button\u003e\n                    \u003c/Link\u003e\n                    \u003ch3\u003eNew {variant}\u003c/h3\u003e\n                    \u003cdiv className=\"relative group\"\u003e\n                        \u003cdiv className=\"absolute inset-0 bg-black dark:bg-[#3BF4C7]\"/\u003e\n                        \u003cdiv\n                            className=\"dark:absolute dark:inset-0 dark:blur-[75px] dark:lg:bg-none lg:dark:group-hover:bg-[#3BF4C7] transition dark:group-hover:duration-200 duration-1000\"/\u003e\n                        \u003cbutton type=\"submit\" onClick={handleSubmit} disabled={pending}\n                                className=\"dark:text-[#D5D5D5] dark:group-hover:text-[#3BF4C7] dark:group-hover:border-[#3BF4C7] dark:border-[#D5D5D5] dark:bg-[#0C1222] border-black border-2 relative px-4 py-2 text-lg bg-[#3BF4C7] text-black font-bold group-hover:-translate-x-1 group-hover:-translate-y-1 transition duration-150\"\u003e\n                            {pending ? \"Uploading...\" : \"Upload\"}\n                        \u003c/button\u003e\n                    \u003c/div\u003e\n\n                \u003c/div\u003e\n                \u003cform onSubmit={handleSubmit} className='w-full'\u003e\n                    \u003cdiv className=\"grid grid-cols-2 gap-4 mb-4 place-content-center\"\u003e\n                        \u003cdiv\u003e\n                            \u003cselect\n                                className=\"p-2 w-full bg-[#5FC4E7] dark:bg-[#008A90] cursor-pointer transition-colors duration-300 hover:bg-opacity-85\"\n                                value={year}\n                                onChange={(e) =\u003e setYear(e.target.value)}\n                                required\n                            \u003e\n                                \u003coption value=\"\"\u003eSelect Year\u003c/option\u003e\n                                {years.map((y) =\u003e (\n                                    \u003coption key={y} value={y}\u003e{y}\u003c/option\u003e\n                                ))}\n                            \u003c/select\u003e\n                        \u003c/div\u003e\n                        \u003cdiv\u003e\n                            \u003cselect\n                                className=\"p-2 w-full bg-[#5FC4E7] dark:bg-[#008A90] cursor-pointer transition-colors duration-300 hover:bg-opacity-85\"\n                                value={slot}\n                                onChange={(e) =\u003e setSlot(e.target.value)}\n                                required\n                            \u003e\n                                \u003coption value=\"\"\u003eSlot\u003c/option\u003e\n                                \u003coption value=\"A1\"\u003eA1\u003c/option\u003e\n                                \u003coption value=\"A2\"\u003eA2\u003c/option\u003e\n                                \u003coption value=\"B1\"\u003eB1\u003c/option\u003e\n                                \u003coption value=\"B2\"\u003eB2\u003c/option\u003e\n                                \u003coption value=\"C1\"\u003eC1\u003c/option\u003e\n                                \u003coption value=\"C2\"\u003eC2\u003c/option\u003e\n                                \u003coption value=\"D1\"\u003eD1\u003c/option\u003e\n                                \u003coption value=\"D2\"\u003eD2\u003c/option\u003e\n                                \u003coption value=\"E1\"\u003eE1\u003c/option\u003e\n                                \u003coption value=\"E2\"\u003eE2\u003c/option\u003e\n                                \u003coption value=\"F1\"\u003eF1\u003c/option\u003e\n                                \u003coption value=\"F2\"\u003eF2\u003c/option\u003e\n                                \u003coption value=\"G1\"\u003eG1\u003c/option\u003e\n                                \u003coption value=\"G2\"\u003eG2\u003c/option\u003e\n                            \u003c/select\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n\n                    \u003cTagsInput allTags={allTags} selectedTags={selectedTags} setSelectedTags={setSelectedTags}/\u003e\n\n                    \u003cdiv\n                        {...getRootProps()}\n                        className={`\n                            border-2 border-dashed\n                            ${isDragging ? 'border-blue-500 bg-blue-50' : 'border-gray-300'}\n                            transition-all duration-300 ease-in-out\n                            flex flex-col items-center justify-center\n                            p-4 sm:p-6 md:p-8\n                            h-32 sm:h-40 md:h-48\n                            mb-4 cursor-pointer\n                        `}\n                    \u003e\n                        \u003cinput {...getInputProps()} /\u003e\n                        \u003csvg\n                            className=\"w-8 h-8 sm:w-10 sm:h-10 md:w-12 md:h-12 text-gray-400 mb-2\"\n                            fill=\"none\"\n                            stroke=\"currentColor\"\n                            viewBox=\"0 0 24 24\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                        \u003e\n                            \u003cpath\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                                strokeWidth={2}\n                                d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\"\n                            /\u003e\n                        \u003c/svg\u003e\n                        \u003cp className=\"text-sm sm:text-base md:text-lg text-gray-500 text-center\"\u003e\n                            Drag \u0026 drop files here, or click here\n                        \u003c/p\u003e\n                        {files.length \u003e 0 \u0026\u0026 (\n                            \u003cp className=\"text-xs sm:text-sm md:text-base text-gray-500 mt-2\"\u003e\n                                {files.length} file(s) selected\n                            \u003c/p\u003e\n                        )}\n                    \u003c/div\u003e\n\n                    {files.length \u003e 0 \u0026\u0026 (\n                        \u003cdiv className=\"flex flex-col gap-2 w-[100%]\"\u003e\n                            {files.map((_, index) =\u003e (\n                                \u003cdiv key={index} className=\"text-gray-700 flex items-center text-xs w-full\"\u003e\n                                    {/* \u003cspan key={index} className=\"text-gray-700 flex gap-2 items-center text-xs\"\u003e */}\n                                    \u003cTextField\n                                        value={fileTitles[index]}\n                                        onChange={handleTitleChange}\n                                        index={index}/\u003e\n\n                                    \u003cbutton\n                                        type=\"button\"\n                                        className=\"ml-2 text-red-500\"\n                                        onClick={() =\u003e handleRemoveFile(index)}\n                                    \u003e\n                                        \u003cFontAwesomeIcon icon={faCircleXmark}/\u003e\n                                    \u003c/button\u003e\n                                    {/* \u003c/span\u003e */}\n                                \u003c/div\u003e\n                            ))}\n                        \u003c/div\u003e\n                    )}\n                    {error \u0026\u0026 (\n                        \u003cdiv className=\"mb-4 text-center\"\u003e\n                            \u003cspan className=\"text-red-500\"\u003e{error}\u003c/span\u003e\n                        \u003c/div\u003e\n                    )}\n                \u003c/form\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    );\n\n}\n\nexport default UploadFile;\n",
      "dependencies": [
        "next/link",
        "react-dropzone",
        "@fortawesome/react-fontawesome",
        "@fortawesome/free-solid-svg-icons",
        "@/app/components/tagsInput",
        "@/components/ui/use-toast",
        "next/navigation",
        "react"
      ]
    },
    {
      "id": 90,
      "name": "SearchBarFilter.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/components/filter/SearchBarFilter.tsx",
      "content": "\"use client\";\nimport React from 'react';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons/faSearch';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst SearchBarFilter: React.FC = () =\u003e {\n  return (\n    \u003cdiv className=\"flex items-center bg-white border-black border-2 shadow-md\"\u003e\n      \u003cFontAwesomeIcon icon={faSearch} color='grey' className='ml-4' /\u003e\n      \u003cinput\n        type=\"text\"\n        className=\"px-4 py-2  focus:outline-none\"\n        placeholder=\"Search\"\n\n\n      /\u003e\n\n    \u003c/div\u003e\n\n  );\n}\n\nexport default SearchBarFilter;\n",
      "dependencies": [
        "@fortawesome/react-fontawesome",
        "react",
        "@fortawesome/free-solid-svg-icons/faSearch"
      ]
    },
    {
      "id": 91,
      "name": "loading.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/@protected_routes/notes/[id]/loading.tsx",
      "content": "import Loading from \"../loading\";\n\nexport default Loading;\n"
    },
    {
      "id": 92,
      "name": "SyllabusCard.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/components/SyllabusCard.tsx",
      "content": "\"use client\";\nimport React from 'react';\nimport Link from 'next/link';\nimport { syllabi } from '@prisma/client';\nimport { useBookmarks } from './BookmarksProvider';\nimport { useToast } from \"@/components/ui/use-toast\";\n\ninterface SyllabusCardProps {\n    syllabus: syllabi;\n}\n\nfunction processSyllabusName(input: string): string {\n    return input\n        .slice(9)\n        .replace(/\\.pdf$/, '')\n        .replace(/_/g, ' ');\n}\n\nfunction SyllabusCard({ syllabus }: SyllabusCardProps) {\n    const { isBookmarked, toggleBookmark } = useBookmarks();\n    const isFav = isBookmarked(syllabus.id, 'subject');\n    const { toast } = useToast();\n\n    const handleToggleFav = () =\u003e {\n        toggleBookmark({\n            id: syllabus.id,\n            type: 'subject',\n            title: syllabus.name\n        }, !isFav).catch(() =\u003e toast({ title: \"Error! Could not add to favorites\", variant: \"destructive\" }));\n    };\n\n    const syllabusName = processSyllabusName(syllabus.name);\n    const courseCode = syllabus.name.split('_')[0];\n\n    return (\n        \u003cLink href={`/syllabus/${syllabus.id}`}\u003e\n            \u003cdiv\n                className=\"flex flex-col justify-start w-full h-full p-4 bg-[#5FC4E7] border-2 border-[#5FC4E7] dark:border-b-[#3BF4C7] dark:lg:border-b-[#ffffff]/20 dark:border-[#ffffff]/20 hover:border-b-2 hover:border-b-[#ffffff]  dark:hover:border-b-[#3BF4C7] dark:bg-[#ffffff]/10 dark:lg:bg-[#0C1222] dark:hover:bg-[#ffffff]/10 transition-all duration-200 transform hover:scale-105 hover:shadow-lg\"\u003e\n                \u003ch4\u003e{syllabusName}\u003c/h4\u003e\n                \u003ch6\u003e{courseCode}\u003c/h6\u003e\n            \u003c/div\u003e\n        \u003c/Link\u003e\n    );\n}\n\nexport default SyllabusCard;\n",
      "dependencies": [
        "react",
        "next/link",
        "@prisma/client",
        "@/components/ui/use-toast"
      ]
    },
    {
      "id": 93,
      "name": "TagContainer.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/components/forumpost/TagContainer.tsx",
      "content": "import type { Tag } from \"@prisma/client\";\n\nconst TagContainer = ({tags}:{tags:Tag[]|undefined}) =\u003e {\n    return \u003cdiv className=\"grid grid-cols-2 sm:grid-cols-4 md:flex md:gap-5 md:items-center\"\u003e\n        {tags?.map((tag) =\u003e {\n            return (\u003cdiv key={tag.id}\u003e\n                \u003cTag tagName={tag.name} /\u003e\n                \u003c/div\u003e\n            );\n        })}\n    \u003c/div\u003e\n}\n\nexport default TagContainer;\n\nconst Tag = ({ tagName }: { tagName: string }) =\u003e {\n    return \u003ctext className=\"bg-white dark:bg-[#3F4451] text-xs md:text-xs px-0.5 md:p-1\"\u003e#{tagName}\u003c/text\u003e;\n}\n",
      "dependencies": [
        "@prisma/client"
      ]
    },
    {
      "id": 94,
      "name": "landing.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/components/landing_page/landing.tsx",
      "content": "import React from \"react\";\nimport Image from \"next/image\";\nimport PastPaper from \"@/public/LandingPage/LandingPagePastPapers.svg\";\nimport Forum from \"@/public/LandingPage/LandingPageForum.svg\";\nimport Notes from \"@/public/LandingPage/LandingPageNotes.svg\";\nimport Resources from \"@/public/LandingPage/LandingPageResourceRepo.svg\";\nimport ArrowRight from \"@/public/LandingPage/ArrowRight.svg\";\nimport GradientHeart from \"@/public/LandingPage/GradientHeart.svg\";\nimport GradientACMLogo from \"@/public/assets/ACM logo.svg\";\nimport { SignIn } from \"../sign-in\";\nimport Link from \"next/link\";\nimport BookAndBoy from \"@/public/assets/bookandboy.svg\";\n\nexport function GradientText({ children }: { children: React.ReactNode }) {\n  return (\n    \u003cspan className=\"text-transparent bg-clip-text bg-gradient-to-tr to-[#27BAEC] from-[#253EE0]\"\u003e\n      {children}\n    \u003c/span\u003e\n  );\n}\n\nfunction WordBetweenLine({ children }: { children: React.ReactNode }) {\n  return (\n    \u003cdiv className=\"relative flex items-center justify-between\"\u003e\n      \u003cdiv className=\"flex-grow border-t border-black dark:border-[#D5D5D5]\"\u003e\u003c/div\u003e\n      \u003cspan className=\"text-center text-3xl md:text-6xl lg:text-8xl font-extrabold flex-shrink text-black dark:text-[#D5D5D5]\"\u003e\n        {children}\n      \u003c/span\u003e\n      \u003cdiv className=\"flex-grow border-t border-black dark:border-[#D5D5D5]\"\u003e\u003c/div\u003e\n    \u003c/div\u003e\n  );\n}\n\nfunction LandingPageCard({\n  title,\n  content,\n  imagePath,\n  altOfImage,\n}: {\n  title: string;\n  content: string;\n  imagePath: any;\n  altOfImage: string;\n}) {\n  return (\n    \u003cLink href={\"#sign-in\"} className=\"relative overflow-hidden group\"\u003e\n      \u003cdiv className=\"hidden lg:block absolute left-0 top-0 w-[150px] h-[150px] rounded-full bg-none transition duration-1000 group-hover:duration-200 group-hover:bg-[#3BF4C7]\"\u003e\u003c/div\u003e\n      \u003cdiv className=\"block lg:hidden absolute left-0 top-0 w-[100px] h-[100px] rounded-full bg-[#3BF4C7]\"\u003e\u003c/div\u003e\n      \u003cdiv className=\"hidden lg:block absolute right-0 bottom-0 w-[150px] h-[150px] rounded-full transition duration-1000 group-hover:duration-200 md:bg-none md:group-hover:bg-[#82BEE9]\"\u003e\u003c/div\u003e\n      \u003cdiv className=\"block lg:hidden absolute right-0 bottom-0 w-[100px] h-[100px] rounded-full bg-[#82BEE9]\"\u003e\u003c/div\u003e\n\n      \u003cdiv className=\"relative flex flex-col justify-between w-full h-full bg-[#5FC4E7]/20 dark:bg-[#7D7467]/20 backdrop-blur-[100px] border-[#5FC4E7]/20 dark:border-[#7D7467]/20 border p-1 md:p-4\"\u003e\n        \u003cdiv className=\"flex items-center w-full h-[150px] md:h-5/6 justify-between\"\u003e\n          \u003cImage\n            src={imagePath}\n            alt={altOfImage}\n            className=\"h-[75%] lg:h-[90%] dark:invert-[.835] dark:hue-rotate-180\"\n          /\u003e\n          \u003cdiv className=\"flex-col gap-5\"\u003e\n            \u003cspan className=\"text-xl md:text-4xl font-extrabold\"\u003e{title}\u003c/span\u003e\n            \u003cbr /\u003e\n            \u003cspan className=\"text-sm md:text-lg\"\u003e{content}\u003c/span\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv className=\"flex justify-between\"\u003e\n          \u003cdiv /\u003e\n          \u003cImage\n            src={ArrowRight}\n            alt=\"ArrowRight\"\n            className=\"md:h-[35px] h-[20px] dark:invert-[0.835]\"\n          /\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/Link\u003e\n  );\n}\n\nfunction LandingPageContent() {\n  return (\n    \u003cdiv className=\"bg-[#C2E6EC] dark:bg-[#0C1222]  transition-colors ease-in space-y-40 md:space-y-96 text-black dark:text-[#D5D5D5]\"\u003e\n      \u003cdiv className=\"flex flex-col md:flex-row justify-around items-center lg:items-start gap-0 lg:gap-4\"\u003e\n        \u003cdiv className=\"p-10 w-fit\"\u003e\n          \u003ch1 className=\"text-6xl md:text-7xl lg:text-9xl drop-shadow-[0px_2px_rgba(59,244,199,1)]\"\u003e\n            \u003cGradientText\u003eCramming\u003c/GradientText\u003e\n          \u003c/h1\u003e\n          \u003cbr /\u003e\n          \u003ch1 className=\"text-6xl md:text-7xl lg:text-9xl drop-shadow-[0px_2px_rgba(59,244,199,1)]\"\u003e\n            Made Easy\n          \u003c/h1\u003e\n          \u003cbr /\u003e\n          \u003cdiv\u003e\n            \u003ch4\u003e\n              Presenting ExamCooker, your \u003cbr /\u003e one-stop solution to Cram\n              before Exams\n            \u003c/h4\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cImage\n          src={BookAndBoy}\n          alt=\"Landing Page Image\"\n          className=\"h-[250px] lg:h-screen\"\n        /\u003e\n      \u003c/div\u003e\n      \u003cdiv className=\"lg:sticky lg:top-0 lg:h-screen space-y-5\"\u003e\n        \u003cWordBetweenLine\u003e\n          \u003cdiv className=\"drop-shadow-[0px_2px_rgba(59,244,199,1)]\"\u003e\n            For Crammers By Crammers\n          \u003c/div\u003e\n        \u003c/WordBetweenLine\u003e\n        \u003cdiv className=\"grid grid-cols-1 lg:grid-cols-2 gap-[5px] md:gap-5 mx-auto md:h-3/4 w-[90%] md:max-w-[75%]\"\u003e\n          \u003cLandingPageCard\n            title=\"Past Papers\"\n            content=\"Conquer Your Exam Anxieties using our plethora of past papers\"\n            imagePath={PastPaper}\n            altOfImage=\"PastPaper\"\n          /\u003e\n          \u003cLandingPageCard\n            title=\"Forum\"\n            content=\"Connect with fellow crammers and ignite discussions with our Forum\"\n            imagePath={Forum}\n            altOfImage=\"Forum\"\n          /\u003e\n          \u003cLandingPageCard\n            title=\"Notes\"\n            content=\"Access and Contribute to a vibrant collection of notes, created by students like you!\"\n            imagePath={Notes}\n            altOfImage=\"Notes\"\n          /\u003e\n          \u003cLandingPageCard\n            title=\"Resource Repo\"\n            content=\"Expand your learning horizon through curated links to top-notch articles and videos\"\n            imagePath={Resources}\n            altOfImage=\"ResourceRepo\"\n          /\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n\n      \u003cdiv className=\"lg:sticky lg:top-0 lg:h-screen lg:bg-[#8DCAE9] bg-none lg:dark:bg-[#0C1222]/20 backdrop-blur-[150px] content-center overflow-hidden\"\u003e\n        \u003cdiv className=\"hidden lg:block absolute top-0  right-0  w-[200px] h-[100px] rounded-full blur-[100px] bg-none transition duration-1000 bg-[#8DCAE9]\"\u003e\u003c/div\u003e\n        \u003cdiv className=\"hidden lg:block absolute bottom-0 left-0  w-[200px] h-[100px] rounded-full blur-[100px] bg-none transition duration-1000 bg-[#8DCAE9]\"\u003e\u003c/div\u003e\n        \u003cWordBetweenLine\u003e\n          \u003cdiv id=\"sign-in\" className=\"text-center\"\u003e\n            \u003cGradientText\u003e\n              Start Cooking Your\n              \u003cbr /\u003e Academic Success Today{\" \"}\n            \u003c/GradientText\u003e\n          \u003c/div\u003e\n        \u003c/WordBetweenLine\u003e\n        \u003cbr /\u003e\n        \u003cdiv className=\"grid gap-8 justify-center\"\u003e\n          \u003cSignIn displayText=\"Sign In\" /\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n\n      \u003cdiv className=\"lg:sticky lg:h-screen lg:top-0 lg:bg-[#C2E6EC] lg:dark:bg-[#0C1222] flex-col content-center\"\u003e\n        \u003cWordBetweenLine\u003e\n          \u003cdiv className=\"drop-shadow-[0px_2px_rgba(59,244,199,1)]\"\u003e\n            Why Examcooker?\n          \u003c/div\u003e\n        \u003c/WordBetweenLine\u003e\n        \u003cbr /\u003e\n        \u003ch4 className=\"px-1 md:px-16 text-center\"\u003e\n          Remember the days of desperately searching the web for past papers,\n          only to get lost in a maze of irrelevant links?\n          \u003cbr /\u003e\n          We do too! Thats why we built this website - a haven for students who\n          are tired of the exam prep struggle.\n          \u003cbr /\u003e\n          Here, everything you need to cram like a champion is under one roof.\n          \u003cbr /\u003e{\" \"}\n          \u003cGradientText\u003eLet\u0026apos;s conquer those exams together!\u003c/GradientText\u003e\n        \u003c/h4\u003e\n      \u003c/div\u003e\n\n      \u003cdiv className=\"lg:sticky lg:h-screen lg:top-0 lg:bg-[#8DCAE9] lg:dark:bg-[#0C1222]/20 backdrop-blur-[100px] flex-col content-center\"\u003e\n        \u003cWordBetweenLine\u003e\n          \u003cdiv className=\"flex items-center\"\u003e\n            \u003cspan className=\"drop-shadow-[0px_2px_rgba(59,244,199,1)]\"\u003e\n              Made With\n            \u003c/span\u003e\n            \u003cImage\n              src={GradientHeart}\n              alt=\"Gradient Heart\"\n              className=\"inline w-[55px] h-[55px] md:w-[150px] md:h-[150px]\"\n            /\u003e\n          \u003c/div\u003e\n        \u003c/WordBetweenLine\u003e\n        \u003cdiv className=\"flex align-middle justify-center\"\u003e\n          \u003cImage\n            src={GradientACMLogo}\n            alt=\"ACM logo\"\n            className=\"w-[250px] md:w-[750px] md:h-[353px]\"\n          /\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n  );\n}\n\nexport default LandingPageContent;\n",
      "dependencies": [
        "react",
        "next/image",
        "@/public/LandingPage/LandingPagePastPapers.svg",
        "@/public/LandingPage/LandingPageForum.svg",
        "@/public/LandingPage/LandingPageNotes.svg",
        "@/public/LandingPage/LandingPageResourceRepo.svg",
        "@/public/LandingPage/ArrowRight.svg",
        "next/link",
        "@/public/LandingPage/GradientHeart.svg",
        "@/public/assets/ACM logo.svg",
        "@/public/assets/bookandboy.svg"
      ]
    },
    {
      "id": 95,
      "name": "dialog.tsx",
      "category": "file",
      "path": "ExamCooker-2024/components/ui/dialog.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof DialogPrimitive.Overlay\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof DialogPrimitive.Overlay\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cDialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  /\u003e\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof DialogPrimitive.Content\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof DialogPrimitive.Content\u003e\n\u003e(({ className, children, ...props }, ref) =\u003e (\n  \u003cDialogPortal\u003e\n    \u003cDialogOverlay /\u003e\n    \u003cDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border border-zinc-200 bg-white p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg dark:border-zinc-800 dark:bg-zinc-950\",\n        className\n      )}\n      {...props}\n    \u003e\n      {children}\n      \u003cDialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-white transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-zinc-950 focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-zinc-100 data-[state=open]:text-zinc-500 dark:ring-offset-zinc-950 dark:focus:ring-zinc-300 dark:data-[state=open]:bg-zinc-800 dark:data-[state=open]:text-zinc-400\"\u003e\n        \u003cX className=\"h-4 w-4\" /\u003e\n        \u003cspan className=\"sr-only\"\u003eClose\u003c/span\u003e\n      \u003c/DialogPrimitive.Close\u003e\n    \u003c/DialogPrimitive.Content\u003e\n  \u003c/DialogPortal\u003e\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes\u003cHTMLDivElement\u003e) =\u003e (\n  \u003cdiv\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  /\u003e\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes\u003cHTMLDivElement\u003e) =\u003e (\n  \u003cdiv\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  /\u003e\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof DialogPrimitive.Title\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof DialogPrimitive.Title\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cDialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  /\u003e\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof DialogPrimitive.Description\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof DialogPrimitive.Description\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-zinc-500 dark:text-zinc-400\", className)}\n    {...props}\n  /\u003e\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n",
      "dependencies": [
        "react",
        "@radix-ui/react-dialog",
        "lucide-react",
        "@/lib/utils"
      ]
    },
    {
      "id": 96,
      "name": "utils.ts",
      "category": "file",
      "path": "ExamCooker-2024/lib/utils.ts",
      "content": "import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n",
      "dependencies": [
        "clsx",
        "tailwind-merge"
      ]
    },
    {
      "id": 97,
      "name": "display_username.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/@protected_routes/home/display_username.tsx",
      "content": "\"use client\";\nimport { useSession } from \"next-auth/react\";\n//smol easter eggss\nconst UserName: React.FC = () =\u003e {\n    const { data: session } = useSession();\n    let name:string | null | undefined = session?.user?.name;\n    if(name === \"Supratim Ghose 22BIT0040\"){\n        name = \"Snacc | পুতুল শিল্পী\";\n    } else if(name === \"Rohit Phaniram Sakamuri 23BDS0051\"){\n        name = \"Umm..guys, please pull\";\n    } else if(name === \"Alan J Bibins 23BCE0598\"){\n        name = \"Aloo\";\n    } else if(name === \"Manav Muthanna M 21BIT0151\") {\n        name = \"Malleswaram Kursi\";\n    } else if(name === \"Rohan Khatua 21BCE3982\") {\n        name = \"Lord Rohan\";\n    } else if(name === \"Anand Rajaram 21BCI0068\") {\n        name = \"Mighty Raja\";\n    } else if(name === \"Shambhavi Sinha 21BKT0078\") {\n        name = \"Sachiv Ji\";\n    } else if(name === \"Saharsh Bhansali 21BCI0028\") {\n        name = \"OCd\";\n    } else if(name === \"Hari R Kartha 21BCE0603 \") {\n        name = \"HR\";\n    } else if(name === \"Ritaank Gunjesh 21BCE0416\") {\n        name = \"Ice Spice\";\n    } else if(name === \"Manan Shah 22BCE0618\") {\n        name = \"On Duty\";\n    } else if(name === \"Eshita Chokhani 22BIT0693\") {\n        name = \"Chokidaar\";\n    } else if(name === \"Sarthak Gupta 21BIT0179\") {\n        name = \"Jensen Huang\";\n    } else if(name === \"Vidit Kothari 21BCE3610\") {\n        name = \"A Minor\";\n    } else if(name === \"Anshuman Gupta 21BIT0271\") {\n        name = \"Hulk without Chlorophyll\";\n    } else if(name === \"Devanshi Tripathi 21BEC0514\") {\n        name = \"Choti Kursi\";\n    } else if(name === \"Aryan Chaudhary 21BCE3768\") {\n        name = \"blank\";\n    } else if(name === \"Ojal Binoj Koshy 21BCE2641\") {\n        name = \"Content no content\"\n    } else if(name === \"Nitesh Kakkar 22BCE0667\") {\n        name = \"Notesh\"\n    } else if(name === \"Kairav Nitin Sheth 22BCI0024\") {\n        name = \"9 Ko ulta karo\"\n    } else if(name === \"Tanush Pratik Golwala 22BCE2653\") {\n        name = \"Tamaatar🍅\"\n    } else if(name === \"Sunny Gogoi 22BCE3246\") {\n        name = \"Violator\"\n    } else if(name === \"Shaurya Rawat 23BCE0615\") {\n        name = \"PDF File\"\n    } else if(name === \"Lakshmi Sarupa Venkadesh 23BCE0463\") {\n        name = \"mY cAMeRa dOeS nOT wOrK\";\n    } else if(name === \"Yash Raj Singh 22BCE3946\")  {\n        name = \"go easy, ex-Maalik\";\n    } else if(name === \"Yash Kumar Sinha 23BCB0148\") {\n        name = \"mom maker\";\n    } else if(name === \"Harshitaa Kashyap 22BCE3146\") {\n        name = \"Korean-Bihari\";\n    } else if(name === \"Aastik Narang 22BCE3152\") {\n        name = \"underage?!\";\n    } else if(name === \"Yasha Pacholee 22BCB0014\") {\n        name = \"Supreme Leader\";\n    } else if(name === \"Anisha Ashok Dhoot 23BDS0048\") {\n        name = \".env leak\";\n    } else if(name === \"Garv Jain 22BDS0188\") {\n        name = \"BT\";\n    } else if(name === \"Srija Puvvada 22BCE3851\") {\n        name = \"Grace Oil Money\";\n    } else if(name === \"Mahendra Sajjan Choudhary 23BCE0701\") {\n        name = \"Tharki\";\n    } else if(name === \"Nitin S 23BIT0388\") {\n        name = \"That's crazy brooo\";\n    } else if(name === \"Parth Goyal 23BCE0411\") {\n        name = \"Broad\";\n    } else {\n        name = name?.split(' ',1)[0]\n    }\n    return \u003c\u003e\n        {name}\n    \u003c/\u003e\n}\n\nexport default UserName;\n",
      "dependencies": [
        "next-auth/react"
      ]
    },
    {
      "id": 98,
      "name": "loading.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/@protected_routes/syllabus/[id]/loading.tsx",
      "content": "import Loading from \"@/app/loading\";\nexport default Loading;",
      "dependencies": [
        "@/app/loading"
      ]
    },
    {
      "id": 99,
      "name": "loading.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/@protected_routes/syllabus/loading.tsx",
      "content": "import Loading from \"../loading\";\n\nexport default Loading;\n"
    },
    {
      "id": 100,
      "name": "page.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/@unprotected_routes/page.tsx",
      "content": "import React from \"react\";\nimport LandingPageContent from \"@/app/components/landing_page/landing\";\nimport { auth } from \"@/app/auth\";\nimport { redirect } from \"next/navigation\";\nimport \"@/app/globals.css\";\nimport ThemeToggleSwitch from \"../components/common/ThemeToggle\";\nimport { SignIn } from \"../components/sign-in\";\n\nasync function Page() {\n    const session = await auth();\n    if (session \u0026\u0026 session.user) return redirect(\"/\");\n    return (\n        \u003cdiv className=\"min-h-screen flex flex-col\"\u003e\n            \u003cdiv className=\"transition-colors duration-200 ease-in flex flex-row-reverse items-center gap-6 py-4 px-6 border-b border-b-[#8DCAE9] dark:border-b-[#3BF4C7] overflow-hidden\"\u003e\n                \u003cSignIn displayText=\"Sign In\"/\u003e\n                \u003cThemeToggleSwitch /\u003e\n            \u003c/div\u003e\n            \u003cLandingPageContent /\u003e\n        \u003c/div\u003e\n    );\n}\n\nexport default Page;\n",
      "dependencies": [
        "@/app/auth",
        "next/navigation",
        "@/app/globals.css",
        "react",
        "@/app/components/landing_page/landing"
      ]
    },
    {
      "id": 101,
      "name": "CurateQuestions.ts",
      "category": "file",
      "path": "ExamCooker-2024/app/actions/CurateQuestions.ts",
      "content": "'use server'\n\n\nexport async function curateQuestions(title: string) {\n    \n}"
    },
    {
      "id": 102,
      "name": "Favourites.ts",
      "category": "file",
      "path": "ExamCooker-2024/app/actions/Favourites.ts",
      "content": "'use server'\n\nimport { PrismaClient } from '@prisma/client'\nimport { auth } from '../auth'\nimport { revalidateFavorites } from './revalidateFavourites'\n\nconst prisma = new PrismaClient()\nexport type Bookmark = {\n    id: string;\n    type: 'note' | 'pastpaper' | 'forumpost' | 'subject';\n    title: string;\n};\n\nexport async function toggleBookmarkAction(bookmark: Bookmark, favourite: boolean) {\n    const session = await auth();\n    if (!session?.user?.email) {\n        throw new Error('User not authenticated');\n    }\n\n    try {\n        const user = await prisma.user.findUnique({\n            where: { email: session.user.email },\n            include: {\n                bookmarkedNotes: true,\n                bookmarkedPastPapers: true,\n                bookmarkedForumPosts: true,\n                bookmarkedResources: true,\n            },\n        });\n\n        if (!user) throw new Error('User not found');\n\n        let bookmarkField: string;\n        switch (bookmark.type) {\n            case 'note':\n                bookmarkField = 'bookmarkedNotes';\n                break;\n            case 'pastpaper':\n                bookmarkField = 'bookmarkedPastPapers';\n                break;\n            case 'forumpost':\n                bookmarkField = 'bookmarkedForumPosts';\n                break;\n            case 'subject':\n                bookmarkField = 'bookmarkedResources';\n                break;\n            default:\n                throw new Error(`Invalid bookmark type: ${bookmark.type}`);\n        }\n\n        await prisma.user.update({\n            where: { email: session.user.email },\n            data: {\n                [bookmarkField]: {\n                    [favourite ? 'connect' : 'disconnect']: { id: bookmark.id },\n                },\n            },\n        });\n\n        await revalidateFavorites(bookmark.type);\n\n        return { success: true, isBookmarked: favourite };\n    } catch (error) {\n        console.error('Error toggling bookmark:', error);\n        return { success: false, error: 'Failed to toggle bookmark' };\n    }\n}\n",
      "dependencies": [
        "@prisma/client"
      ]
    },
    {
      "id": 103,
      "name": "uploadFile.ts",
      "category": "file",
      "path": "ExamCooker-2024/app/actions/uploadFile.ts",
      "content": "\"use server\";\n\nimport {PrismaClient} from \"@prisma/client\";\nimport {auth} from \"../auth\";\nimport {redirect} from \"next/navigation\";\nimport {revalidatePath} from \"next/cache\";\n\nconst prisma = new PrismaClient();\n\nasync function findOrCreateTag(name: string) {\n    let tag = await prisma.tag.findUnique({where: {name}});\n    if (!tag) {\n        tag = await prisma.tag.create({data: {name}});\n    }\n    return tag;\n}\n\n// async function preInsert({tags, year, slot, formDatas}: {\n//     tags: string[],\n//     year: string,\n//     slot: string,\n//     formDatas: FormData[],\n// }) {\n//     const session = await auth();\n//     if (!session || !session.user) {\n//         redirect(\"/landing\");\n//     }\n//     const user = await prisma.user.findUnique({\n//         where: {email: session.user.email!},\n//     });\n//\n//     if (!user) {\n//         throw new Error(\n//             `User with ID ${session?.user?.email} does not exist`\n//         );\n//     }\n//\n//     const allTags = await Promise.all(tags.map(findOrCreateTag));\n//\n//     if (year) {\n//         const yearTag = await findOrCreateTag(year);\n//         allTags.push(yearTag);\n//     }\n//\n//     if (slot) {\n//         const slotTag = await findOrCreateTag(slot);\n//         allTags.push(slotTag);\n//     }\n//     const promises = formDatas.map(async (formData) =\u003e {\n//\n//         const response = await fetch(`${process.env.NEXT_PUBLIC_MICROSERVICE_URL}/process_pdf`, {\n//             method: \"POST\",\n//             body: formData,\n//         });\n//\n//         if (!response.ok) {\n//             console.log(response);\n//             throw new Error(`Failed to upload file ${formData.get(\"fileTitle\")}`);\n//         }\n//\n//         return await response.json();\n//     });\n//\n//     const results = await Promise.all(promises) as {\n//         fileUrl: string,\n//         thumbnailUrl: string,\n//         filename: string,\n//         message: string\n//     }[];\n//\n//\n//     return {user, allTags, results};\n// }\n\nexport default async function uploadFile({results, tags, year, slot, variant}: {\n    results: {\n        fileUrl: string,\n        thumbnailUrl: string,\n        filename: string,\n        message: string\n    }[],\n    tags: string[],\n    year: string,\n    slot: string,\n    variant: \"Notes\" | \"Past Papers\"\n}) {\n\n    // const {allTags, user, results} = await preInsert({tags, year, slot, formDatas});\n    const session = await auth();\n    if (!session || !session.user) {\n        redirect(\"/landing\");\n    }\n    const user = await prisma.user.findUnique({\n        where: {email: session.user.email!},\n    });\n\n    if (!user) {\n        throw new Error(\n            `User with ID ${session?.user?.email} does not exist`\n        );\n    }\n\n    const allTags = await Promise.all(tags.map(findOrCreateTag));\n\n    if (year) {\n        const yearTag = await findOrCreateTag(year);\n        allTags.push(yearTag);\n    }\n\n    if (slot) {\n        const slotTag = await findOrCreateTag(slot);\n        allTags.push(slotTag);\n    }\n\n    const errors = results.filter(result =\u003e result.message !== \"processed successfully\");\n\n    if (errors.length \u003e 0) {\n        return {\n            success: false,\n            error: errors.map(error =\u003e error.message).join(\", \")\n        };\n    }\n\n    const promises = variant === \"Notes\" ? results.map(result =\u003e {\n        return prisma.note.create({\n            data: {\n                title: result.filename,\n                fileUrl: result.fileUrl,\n                thumbNailUrl: result.thumbnailUrl,\n                authorId: user.id,\n                tags: {\n                    connect: allTags.map((tag) =\u003e ({id: tag.id})),\n                },\n            },\n            include: {\n                tags: true,\n            },\n        });\n    }) : results.map(result =\u003e {\n        return prisma.pastPaper.create({\n            data: {\n                title: result.filename,\n                fileUrl: result.fileUrl,\n                thumbNailUrl: result.thumbnailUrl,\n                authorId: user.id,\n                tags: {\n                    connect: allTags.map((tag) =\u003e ({id: tag.id})),\n                },\n            },\n            include: {\n                tags: true,\n            },\n        });\n    });\n\n    const data = await Promise.all(promises);\n\n    await prisma.$disconnect();\n\n    revalidatePath('/notes');\n\n    return {success: true, data};\n}",
      "dependencies": [
        "@prisma/client",
        "next/navigation",
        "next/cache"
      ]
    },
    {
      "id": 104,
      "name": "NavBar.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/components/NavBar.tsx",
      "content": "\"use client\";\nimport React, { useEffect, useState } from \"react\";\nimport Link from \"next/link\";\nimport Image from \"next/image\";\nimport { usePathname } from \"next/navigation\";\nimport Loading from \"../loading\";\n\nconst Tooltip = ({\n  children,\n  content,\n}: {\n  children: React.ReactNode;\n  content: string;\n}) =\u003e {\n  return (\n    \u003cdiv className=\"group relative\"\u003e\n      {children}\n      \u003cdiv className=\"absolute left-full ml-2 top-1/2 -translate-y-1/2 px-3 py-2 bg-gradient-to-r from-[#5fc4e7] to-[#4db3d6] dark:from-[#3BF4C7] dark:to-[#2ad3a7] text-white dark:text-[#232530] rounded-md text-sm opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-300 ease-in-out z-50 whitespace-nowrap shadow-lg backdrop-blur-sm backdrop-filter max-w-xs break-words\"\u003e\n        \u003cspan className=\"font-medium\"\u003e{content}\u003c/span\u003e\n        \u003cdiv className=\"absolute w-0 h-0 border-t-[6px] border-b-[6px] border-r-[6px] border-transparent border-r-[#5fc4e7] dark:border-r-[#3BF4C7] -left-[6px] top-1/2 -translate-y-1/2 transform transition-transform duration-300 ease-in-out group-hover:scale-110\"\u003e\u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n  );\n};\n\nconst NavBar: React.FC\u003c{ isNavOn: boolean; toggleNavbar: () =\u003e void }\u003e = ({\n  isNavOn,\n  toggleNavbar,\n}) =\u003e {\n  const pathname = usePathname();\n  const [loading, setLoading] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  function RenderMenuItem({\n    svgSource,\n    alt,\n    disableAnim,\n  }: {\n    svgSource: string;\n    alt: string;\n    disableAnim: boolean;\n  }) {\n    return (\n      \u003cTooltip content={alt}\u003e\n        \u003cdiv\n          onClick={handleLinkClick}\n          className={`flex gap-2 m-2 group ${isNavOn ? \"block\" : \"hidden\"}`}\n        \u003e\n          \u003cImage\n            src={svgSource}\n            alt={alt}\n            width={24}\n            height={25}\n            className={`dark:invert-[.835] transition-all transform-gpu group-hover:scale-110 ${\n              !disableAnim\n                ? \"group-hover:-translate-y-1 group-hover:rotate-[-5deg]\"\n                : \"\"\n            }`}\n          /\u003e\n          \u003cp\n            className={`transition-all text-black font-extrabold ${\n              !disableAnim ? \"group-hover:-translate-y-1\" : \"\"\n            }  dark:text-[#D5D5D5] ${isExpanded ? \"block\" : \"hidden\"}`}\n          \u003e\n            {alt}\n          \u003c/p\u003e\n        \u003c/div\u003e\n      \u003c/Tooltip\u003e\n    );\n  }\n\n  useEffect(() =\u003e {\n    const timer = setTimeout(() =\u003e setLoading(false));\n    return () =\u003e clearTimeout(timer);\n  }, [pathname]);\n\n  useEffect(() =\u003e {\n    const handleClickOutside = (event: MouseEvent) =\u003e {\n      const nav = document.querySelector(\"nav\");\n      if (nav \u0026\u0026 !nav.contains(event.target as Node) \u0026\u0026 isNavOn) {\n        setIsExpanded(false);\n        toggleNavbar();\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n\n    return () =\u003e {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [isNavOn, toggleNavbar]);\n\n  const handleLinkClick = () =\u003e {\n    setLoading(true);\n    if (isNavOn) {\n      setIsExpanded(false);\n      toggleNavbar();\n    }\n  };\n\n  return (\n    \u003c\u003e\n      {loading \u0026\u0026 \u003cLoading /\u003e}\n      \u003cnav\n        className={`fixed top-0 left-0 z-50 flex flex-col justify-between items-center h-screen ${\n          isNavOn\n            ? \"bg-[#5fc4e7] dark:bg-[#232530] dark:border-[#3BF4C7] dark:border w-fit\"\n            : \"\"\n        } text-white p-1 transition-colors duration-300 ease-in-out`}\n      \u003e\n        {isNavOn \u0026\u0026 (\n          \u003cdiv className=\"mt-4\"\u003e\n            \u003cbutton\n              onClick={() =\u003e {\n                setIsExpanded(false);\n                toggleNavbar();\n              }}\n              className=\"opacity-100\"\n            \u003e\n              \u003cImage\n                src=\"/assets/HamburgerIcon.svg\"\n                alt=\"Close\"\n                width={30}\n                height={30}\n                className=\"dark:invert-[.835] transition-transform transform-gpu hover:scale-110 hover:-translate-y-1\"\n              /\u003e\n            \u003c/button\u003e\n          \u003c/div\u003e\n        )}\n\n        \u003cdiv className=\"flex flex-col items-center mt-8\"\u003e\n          \u003cLink\n            href=\"/\"\n            passHref\n            className={`${pathname == \"/\" ? \"bg-[#ffffff]/20\" : \"\"}`}\n          \u003e\n            \u003cRenderMenuItem\n              svgSource=\"/assets/Home.svg\"\n              alt=\"Home\"\n              disableAnim={pathname == \"/\"}\n            /\u003e\n          \u003c/Link\u003e\n          \u003cLink\n            href={\"/past_papers\"}\n            passHref\n            className={`${pathname == \"/past_papers\" ? \"bg-[#ffffff]/20\" : \"\"}`}\n          \u003e\n            \u003cRenderMenuItem\n              svgSource=\"/assets/PastPapersIcon.svg\"\n              alt=\"Papers\"\n              disableAnim={pathname == \"/past_papers\"}\n            /\u003e\n          \u003c/Link\u003e\n          \u003cLink\n            href={\"/notes\"}\n            passHref\n            className={`${pathname == \"/notes\" ? \"bg-[#ffffff]/20\" : \"\"}`}\n          \u003e\n            \u003cRenderMenuItem\n              svgSource=\"/assets/NotesIcon.svg\"\n              alt=\"Notes\"\n              disableAnim={pathname == \"/notes\"}\n            /\u003e\n          \u003c/Link\u003e\n          \u003cLink\n            href={\"/syllabus\"}\n            passHref\n            className={`${pathname == \"/syllabus\" ? \"bg-[#ffffff]/20\" : \"\"}`}\n          \u003e\n            \u003cRenderMenuItem\n              svgSource=\"/assets/SyllabusLogo.svg\"\n              alt=\"Syllabus\"\n              disableAnim={pathname == \"/syllabus\"}\n            /\u003e\n          \u003c/Link\u003e\n          \u003cLink\n            href={\"/forum\"}\n            passHref\n            className={`${pathname == \"/forum\" ? \"bg-[#ffffff]/20\" : \"\"}`}\n          \u003e\n            \u003cRenderMenuItem\n              svgSource=\"/assets/ForumIcon.svg\"\n              alt=\"Forum\"\n              disableAnim={pathname == \"/forum\"}\n            /\u003e\n          \u003c/Link\u003e\n          \u003cLink\n            href={\"/resources\"}\n            passHref\n            className={`${pathname == \"/resources\" ? \"bg-[#ffffff]/20\" : \"\"}`}\n          \u003e\n            \u003cRenderMenuItem\n              svgSource=\"/assets/BookIcon.svg\"\n              alt=\"Resources\"\n              disableAnim={pathname == \"/resources\"}\n            /\u003e\n          \u003c/Link\u003e\n          \u003cLink\n            href={\"/favourites\"}\n            passHref\n            className={`${pathname == \"/favourites\" ? \"bg-[#ffffff]/20\" : \"\"}`}\n          \u003e\n            \u003cRenderMenuItem\n              svgSource=\"/assets/NavFavouriteIcon.svg\"\n              alt=\"Favourites\"\n              disableAnim={pathname == \"/favourites\"}\n            /\u003e\n          \u003c/Link\u003e\n          \u003cLink\n            href={\"/quiz\"}\n            passHref\n            className={`${pathname == \"/quiz\" ? \"\" : \"\"}`}\n          \u003e\n            \u003cRenderMenuItem\n              svgSource=\"/assets/QuizIcon.svg\"\n              alt=\"Quiz\"\n              disableAnim={pathname == \"/quiz\"}\n            /\u003e\n          \u003c/Link\u003e\n        \u003c/div\u003e\n        \u003cdiv /\u003e\n      \u003c/nav\u003e\n    \u003c/\u003e\n  );\n};\n\nexport default NavBar;\n",
      "dependencies": [
        "/assets/NavFavouriteIcon.svg",
        "react",
        "next/link",
        "/assets/PastPapersIcon.svg",
        "/assets/ForumIcon.svg",
        "/assets/QuizIcon.svg",
        "next/image",
        "next/navigation",
        "/assets/HamburgerIcon.svg",
        "/assets/Home.svg",
        "/assets/NotesIcon.svg",
        "/assets/SyllabusLogo.svg",
        "/assets/BookIcon.svg"
      ]
    },
    {
      "id": 105,
      "name": "route.ts",
      "category": "file",
      "path": "ExamCooker-2024/app/api/auth/init/route.ts",
      "content": "import { NextRequest, NextResponse } from \"next/server\";\nimport {signIn} from \"@/app/auth\";\n\nexport async function GET(req: NextRequest, res: NextResponse) {\n    await signIn('google', {redirectTo: req.nextUrl.searchParams.get('redirect') || \"/\"});\n}",
      "dependencies": [
        "next/server",
        "@/app/auth"
      ]
    },
    {
      "id": 106,
      "name": "loading.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/@protected_routes/forum/loading.tsx",
      "content": "import Loading from \"../loading\";\n\nexport default Loading;\n"
    },
    {
      "id": 107,
      "name": "page.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/@protected_routes/quiz/[id]/page.tsx",
      "content": "'use client'\n\nimport React, { useState, useEffect } from 'react'\nimport { usePathname, useRouter } from 'next/navigation'\nimport { ChevronRight, Clock, Trophy, Target, ChevronDown, ChevronUp, ArrowLeft, RotateCcw } from 'lucide-react'\n\nimport { WildlifeJSON } from \"@/public/assets/quizJSON\"\nimport { ForestJSON } from \"@/public/assets/quizJSON\"\nimport { spokenenglishJSON } from \"@/public/assets/quizJSON\"\n\ninterface Question {\n    question: string\n    options: string[]\n    answer: string\n}\n\ninterface QuizQuestion extends Question {\n    selectedAnswer?: string\n    isMarked?: boolean\n    weekNumber: string\n    isExpanded?: boolean\n    originalIndex?: number  //tracks original index\n}\n\ninterface Week {\n    name: string\n    questions?: Question[]\n    content?: Question[]\n}\n\ninterface CourseData {\n    title: string\n    code: string\n    weeks: Week[]\n}\n\nconst getCourseData = (courseCode: string): CourseData =\u003e {\n    switch (courseCode) {\n        case \"102104073\":\n            return { ...WildlifeJSON, code: courseCode } as CourseData\n        case \"102104082\":\n            return { ...ForestJSON, code: courseCode } as CourseData\n        case \"109106067\":\n            return { ...spokenenglishJSON, code: courseCode } as CourseData\n        default:\n            return { ...WildlifeJSON, code: \"102104073\" } as CourseData\n    }\n}\n\nexport default function Component() {\n    const pathname = usePathname()\n    const router = useRouter()\n\n    const [questions, setQuestions] = useState\u003cQuizQuestion[]\u003e([])\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0)\n    const [timeRemaining, setTimeRemaining] = useState(0)\n    const [quizSubmitted, setQuizSubmitted] = useState(false)\n    const [score, setScore] = useState(0)\n    const [showWarning, setShowWarning] = useState(false)\n    const [showOnlyIncorrect, setShowOnlyIncorrect] = useState(false)\n    const [expandedQuestionIndex, setExpandedQuestionIndex] = useState\u003cnumber | null\u003e(null)\n    const [showError, setShowError] = useState(false)\n\n    useEffect(() =\u003e {\n        const params = new URLSearchParams(pathname.split(\"quiz/\")[1])\n        const weeks = params.get(\"weeks\")?.split(\"-\") || []\n        const numQuestions = parseInt(params.get(\"numQ\") || \"0\")\n        const time = params.get(\"time\") || \"000000\"\n        const courseCode = params.get(\"course\") || \"102104073\"\n\n        const hours = parseInt(time.slice(0, 2))\n        const minutes = parseInt(time.slice(2, 4))\n        const seconds = parseInt(time.slice(4, 6))\n        const totalSeconds = hours * 3600 + minutes * 60 + seconds\n        setTimeRemaining(totalSeconds)\n\n        const courseData = getCourseData(courseCode)\n\n        const allQuestions: QuizQuestion[] = weeks.flatMap((week) =\u003e {\n            const weekData = courseData.weeks.find((w) =\u003e w.name === week)\n\n            if (!weekData) {\n                console.warn(`Week ${week} not found in course data`)\n                return []\n            }\n\n            const questionsArray = weekData.questions || weekData.content || []\n\n            return questionsArray.map((q: Question, index) =\u003e ({\n                ...q,\n                weekNumber: week,\n                isExpanded: false,\n                originalIndex: index  // Store original index of q\n            }))\n        })\n\n        const shuffledQuestions = allQuestions.sort(() =\u003e Math.random() - 0.5)\n        const selectedQuestions = shuffledQuestions.slice(0, numQuestions).map((q, index) =\u003e ({\n            ...q,\n            originalIndex: index\n        }))\n        setQuestions(selectedQuestions)\n    }, [pathname])\n\n    useEffect(() =\u003e {\n        if (timeRemaining \u003e 0 \u0026\u0026 !quizSubmitted) {\n            const timer = setInterval(() =\u003e {\n                setTimeRemaining((prev) =\u003e {\n                    if (prev \u003c= 1) {\n                        submitQuiz()\n                        clearInterval(timer)\n                        return 0\n                    }\n\n                    if (prev === 30) {\n                        setShowWarning(true)\n                    }\n                    return prev - 1\n                })\n            }, 1000)\n\n            return () =\u003e clearInterval(timer)\n        }\n    }, [timeRemaining, quizSubmitted])\n\n    const formatTime = (totalSeconds: number) =\u003e {\n        const hours = Math.floor(totalSeconds / 3600)\n        const minutes = Math.floor((totalSeconds % 3600) / 60)\n        const seconds = totalSeconds % 60\n        return `${String(hours).padStart(2, \"0\")}:${String(minutes).padStart(2, \"0\")}:${String(seconds).padStart(2, \"0\")}`\n    }\n\n    const handleAnswerSelect = (answer: string) =\u003e {\n        setShowError(false)\n        const updatedQuestions = [...questions]\n        updatedQuestions[currentQuestionIndex].selectedAnswer = answer\n        setQuestions(updatedQuestions)\n    }\n\n    const isAnswerCorrect = (selected: string, correctAnswers: string | string[]) =\u003e {\n        const normalizedSelected = selected.trim().toLowerCase();\n        if (typeof correctAnswers === 'string') {\n            return normalizedSelected === correctAnswers.trim().toLowerCase();\n        }\n        if (Array.isArray(correctAnswers)) {\n            return correctAnswers.some(answer =\u003e normalizedSelected === answer.trim().toLowerCase());\n        }\n        return false;\n    }\n\n    const submitQuiz = () =\u003e {\n        const correctAnswersCount = questions.filter((q) =\u003e {\n            const selectedAnswer = (q.selectedAnswer || \"\").trim();\n            return isAnswerCorrect(selectedAnswer, q.answer);\n        }).length;\n        setScore(correctAnswersCount);\n        setQuizSubmitted(true);\n    }\n\n    const goToNextQuestion = () =\u003e {\n        const currentQuestion = questions[currentQuestionIndex]\n\n        if (!currentQuestion.selectedAnswer) {\n            setShowError(true)\n            return\n        }\n\n        setShowError(false)\n        if (currentQuestionIndex === questions.length - 1) {\n            submitQuiz()\n        } else {\n            setCurrentQuestionIndex(currentQuestionIndex + 1)\n        }\n    }\n\n    const toggleQuestionExpansion = (index: number) =\u003e {\n        if (quizSubmitted) {\n            setExpandedQuestionIndex(expandedQuestionIndex === index ? null : index)\n        }\n    }\n\n    const getScoreColor = (percentage: number) =\u003e {\n        if (percentage \u003e= 80) return \"text-green-400 dark:bg-green-800/20\"\n        if (percentage \u003e= 60) return \"text-yellow-400 dark:bg-yellow-800/20\"\n        return \"dark:bg-red-800/20 text-red-400\"\n    }\n\n    if (questions.length === 0) {\n        return (\n            \u003cdiv className=\"flex items-center justify-center min-h-screen\"\u003e\n                \u003cdiv className=\"animate-spin h-16 w-16 border-t-2 border-b-2 border-gray-900\"\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        )\n    }\n\n    if (quizSubmitted) {\n        const displayedQuestions = showOnlyIncorrect\n            ? questions.filter((q) =\u003e !isAnswerCorrect(q.selectedAnswer || \"\", q.answer))\n            : questions\n\n        const percentage = ((score / questions.length) * 100).toFixed(1)\n\n        return (\n            \u003cdiv className=\"lg:w-[75vw] md:w-[90vw] mx-auto px-4 py-8\"\u003e\n                \u003cdiv className=\"mb-8 bg-[#5FC4E7] dark:bg-[#ffffff]/20 shadow-lg overflow-hidden dark:border-2\"\u003e\n                    \u003cdiv className=\"text-center p-6\"\u003e\n                        \u003cdiv className=\"flex justify-center mb-4\"\u003e\n                            \u003cTrophy className=\"w-16 h-16 dark:text-[#D5D5D5]\" /\u003e\n                        \u003c/div\u003e\n                        \u003ch1 className=\"text-2xl font-bold dark:text-[#D5D5D5]\"\u003eQuiz Complete!\u003c/h1\u003e\n                        \u003cp className=\"text-lg mt-2 text-black dark:text-[#D5D5D5] font-semibold\"\u003e\n                            Here's how you performed\n                        \u003c/p\u003e\n                    \u003c/div\u003e\n                    \u003cdiv className=\"p-6\"\u003e\n                        \u003cdiv className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-center p-2\"\u003e\n                            \u003cdiv className={`text-4xl font-bold flex flex-col justify-center items-center p-4 ${getScoreColor(Number(percentage))}`}\u003e\n                                \u003cp className=\"text-md uppercase font-medium mb-1\"\u003eScore\u003c/p\u003e\n                                \u003cp className=\"text-3xl\"\u003e{score}/{questions.length}\u003c/p\u003e\n                            \u003c/div\u003e\n                            \u003cdiv className={`text-4xl font-bold flex flex-col justify-center items-center p-4 ${getScoreColor(Number(percentage))}`}\u003e\n                                \u003cp className=\"text-md uppercase font-medium mb-1\"\u003ePercentage\u003c/p\u003e\n                                \u003cp className=\"text-3xl font-bold\"\u003e{percentage}%\u003c/p\u003e\n                            \u003c/div\u003e\n                            \u003cdiv className={`text-4xl font-bold flex flex-col justify-center items-center p-4 ${getScoreColor(Number(percentage))}`}\u003e\n                                \u003cp className=\"text-md uppercase font-medium mb-1\"\u003eQuestions\u003c/p\u003e\n                                \u003cp className=\"text-3xl\"\u003e{questions.filter((q) =\u003e isAnswerCorrect(q.selectedAnswer || \"\", q.answer)).length} correct\u003c/p\u003e\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n\n                \u003cdiv className=\"mb-6 flex items-center justify-between\"\u003e\n                    \u003cdiv className=\"flex items-center space-x-2 bg-[#5FC4E7] dark:bg-[#ffffff]/20 p-3\"\u003e\n                        \u003cTarget size={20} /\u003e\n                        \u003clabel className=\"flex items-center space-x-2 cursor-pointer\"\u003e\n                            \u003cinput\n                                type=\"checkbox\"\n                                checked={showOnlyIncorrect}\n                                onChange={(e) =\u003e setShowOnlyIncorrect(e.target.checked)}\n                                className=\"form-checkbox h-5 w-5\"\n                            /\u003e\n                            \u003cspan className=\"text-base font-medium dark:text-[#D5D5D5]\"\u003e\n                                Show Incorrect Only\n                            \u003c/span\u003e\n                        \u003c/label\u003e\n                    \u003c/div\u003e\n                    \u003cspan className=\"text-md text-dark font-medium dark:text-[#D5D5D5] p-4 justify-end\"\u003e\n                        Showing {displayedQuestions.length} of {questions.length} questions\n                    \u003c/span\u003e\n                \u003c/div\u003e\n\n                \u003cdiv className=\"w-full grid sm:grid-cols-4 grid-cols-3 gap-4 mb-6\"\u003e\n                    {displayedQuestions.map((q, index) =\u003e (\n                        \u003cdiv\n                            key={index}\n                            className={`p-2 py-4 cursor-pointer transition-all duration-300 ${expandedQuestionIndex === index ? \"col-span-4\" : \"\"\n                                } ${isAnswerCorrect(q.selectedAnswer || \"\", q.answer)\n                                    ? \"bg-green-200 dark:bg-[#1a271a] text-[#037d00]\"\n                                    : \"bg-red-200 dark:bg-[#341a1a] font-semibold text-[#cb0909]\"\n                                }`}\n                            onClick={() =\u003e toggleQuestionExpansion(index)}\n                        \u003e\n                            \u003cdiv className=\"flex justify-between items-center\"\u003e\n                                \u003cdiv className=\"flex flex-col\"\u003e\n                                    \u003cp className=\"text-md text-black dark:text-[#D5D5D5]\"\u003eQuestion {(q.originalIndex || 0) + 1}\u003c/p\u003e\n                                    \u003cp className=\"text-sm text-black dark:text-[#D5D5D5] opacity-75\"\u003eWeek {q.weekNumber}\u003c/p\u003e\n                                \u003c/div\u003e\n                                {expandedQuestionIndex === index ? \u003cChevronUp size={20} /\u003e : \u003cChevronDown size={20} /\u003e}\n                            \u003c/div\u003e\n                            {expandedQuestionIndex === index \u0026\u0026 (\n                                \u003cdiv className=\"mt-2\"\u003e\n                                    \u003cp className=\"text-black dark:text-[#D5D5D5]\"\u003e{q.question}\u003c/p\u003e\n                                    \u003cp className=\"mt-2\"\u003e\n                                        Your answer:{\" \"}\n                                        \u003cspan className={isAnswerCorrect(q.selectedAnswer || \"\", q.answer) ? \"text-green-800 font-semibold\" : \"text-red-800 font-semibold\"}\u003e\n                                            {q.selectedAnswer || \"Not answered\"}\n                                        \u003c/span\u003e\n                                    \u003c/p\u003e\n                                    \u003cp className=\"mt-1 text-green-800 font-semibold\"\u003eCorrect answer: {q.answer}\u003c/p\u003e\n                                \u003c/div\u003e\n                            )}\n                        \u003c/div\u003e\n                    ))}\n                \u003c/div\u003e\n\n                \u003cdiv className=\"mt-8 flex flex-col gap-4 sm:flex-row items-center justify-between font-semibold dark:text-[#D5D5D5]\"\u003e\n                    \u003cdiv className='flex gap-4 justify-between sm:justify-start w-full sm:w-fit'\u003e\n                        \u003cbutton\n                            onClick={() =\u003e router.push(\"/quiz\")}\n                            className=\"flex items-center px-6 py-3 bg-[#5FC4E7] dark:bg-[#008A90] hover:opacity-90 transition-opacity\"\n                        \u003e\n                            \u003cArrowLeft size={20} className=\"mr-2\" /\u003e\n                            Try Another Quiz\n                        \u003c/button\u003e\n                        \u003cbutton\n                            className=\"flex items-center px-6 py-3 bg-[#5FC4E7] dark:bg-[#008A90] hover:opacity-90 transition-opacity\"\n                            onClick={() =\u003e  window.location.reload()}\n                        \u003e\n                            \u003cRotateCcw size={20} className='mr-2' /\u003e\n                            Retry Quiz\n                        \u003c/button\u003e\n                    \u003c/div\u003e\n                    \u003cbutton\n                        onClick={() =\u003e router.push(\"/\")}\n                        className=\"flex items-center justify-center w-full sm:w-fit px-6 py-3 bg-[#5FC4E7] dark:bg-[#008A90] hover:opacity-90 transition-opacity\"\n                    \u003e\n                        Return Home\n                        \u003cChevronRight size={20} className=\"ml-2\" /\u003e\n                    \u003c/button\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        )\n    }\n\n    const currentQuestion = questions[currentQuestionIndex]\n\n    return (\n        \u003cdiv className=\"mx-auto px-4 sm:px-6 lg:px-8 py-4 sm:py-6\"\u003e\n            \u003cdiv className=\"flex justify-between items-center mb-4 sm:mb-6\"\u003e\n                \u003cdiv className=\"flex items-center space-x-2\"\u003e\n                    \u003cClock\n                        className={`${timeRemaining \u003c= 30 ? \"text-red-500 animate-pulse\" : \"text-black dark:text-white\"\n                            }`}\n                    /\u003e\n                    \u003cspan\n                        className={`font-mono text-lg sm:text-xl ${timeRemaining \u003c= 30 ? \"text-red-500\" : \"text-black dark:text-white\"\n                            }`}\n                    \u003e\n                        {formatTime(timeRemaining)}\n                    \u003c/span\u003e\n                \u003c/div\u003e\n                \u003cdiv className=\"text-lg sm:text-md text-black dark:text-white\"\u003e\n                    Question {currentQuestionIndex + 1} of {questions.length}\n                \u003c/div\u003e\n            \u003c/div\u003e\n\n            {showWarning \u0026\u0026 (\n                \u003cdiv className=\"bg-red-50 border border-red-200 text-red-700 px-3 py-2 sm:px-4 sm:py-3 rounded-lg mb-4 text-sm sm:text-base\"\u003e\n                    30 seconds remaining! Please finish your quiz.\n                \u003c/div\u003e\n            )}\n\n            \u003cdiv className=\"flex flex-col items-center justify-center\"\u003e\n                \u003cdiv className=\"flex mb-4 bg-[#5FC4E7] dark:bg-[#008A90] text-black dark:text-[#D5D5D5] min-h-[10vh] w-[70vw] shadow-md\"\u003e\n                    \u003ch2 className=\"text-base sm:text-xl font-medium flex justify-center items-center p-3 sm:p-4 text-center shadow-sm\"\u003e\n                        {currentQuestionIndex + 1}. {currentQuestion.question}\n                    \u003c/h2\u003e\n                \u003c/div\u003e\n\n                \u003cdiv className=\"space-y-3 w-[60vw]\"\u003e\n                    {currentQuestion.options.map((option, index) =\u003e (\n                        \u003cbutton\n                            key={index}\n                            onClick={() =\u003e handleAnswerSelect(option)}\n                            className={`p-3 sm:p-4 text-left dark:border dark:border-[#D5D5D5] transition-colors w-full text-sm sm:text-base text-black dark:text-[#D5D5D5] ${currentQuestion.selectedAnswer === option\n                                ? \"bg-[#82BEE9] dark:bg-white/20 text-white shadow-lg\"\n                                : \"bg-[#5FC4E7] dark:bg-[#0C1222]\"\n                                }`}\n                        \u003e\n                            {option}\n                        \u003c/button\u003e\n                    ))}\n                \u003c/div\u003e\n\n                {showError \u0026\u0026 (\n                    \u003cdiv className=\"mt-4 p-3 bg-red-50 border border-red-200 text-red-600 rounded-lg text-sm w-[60vw] text-center\"\u003e\n                        Please select an answer before proceeding\n                    \u003c/div\u003e\n                )}\n            \u003c/div\u003e\n\n            \u003cdiv className=\"flex justify-end space-x-4 mt-4 sm:mt-6\"\u003e\n                \u003cbutton\n                    onClick={goToNextQuestion}\n                    className=\"dark:text-[#D5D5D5] px-4 sm:px-6 py-2 text-lg font-semibold bg-[#5FC4E7] dark:bg-[#008A90] hover:opacity-90 transition-opacity\"\n                \u003e\n                    {currentQuestionIndex === questions.length - 1 ? \"Submit\" : \"Next\"}\n                    \u003cChevronRight size={20} className=\"ml-2 inline\" /\u003e\n                \u003c/button\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    )\n}\n",
      "dependencies": [
        "react",
        "next/navigation",
        "lucide-react",
        "@/public/assets/quizJSON"
      ]
    },
    {
      "id": 108,
      "name": "page.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/@protected_routes/syllabus/[id]/page.tsx",
      "content": "import React from 'react';\nimport { PrismaClient } from '@prisma/client';\nimport PDFViewer from '@/app/components/pdfviewer';\nimport { auth } from '@/app/auth';\nimport { notFound } from \"next/navigation\";\nimport DeleteButton from '@/app/components/DeleteButton';\n\nconst prisma = new PrismaClient();\n\nasync function getSyllabus(id: string) {\n    return prisma.syllabi.findUnique({\n        where: { id }\n    });\n}\n\nfunction processSyllabusName(input: string): string {\n    return input\n      .slice(9) \n      .replace(/\\.pdf$/, '') \n      .replace(/_/g, ' '); \n  }\n\nasync function SyllabusViewerPage({ params }: { params: { id: string } }) {\n    const prisma = new PrismaClient();\n    let syllabus;\n    const session = await auth();\n    const userId = session?.user?.id;\n\n    try {\n        syllabus = await getSyllabus(params.id);\n\n        if (userId \u0026\u0026 syllabus?.id) {\n            await prisma.viewHistory.upsert({\n                where: {\n                    userId_syllabusId: { userId, syllabusId: syllabus.id}\n                },\n                update: {\n                    viewedAt: new Date(),\n                    count: {\n                        increment: 1,\n                    },\n                },\n                create: {\n                    userId,\n                    syllabusId: syllabus.id,\n                    viewedAt: new Date(),\n                    count: 1,\n                },\n            });\n        }\n    } catch (error) {\n        console.error('Error fetching syllabus:', error);\n        return (\n            \u003cdiv\u003e\n                \u003cdiv className=\"text-center p-8 dark:text-[#d5d5d5]\"\u003e\n                    Error loading syllabus. Please refresh, or try again later.\n                \u003c/div\u003e\n            \u003c/div\u003e\n        );\n    } finally {\n        await prisma.$disconnect();\n    }\n\n    if (!syllabus) {\n        return notFound();\n    }\n\n    //const postTime: string = syllabus.createdAt.toLocaleString(\"en-US\", { timeZone: \"Asia/Kolkata\" });\n\n    return (\n        \u003cdiv className=\"flex flex-col lg:flex-row h-screen text-black dark:text-[#D5D5D5]\"\u003e\n            \u003cdiv className=\"lg:w-1/2 flex flex-col overflow-hidden\"\u003e\n                \u003cdiv className=\"flex-grow overflow-y-auto p-4 sm:p-6 lg:p-8\"\u003e\n                    \u003cdiv className=\"max-w-2xl mx-auto\"\u003e\n                        \u003ch1 className=\"text-2xl sm:text-3xl lg:text-4xl font-bold mb-4 sm:mb-6\"\u003e{processSyllabusName(syllabus.name)}\u003c/h1\u003e\n                        \u003cdiv className=\"space-y-2 sm:space-y-3\"\u003e\n                            \u003cdiv className=\"flex gap-2 items-center\"\u003e\n                                {/* {syllabus.author?.id === userId \u0026\u0026\n                                    \u003cDeleteButton itemID={syllabus.id} activeTab='syllabi'/\u003e\n                                } */}\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"flex-1 lg:w-1/2 overflow-hidden lg:border-l lg:border-black dark:lg:border-[#D5D5D5] p-4\"\u003e\n                \u003cdiv className=\"h-full overflow-auto\"\u003e\n                    \u003cPDFViewer fileUrl={syllabus.fileUrl} /\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    );\n}\n\nexport default SyllabusViewerPage;",
      "dependencies": [
        "@prisma/client",
        "@/app/components/pdfviewer",
        "@/app/auth",
        "next/navigation",
        "@/app/components/DeleteButton",
        "react"
      ]
    },
    {
      "id": 109,
      "name": "forumVote.ts",
      "category": "file",
      "path": "ExamCooker-2024/app/actions/forumVote.ts",
      "content": "'use server'\n\nimport { PrismaClient } from '@prisma/client';\nimport { auth } from \"@/app/auth\";\n\nconst prisma = new PrismaClient()\n\nexport async function upvotePost(postId: string) {\n    const session = await auth();\n    const userId = session?.user?.id;\n    if (!userId) {\n        return\n    }\n    try {\n        const existingVote = await prisma.vote.findUnique({\n            where: {\n                userId_forumPostId: {\n                    userId,\n                    forumPostId: postId,\n                },\n            },\n        });\n\n        if (existingVote) {\n            if (existingVote.type === 'UPVOTE') {\n                await prisma.vote.delete({\n                    where: {\n                        id: existingVote.id,\n                    },\n                });\n                await prisma.forumPost.update({\n                    where: { id: postId },\n                    data: { upvoteCount: { decrement: 1 } },\n                });\n            } else {\n                // Change downvote to upvote\n                await prisma.vote.update({\n                    where: { id: existingVote.id },\n                    data: { type: 'UPVOTE' },\n                });\n                await prisma.forumPost.update({\n                    where: { id: postId },\n                    data: {\n                        upvoteCount: { increment: 1 },\n                        downvoteCount: { decrement: 1 },\n                    },\n                });\n            }\n        } else {\n            await prisma.vote.create({\n                data: {\n                    userId,\n                    forumPostId: postId,\n                    type: 'UPVOTE',\n                },\n            });\n            await prisma.forumPost.update({\n                where: { id: postId },\n                data: { upvoteCount: { increment: 1 } },\n            });\n        }\n\n        const updatedPost = await prisma.forumPost.findUnique({\n            where: { id: postId },\n            select: { upvoteCount: true },\n        });\n\n        return { success: true, upvoteCount: updatedPost?.upvoteCount };\n    } catch (error) {\n        console.error('Error upvoting post:', error);\n        return { success: false, error: 'Failed to upvote post' };\n    }\n}\n\n\n\nexport async function downvotePost(postId: string) {\n    try {\n        const session = await auth();\n        const userId = session?.user?.id;\n        if (!userId) {\n            return\n        }\n        const existingVote = await prisma.vote.findUnique({\n            where: {\n                userId_forumPostId: {\n                    userId,\n                    forumPostId: postId,\n                },\n            },\n        });\n\n        if (existingVote) {\n            if (existingVote.type === 'DOWNVOTE') {\n                await prisma.vote.delete({\n                    where: {\n                        id: existingVote.id,\n                    },\n                });\n                await prisma.forumPost.update({\n                    where: { id: postId },\n                    data: { downvoteCount: { decrement: 1 } },\n                });\n            } else {\n                await prisma.vote.update({\n                    where: { id: existingVote.id },\n                    data: { type: 'DOWNVOTE' },\n                });\n                await prisma.forumPost.update({\n                    where: { id: postId },\n                    data: {\n                        upvoteCount: { decrement: 1 },\n                        downvoteCount: { increment: 1 },\n                    },\n                });\n            }\n        } else {\n            // Add a new downvote\n            await prisma.vote.create({\n                data: {\n                    userId,\n                    forumPostId: postId,\n                    type: 'DOWNVOTE',\n                },\n            });\n            await prisma.forumPost.update({\n                where: { id: postId },\n                data: { downvoteCount: { increment: 1 } },\n            });\n        }\n\n        const updatedPost = await prisma.forumPost.findUnique({\n            where: { id: postId },\n            select: { downvoteCount: true },\n        });\n\n        return { success: true, downvoteCount: updatedPost?.downvoteCount };\n    } catch (error) {\n        console.error('Error downvoting post:', error);\n        return { success: false, error: 'Failed to downvote post' };\n    }\n\n}",
      "dependencies": [
        "@prisma/client",
        "@/app/auth"
      ]
    },
    {
      "id": 110,
      "name": "ThemeToggle.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/components/common/ThemeToggle.tsx",
      "content": "\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport Image from \"next/image\";\n\nfunction ThemeToggleSwitch() {\n    const [mounted, setMounted] = useState(false);\n    const [darkMode, setDarkMode] = useState(true)\n\n    useEffect(() =\u003e {\n        const theme = localStorage.getItem('theme');\n        const isDarkMode = theme === 'dark' || (theme === null \u0026\u0026 window.matchMedia('(prefers-color-scheme: dark)').matches);\n        setDarkMode(isDarkMode);\n        if (isDarkMode) {\n            document.documentElement.classList.add('dark');\n        } else {\n            document.documentElement.classList.remove('dark');\n        }\n        setMounted(true);\n    }, []);\n\n    useEffect(() =\u003e {\n        if (mounted) {\n            if (darkMode) {\n                document.documentElement.classList.add('dark');\n                localStorage.setItem('theme', 'dark');\n            } else {\n                document.documentElement.classList.remove('dark');\n                localStorage.setItem('theme', 'light');\n            }\n        }\n    }, [darkMode, mounted]);\n\n    const toggleTheme = () =\u003e setDarkMode(!darkMode);\n\n    if (!mounted) {\n        return null;\n    }\n\n    return (\n        \u003cdiv onClick={toggleTheme} className=\"relative overflow-hidden flex items-center justify-center w-10 h-6 dark:bg-[#121B31] border-[1px] border-[#2699E9] dark:border-[#D5D5D5] rounded-full hover:border-1 hover:border-[#3BF4C7] dark:hover:border-[#3BF4C7] transition-all ease-linear  duration-150 cursor-pointer\"\u003e\n            \u003cdiv className=\"flex justify-center items-center bg-[#D0E9ED] dark:bg-[#0C1120] shadow-md w-4 h-4 rounded-full -translate-x-2 dark:translate-x-2 transition-transform ease-in-out\"\u003e\n                \u003cImage src={\"/assets/LucideSun.svg\"} alt=\"Sun\" width={25} height={25} className={`${darkMode ? \"hidden\" : \"\"}`} /\u003e\n                \u003cImage src={\"/assets/LucideMoon.svg\"} alt=\"Moon\" width={25} height={25} className={`invert-[.835] ${!darkMode ? \"hidden\" : \"\"}`} /\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    )}\n\nexport default ThemeToggleSwitch;",
      "dependencies": [
        "/assets/LucideMoon.svg",
        "react",
        "next/image",
        "/assets/LucideSun.svg"
      ]
    },
    {
      "id": 111,
      "name": "create-forum.tsx",
      "category": "file",
      "path": "ExamCooker-2024/app/components/create-forum.tsx",
      "content": "\"use client\";\n\nimport React, {\n    useState,\n    useEffect,\n    useRef,\n    useMemo,\n    useTransition,\n} from \"react\";\nimport Link from \"next/link\";\nimport { createForumPost } from \"../actions/CreateForumPost\";\nimport { useRouter } from \"next/navigation\";\nimport Fuse from \"fuse.js\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft, faSquareXmark } from \"@fortawesome/free-solid-svg-icons\";\nimport { useToast } from \"@/components/ui/use-toast\";\nimport Loading from \"@/app/@protected_routes/loading\";\n\nconst years = [\"2020\", \"2021\", \"2022\", \"2023\", \"2024\"];\nconst slots = [\n    \"A1\",\n    \"A2\",\n    \"B1\",\n    \"B2\",\n    \"C1\",\n    \"C2\",\n    \"D1\",\n    \"D2\",\n    \"E1\",\n    \"E2\",\n    \"F1\",\n    \"F2\",\n    \"G1\",\n    \"G2\",\n];\n\nconst filterYearAndSlot = (tags: string[]) =\u003e {\n    const yearRegex = /^(2\\d{3}|3000)$/;\n    return tags.filter((tag) =\u003e !yearRegex.test(tag) \u0026\u0026 !slots.includes(tag));\n};\n\nconst CreateForum = ({ allTags }: { allTags: string[] }) =\u003e {\n    const [title, setTitle] = useState(\"\");\n    const [year, setYear] = useState(\"\");\n    const [slot, setSlot] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [selectedTags, setSelectedTags] = useState\u003cstring[]\u003e([]);\n    const [filteredTags, setFilteredTags] = useState\u003cstring[]\u003e([]);\n    const [showDropdown, setShowDropdown] = useState(false);\n    const { toast } = useToast();\n    const forumId = \"cly4bhnc0000df02z5tshuhx7\";\n    const [pending, startTransition] = useTransition();\n    const [tagInput, setTagInput] = useState(\"\");\n\n    const router = useRouter();\n    const dropdownRef = useRef\u003cHTMLDivElement\u003e(null);\n\n    const availableTags = useMemo(() =\u003e {\n        return filterYearAndSlot(allTags);\n    }, [allTags]);\n\n    const fuse = useMemo(\n        () =\u003e\n            new Fuse(availableTags, {\n                threshold: 0.6,\n                minMatchCharLength: 2,\n            }),\n        [availableTags]\n    );\n\n    useEffect(() =\u003e {\n        setShowDropdown(false);\n        if (tagInput) {\n            const results = fuse.search(tagInput);\n            setFilteredTags(results.map((result) =\u003e result.item));\n        } else {\n            setFilteredTags(availableTags);\n        }\n    }, [fuse, tagInput]);\n\n    const handleTagInputChange = (e: React.ChangeEvent\u003cHTMLInputElement\u003e) =\u003e {\n        setTagInput(e.target.value);\n    };\n\n    const handleSubmit = async (e: React.FormEvent) =\u003e {\n        e.preventDefault();\n        startTransition(async () =\u003e {\n            const result = await createForumPost({\n                title,\n                forumId,\n                description,\n                year,\n                slot,\n                selectedTags,\n            });\n            if (result.success) {\n                toast({\n                    title: `Successfully posted: \"${result.data?.title}\"`,\n                });\n                router.push(\"/forum\");\n            } else {\n                toast({\n                    title: \"Error: Could not post.\",\n                    variant: \"destructive\",\n                });\n                console.error(\"Error: \", result.error);\n            }\n        });\n    };\n\n    const handleTagSelect = (tag: string) =\u003e {\n        if (!selectedTags.includes(tag)) {\n            setSelectedTags([...selectedTags, tag]);\n        }\n        setTagInput(\"\");\n        setShowDropdown(false);\n    };\n\n    const handleKeyDown = (e: React.KeyboardEvent) =\u003e {\n        if (e.key === \"Enter\") {\n            e.preventDefault();\n            if (!filteredTags.length) return;\n            handleTagSelect(filteredTags[0]);\n        }\n    };\n\n    const handleRemoveTag = (tag: string) =\u003e {\n        setSelectedTags(selectedTags.filter((t) =\u003e t !== tag));\n    };\n\n    useEffect(() =\u003e {\n        const handleClickOutside = (event: MouseEvent) =\u003e {\n            if (\n                dropdownRef.current \u0026\u0026\n                !dropdownRef.current.contains(event.target as Node)\n            ) {\n                setShowDropdown(false);\n            }\n        };\n\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () =\u003e {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, []);\n\n    return (\n        \u003cdiv className=\"flex justify-center items-center min-h-screen text-black dark:text-[#D5D5D5]\"\u003e\n            {pending \u0026\u0026 \u003cLoading /\u003e}\n            \u003cdiv className=\"bg-white dark:bg-[#0C1222] p-6 shadow-lg w-full max-w-md border-dashed border-2 border-[#D5D5D5]\"\u003e\n                \u003cdiv className=\"flex justify-between items-center mb-4\"\u003e\n                    \u003cLink href={\"/forum\"}\u003e\n                        \u003cbutton className=\"text-[#3BF3C7] px-2 py-2 border-2 border-[#3BF3C7] flex items-center justify-center font-bold hover:bg-[#ffffff]/10\"\u003e\n                            \u003cFontAwesomeIcon icon={faArrowLeft} /\u003e\n                        \u003c/button\u003e\n                    \u003c/Link\u003e\n                    \u003ch3\u003eNew Post\u003c/h3\u003e\n                    \u003cdiv className=\"relative group\"\u003e\n                        \u003cdiv className=\"absolute inset-0 bg-black dark:bg-[#3BF4C7]\" /\u003e\n                        \u003cdiv className=\"dark:absolute dark:inset-0 dark:blur-[75px] dark:lg:bg-none lg:dark:group-hover:bg-[#3BF4C7] transition dark:group-hover:duration-200 duration-1000\" /\u003e\n                        \u003cbutton\n                            type=\"submit\"\n                            onClick={handleSubmit}\n                            className=\"dark:text-[#D5D5D5] dark:group-hover:text-[#3BF4C7] dark:group-hover:border-[#3BF4C7] dark:border-[#D5D5D5] dark:bg-[#0C1222] border-black border-2 relative px-4 py-2 text-lg bg-[#3BF4C7] text-black font-bold group-hover:-translate-x-1 group-hover:-translate-y-1 transition duration-150\"\n                        \u003e\n                            Post\n                        \u003c/button\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n                \u003cform onSubmit={handleSubmit} className=\"w-full\"\u003e\n                    \u003cdiv className=\"mb-4\"\u003e\n                        \u003cinput\n                            type=\"text\"\n                            placeholder=\"Title\"\n                            className={`p-2 border-2 border-dashed dark:bg-[#0C1222] border-gray-300 w-full text-black dark:text-[#D5D5D5] text-lg font-bold`}\n                            value={title}\n                            onChange={(e) =\u003e setTitle(e.target.value)}\n                            required\n                        /\u003e\n                    \u003c/div\u003e\n                    \u003cdiv className=\"grid grid-cols-2 gap-4 mb-4 place-content-center\"\u003e\n                        \u003cdiv\u003e\n                            \u003cselect\n                                className=\"p-2 w-full bg-[#5FC4E7] dark:bg-[#008A90] cursor-pointer transition-colors duration-300 hover:bg-opacity-85\"\n                                value={year}\n                                onChange={(e) =\u003e setYear(e.target.value)}\n                                required\n                            \u003e\n                                \u003coption value=\"\"\u003eYear\u003c/option\u003e\n                                {years.map((y) =\u003e (\n                                    \u003coption key={y} value={y}\u003e\n                                        {y}\n                                    \u003c/option\u003e\n                                ))}\n                            \u003c/select\u003e\n                        \u003c/div\u003e\n                        \u003cdiv\u003e\n                            \u003cselect\n                                className=\"p-2 w-full bg-[#5FC4E7] dark:bg-[#008A90] cursor-pointer transition-colors duration-300 hover:bg-opacity-85\"\n                                value={slot}\n                                onChange={(e) =\u003e setSlot(e.target.value)}\n                                required\n                            \u003e\n                                \u003coption value=\"\"\u003eSlot\u003c/option\u003e\n                                {slots.map((s) =\u003e (\n                                    \u003coption key={s} value={s}\u003e\n                                        {s}\n                                    \u003c/option\u003e\n                                ))}\n                            \u003c/select\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                    \u003cdiv className=\"mb-4\"\u003e\n                        \u003ctextarea\n                            placeholder=\"Thread Description\"\n                            className={`p-2 border-2 border-dashed border-gray-300 bg-white dark:bg-[#0C1222] w-full text-sm min-h-[150px]`}\n                            value={description}\n                            onChange={(e) =\u003e setDescription(e.target.value)}\n                            required\n                        /\u003e\n                    \u003c/div\u003e\n                    \u003cdiv className=\"mb-4\"\u003e\n                        \u003cdiv className=\"flex items-center mb-2 flex-wrap\"\u003e\n                            {selectedTags.map((tag) =\u003e (\n                                \u003cspan\n                                    key={tag}\n                                    className=\"inline-block bg-white dark:bg-[#3F4451] px-3 py-1 text-xs font-semibold mr-2 mb-2\"\n                                \u003e\n                                    #{tag}\n                                    \u003cbutton\n                                        type=\"button\"\n                                        onClick={() =\u003e handleRemoveTag(tag)}\n                                        className=\"ml-2 text-red-500\"\n                                    \u003e\n                                        \u003cFontAwesomeIcon icon={faSquareXmark} /\u003e\n                                    \u003c/button\u003e\n                                \u003c/span\u003e\n                            ))}\n                            \u003cdiv className=\"relative w-full\"\u003e\n                                \u003cinput\n                                    type=\"text\"\n                                    placeholder=\"Add tag\"\n                                    className={`p-2 border-2 border-dashed border-gray-300 w-full dark:bg-[#0C1222] text-lg font-bold`}\n                                    value={tagInput}\n                                    onChange={handleTagInputChange}\n                                    onKeyDown={handleKeyDown}\n                                    onFocus={() =\u003e setShowDropdown(true)}\n                                /\u003e\n                                {showDropdown \u0026\u0026 (\n                                    \u003cdiv\n                                        ref={dropdownRef}\n                                        className=\"absolute z-10 mt-1 w-full bg-white dark:bg-[#232530] shadow-lg max-h-60 py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\"\n                                    \u003e\n                                        {filteredTags.map((tag) =\u003e (\n                                            \u003cdiv\n                                                key={tag}\n                                                className=\"cursor-pointer select-none relative py-2 pl-3 pr-9 hover:bg-[#ffffff]/10\"\n                                                onClick={() =\u003e\n                                                    handleTagSelect(tag)\n                                                }\n                                            \u003e\n                                                {tag}\n                                            \u003c/div\u003e\n                                        ))}\n                                    \u003c/div\u003e\n                                )}\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                \u003c/form\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    );\n};\n\nexport default CreateForum;\n",
      "dependencies": [
        "@/components/ui/use-toast",
        "@/app/@protected_routes/loading",
        "next/link",
        "next/navigation",
        "fuse.js",
        "@fortawesome/react-fontawesome",
        "@fortawesome/free-solid-svg-icons"
      ]
    },
    {
      "id": 112,
      "name": "/assets/Todo.svg",
      "category": "dependency"
    },
    {
      "id": 113,
      "name": "react",
      "category": "library"
    },
    {
      "id": 114,
      "name": "lucide-react",
      "category": "library"
    },
    {
      "id": 115,
      "name": "@fortawesome/react-fontawesome",
      "category": "library"
    },
    {
      "id": 116,
      "name": "@fortawesome/free-solid-svg-icons",
      "category": "library"
    },
    {
      "id": 117,
      "name": "/comment/ThumbsUpIcon.svg",
      "category": "dependency"
    },
    {
      "id": 118,
      "name": "/comment/ThumbsDownIcon.svg",
      "category": "dependency"
    },
    {
      "id": 119,
      "name": "next/navigation",
      "category": "dependency"
    },
    {
      "id": 120,
      "name": "@/app/actions/forumVote",
      "category": "dependency"
    },
    {
      "id": 121,
      "name": "@prisma/client",
      "category": "library"
    },
    {
      "id": 122,
      "name": "@/app/globals.css",
      "category": "dependency"
    },
    {
      "id": 123,
      "name": "next/font/google",
      "category": "dependency"
    },
    {
      "id": 124,
      "name": "@/components/ui/toaster",
      "category": "dependency"
    },
    {
      "id": 125,
      "name": "@/app/auth",
      "category": "dependency"
    },
    {
      "id": 126,
      "name": "@/components/ui/SocialMediaToast",
      "category": "dependency"
    },
    {
      "id": 127,
      "name": "@/app/components/forumpost/TagContainer",
      "category": "dependency"
    },
    {
      "id": 128,
      "name": "@/app/components/forumpost/CommentContainer",
      "category": "dependency"
    },
    {
      "id": 129,
      "name": "@/app/components/common/Buttons",
      "category": "dependency"
    },
    {
      "id": 130,
      "name": "@/components/ui/use-toast",
      "category": "dependency"
    },
    {
      "id": 131,
      "name": "next/link",
      "category": "dependency"
    },
    {
      "id": 132,
      "name": "@/app/components/header",
      "category": "dependency"
    },
    {
      "id": 133,
      "name": "next/image",
      "category": "dependency"
    },
    {
      "id": 134,
      "name": "@/app/@protected_routes/home/home_footer",
      "category": "dependency"
    },
    {
      "id": 135,
      "name": "/assets/HamburgerIcon.svg",
      "category": "dependency"
    },
    {
      "id": 136,
      "name": "@/app/components/NavBar",
      "category": "dependency"
    },
    {
      "id": 137,
      "name": "@/app/components/BookmarksProvider",
      "category": "dependency"
    },
    {
      "id": 138,
      "name": "next-auth/react",
      "category": "dependency"
    },
    {
      "id": 139,
      "name": "fuse.js",
      "category": "library"
    },
    {
      "id": 140,
      "name": "next/cache",
      "category": "dependency"
    },
    {
      "id": 141,
      "name": "next-auth",
      "category": "library"
    },
    {
      "id": 142,
      "name": "next-auth/providers/google",
      "category": "dependency"
    },
    {
      "id": 143,
      "name": "@auth/prisma-adapter",
      "category": "library"
    },
    {
      "id": 144,
      "name": "https://topperworld.in/media/2022/11/c-sc.png",
      "category": "dependency"
    },
    {
      "id": 145,
      "name": "lodash/debounce",
      "category": "dependency"
    },
    {
      "id": 146,
      "name": "@/app/components/assets/seacrh.svg",
      "category": "dependency"
    },
    {
      "id": 147,
      "name": "@/app/components/UploadFile",
      "category": "dependency"
    },
    {
      "id": 148,
      "name": "/public/FavouriteIcon.svg",
      "category": "dependency"
    },
    {
      "id": 149,
      "name": "react-dropzone",
      "category": "library"
    },
    {
      "id": 150,
      "name": "@/app/components/tagsInput",
      "category": "dependency"
    },
    {
      "id": 151,
      "name": "@fortawesome/free-solid-svg-icons/faSearch",
      "category": "dependency"
    },
    {
      "id": 152,
      "name": "@/public/LandingPage/LandingPagePastPapers.svg",
      "category": "dependency"
    },
    {
      "id": 153,
      "name": "@/public/LandingPage/LandingPageForum.svg",
      "category": "dependency"
    },
    {
      "id": 154,
      "name": "@/public/LandingPage/LandingPageNotes.svg",
      "category": "dependency"
    },
    {
      "id": 155,
      "name": "@/public/LandingPage/LandingPageResourceRepo.svg",
      "category": "dependency"
    },
    {
      "id": 156,
      "name": "@/public/LandingPage/ArrowRight.svg",
      "category": "dependency"
    },
    {
      "id": 157,
      "name": "@/public/LandingPage/GradientHeart.svg",
      "category": "dependency"
    },
    {
      "id": 158,
      "name": "@/public/assets/ACM logo.svg",
      "category": "dependency"
    },
    {
      "id": 159,
      "name": "@/public/assets/bookandboy.svg",
      "category": "dependency"
    },
    {
      "id": 160,
      "name": "@radix-ui/react-dialog",
      "category": "library"
    },
    {
      "id": 161,
      "name": "@/lib/utils",
      "category": "dependency"
    },
    {
      "id": 162,
      "name": "clsx",
      "category": "library"
    },
    {
      "id": 163,
      "name": "tailwind-merge",
      "category": "library"
    },
    {
      "id": 164,
      "name": "@/app/loading",
      "category": "dependency"
    },
    {
      "id": 165,
      "name": "@/app/components/landing_page/landing",
      "category": "dependency"
    },
    {
      "id": 166,
      "name": "/assets/NavFavouriteIcon.svg",
      "category": "dependency"
    },
    {
      "id": 167,
      "name": "/assets/PastPapersIcon.svg",
      "category": "dependency"
    },
    {
      "id": 168,
      "name": "/assets/ForumIcon.svg",
      "category": "dependency"
    },
    {
      "id": 169,
      "name": "/assets/QuizIcon.svg",
      "category": "dependency"
    },
    {
      "id": 170,
      "name": "/assets/Home.svg",
      "category": "dependency"
    },
    {
      "id": 171,
      "name": "/assets/NotesIcon.svg",
      "category": "dependency"
    },
    {
      "id": 172,
      "name": "/assets/SyllabusLogo.svg",
      "category": "dependency"
    },
    {
      "id": 173,
      "name": "/assets/BookIcon.svg",
      "category": "dependency"
    },
    {
      "id": 174,
      "name": "next/server",
      "category": "dependency"
    },
    {
      "id": 175,
      "name": "@/public/assets/quizJSON",
      "category": "dependency"
    },
    {
      "id": 176,
      "name": "@/app/components/pdfviewer",
      "category": "dependency"
    },
    {
      "id": 177,
      "name": "@/app/components/DeleteButton",
      "category": "dependency"
    },
    {
      "id": 178,
      "name": "/assets/LucideMoon.svg",
      "category": "dependency"
    },
    {
      "id": 179,
      "name": "/assets/LucideSun.svg",
      "category": "dependency"
    },
    {
      "id": 180,
      "name": "@/app/@protected_routes/loading",
      "category": "dependency"
    },
    {
      "id": 181,
      "name": "@/app/components/forumpost/CommentField",
      "category": "dependency"
    },
    {
      "id": 182,
      "name": "@/public/assets/Profile.svg",
      "category": "dependency"
    },
    {
      "id": 183,
      "name": "@radix-ui/react-toast",
      "category": "library"
    },
    {
      "id": 184,
      "name": "class-variance-authority",
      "category": "library"
    },
    {
      "id": 185,
      "name": "@upstash/ratelimit",
      "category": "library"
    },
    {
      "id": 186,
      "name": "@upstash/redis",
      "category": "library"
    },
    {
      "id": 187,
      "name": "@/app/actions/CreateComment",
      "category": "dependency"
    },
    {
      "id": 188,
      "name": "/comment/SubmitComment.svg",
      "category": "dependency"
    },
    {
      "id": 189,
      "name": "@/public/assets/Loader.svg",
      "category": "dependency"
    },
    {
      "id": 190,
      "name": "@/app/components/create-forum",
      "category": "dependency"
    },
    {
      "id": 191,
      "name": "@fortawesome/free-brands-svg-icons",
      "category": "library"
    },
    {
      "id": 192,
      "name": "@react-pdf-viewer/page-navigation",
      "category": "dependency"
    },
    {
      "id": 193,
      "name": "@react-pdf-viewer/core/lib/styles/index.css",
      "category": "dependency"
    },
    {
      "id": 194,
      "name": "@react-pdf-viewer/toolbar/lib/styles/index.css",
      "category": "dependency"
    },
    {
      "id": 195,
      "name": "@react-pdf-viewer/core",
      "category": "library"
    },
    {
      "id": 196,
      "name": "@react-pdf-viewer/toolbar",
      "category": "library"
    },
    {
      "id": 197,
      "name": "@react-pdf-viewer/zoom",
      "category": "dependency"
    },
    {
      "id": 198,
      "name": "@/app/@protected_routes/home/home",
      "category": "dependency"
    },
    {
      "id": 199,
      "name": "node:fs",
      "category": "dependency"
    },
    {
      "id": 200,
      "name": "node:readline",
      "category": "dependency"
    },
    {
      "id": 201,
      "name": "@/public/assets/GiftBox.svg",
      "category": "dependency"
    },
    {
      "id": 202,
      "name": "@/app/components/FavFetchFilter",
      "category": "dependency"
    },
    {
      "id": 203,
      "name": "@/app/components/Pagination",
      "category": "dependency"
    },
    {
      "id": 204,
      "name": "@/app/components/SearchBar",
      "category": "dependency"
    },
    {
      "id": 205,
      "name": "next",
      "category": "library"
    },
    {
      "id": 206,
      "name": "@/app/components/EditButton",
      "category": "dependency"
    },
    {
      "id": 207,
      "name": "@/app/components/ShareLink",
      "category": "dependency"
    },
    {
      "id": 208,
      "name": "@/app/components/QuizModalComponent",
      "category": "dependency"
    },
    {
      "id": 209,
      "name": "@/app/components/CommonResource",
      "category": "dependency"
    },
    {
      "id": 210,
      "name": "@/public/assets/nothingviewedorfav.svg",
      "category": "dependency"
    },
    {
      "id": 211,
      "name": "@/public/assets/LogoIcon.svg",
      "category": "dependency"
    },
    {
      "id": 212,
      "name": "tailwindcss",
      "category": "library"
    },
    {
      "id": 213,
      "name": "tailwindcss-animate",
      "category": "library"
    },
    {
      "id": 214,
      "name": "/assets/ACM logo.svg",
      "category": "dependency"
    },
    {
      "id": 215,
      "name": "@/app/components/common/ExamCookerLogo",
      "category": "dependency"
    },
    {
      "id": 216,
      "name": "@/app/components/SyllabusCard",
      "category": "dependency"
    },
    {
      "id": 217,
      "name": "next/headers",
      "category": "dependency"
    },
    {
      "id": 218,
      "name": "@/components/ui/dialog",
      "category": "dependency"
    }
  ],
  "links": [
    {
      "source": 55,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 57,
      "target": 119,
      "relation": "depends"
    },
    {
      "source": 57,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 57,
      "target": 139,
      "relation": "depends"
    },
    {
      "source": 57,
      "target": 121,
      "relation": "depends"
    },
    {
      "source": 59,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 59,
      "target": 121,
      "relation": "depends"
    },
    {
      "source": 59,
      "target": 216,
      "relation": "depends"
    },
    {
      "source": 59,
      "target": 139,
      "relation": "depends"
    },
    {
      "source": 60,
      "target": 119,
      "relation": "depends"
    },
    {
      "source": 60,
      "target": 217,
      "relation": "depends"
    },
    {
      "source": 61,
      "target": 218,
      "relation": "depends"
    },
    {
      "source": 61,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 62,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 62,
      "target": 119,
      "relation": "depends"
    },
    {
      "source": 62,
      "target": 121,
      "relation": "depends"
    },
    {
      "source": 63,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 63,
      "target": 121,
      "relation": "depends"
    },
    {
      "source": 64,
      "target": 121,
      "relation": "depends"
    },
    {
      "source": 64,
      "target": 119,
      "relation": "depends"
    },
    {
      "source": 64,
      "target": 130,
      "relation": "depends"
    },
    {
      "source": 64,
      "target": 144,
      "relation": "depends"
    },
    {
      "source": 64,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 64,
      "target": 115,
      "relation": "depends"
    },
    {
      "source": 64,
      "target": 116,
      "relation": "depends"
    },
    {
      "source": 65,
      "target": 112,
      "relation": "depends"
    },
    {
      "source": 65,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 65,
      "target": 114,
      "relation": "depends"
    },
    {
      "source": 66,
      "target": 115,
      "relation": "depends"
    },
    {
      "source": 66,
      "target": 116,
      "relation": "depends"
    },
    {
      "source": 66,
      "target": 117,
      "relation": "depends"
    },
    {
      "source": 66,
      "target": 118,
      "relation": "depends"
    },
    {
      "source": 66,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 66,
      "target": 119,
      "relation": "depends"
    },
    {
      "source": 66,
      "target": 120,
      "relation": "depends"
    },
    {
      "source": 67,
      "target": 121,
      "relation": "depends"
    },
    {
      "source": 68,
      "target": 122,
      "relation": "depends"
    },
    {
      "source": 68,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 68,
      "target": 123,
      "relation": "depends"
    },
    {
      "source": 68,
      "target": 124,
      "relation": "depends"
    },
    {
      "source": 68,
      "target": 125,
      "relation": "depends"
    },
    {
      "source": 68,
      "target": 126,
      "relation": "depends"
    },
    {
      "source": 68,
      "target": 119,
      "relation": "depends"
    },
    {
      "source": 71,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 71,
      "target": 127,
      "relation": "depends"
    },
    {
      "source": 71,
      "target": 115,
      "relation": "depends"
    },
    {
      "source": 71,
      "target": 116,
      "relation": "depends"
    },
    {
      "source": 71,
      "target": 119,
      "relation": "depends"
    },
    {
      "source": 71,
      "target": 128,
      "relation": "depends"
    },
    {
      "source": 71,
      "target": 129,
      "relation": "depends"
    },
    {
      "source": 71,
      "target": 121,
      "relation": "depends"
    },
    {
      "source": 71,
      "target": 130,
      "relation": "depends"
    },
    {
      "source": 72,
      "target": 116,
      "relation": "depends"
    },
    {
      "source": 72,
      "target": 115,
      "relation": "depends"
    },
    {
      "source": 72,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 73,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 73,
      "target": 131,
      "relation": "depends"
    },
    {
      "source": 74,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 75,
      "target": 132,
      "relation": "depends"
    },
    {
      "source": 75,
      "target": 133,
      "relation": "depends"
    },
    {
      "source": 75,
      "target": 134,
      "relation": "depends"
    },
    {
      "source": 75,
      "target": 135,
      "relation": "depends"
    },
    {
      "source": 75,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 75,
      "target": 136,
      "relation": "depends"
    },
    {
      "source": 76,
      "target": 137,
      "relation": "depends"
    },
    {
      "source": 76,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 76,
      "target": 125,
      "relation": "depends"
    },
    {
      "source": 76,
      "target": 138,
      "relation": "depends"
    },
    {
      "source": 76,
      "target": 121,
      "relation": "depends"
    },
    {
      "source": 77,
      "target": 121,
      "relation": "depends"
    },
    {
      "source": 77,
      "target": 119,
      "relation": "depends"
    },
    {
      "source": 77,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 77,
      "target": 139,
      "relation": "depends"
    },
    {
      "source": 78,
      "target": 121,
      "relation": "depends"
    },
    {
      "source": 78,
      "target": 140,
      "relation": "depends"
    },
    {
      "source": 79,
      "target": 141,
      "relation": "depends"
    },
    {
      "source": 79,
      "target": 142,
      "relation": "depends"
    },
    {
      "source": 79,
      "target": 143,
      "relation": "depends"
    },
    {
      "source": 79,
      "target": 121,
      "relation": "depends"
    },
    {
      "source": 80,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 80,
      "target": 115,
      "relation": "depends"
    },
    {
      "source": 80,
      "target": 116,
      "relation": "depends"
    },
    {
      "source": 80,
      "target": 121,
      "relation": "depends"
    },
    {
      "source": 80,
      "target": 119,
      "relation": "depends"
    },
    {
      "source": 80,
      "target": 130,
      "relation": "depends"
    },
    {
      "source": 80,
      "target": 144,
      "relation": "depends"
    },
    {
      "source": 81,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 81,
      "target": 119,
      "relation": "depends"
    },
    {
      "source": 81,
      "target": 114,
      "relation": "depends"
    },
    {
      "source": 82,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 82,
      "target": 119,
      "relation": "depends"
    },
    {
      "source": 82,
      "target": 133,
      "relation": "depends"
    },
    {
      "source": 82,
      "target": 145,
      "relation": "depends"
    },
    {
      "source": 82,
      "target": 146,
      "relation": "depends"
    },
    {
      "source": 84,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 84,
      "target": 147,
      "relation": "depends"
    },
    {
      "source": 84,
      "target": 121,
      "relation": "depends"
    },
    {
      "source": 86,
      "target": 121,
      "relation": "depends"
    },
    {
      "source": 86,
      "target": 140,
      "relation": "depends"
    },
    {
      "source": 87,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 87,
      "target": 131,
      "relation": "depends"
    },
    {
      "source": 88,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 88,
      "target": 148,
      "relation": "depends"
    },
    {
      "source": 88,
      "target": 133,
      "relation": "depends"
    },
    {
      "source": 89,
      "target": 131,
      "relation": "depends"
    },
    {
      "source": 89,
      "target": 149,
      "relation": "depends"
    },
    {
      "source": 89,
      "target": 115,
      "relation": "depends"
    },
    {
      "source": 89,
      "target": 116,
      "relation": "depends"
    },
    {
      "source": 89,
      "target": 150,
      "relation": "depends"
    },
    {
      "source": 89,
      "target": 130,
      "relation": "depends"
    },
    {
      "source": 89,
      "target": 119,
      "relation": "depends"
    },
    {
      "source": 89,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 90,
      "target": 115,
      "relation": "depends"
    },
    {
      "source": 90,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 90,
      "target": 151,
      "relation": "depends"
    },
    {
      "source": 92,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 92,
      "target": 131,
      "relation": "depends"
    },
    {
      "source": 92,
      "target": 121,
      "relation": "depends"
    },
    {
      "source": 92,
      "target": 130,
      "relation": "depends"
    },
    {
      "source": 93,
      "target": 121,
      "relation": "depends"
    },
    {
      "source": 94,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 94,
      "target": 133,
      "relation": "depends"
    },
    {
      "source": 94,
      "target": 152,
      "relation": "depends"
    },
    {
      "source": 94,
      "target": 153,
      "relation": "depends"
    },
    {
      "source": 94,
      "target": 154,
      "relation": "depends"
    },
    {
      "source": 94,
      "target": 155,
      "relation": "depends"
    },
    {
      "source": 94,
      "target": 156,
      "relation": "depends"
    },
    {
      "source": 94,
      "target": 131,
      "relation": "depends"
    },
    {
      "source": 94,
      "target": 157,
      "relation": "depends"
    },
    {
      "source": 94,
      "target": 158,
      "relation": "depends"
    },
    {
      "source": 94,
      "target": 159,
      "relation": "depends"
    },
    {
      "source": 95,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 95,
      "target": 160,
      "relation": "depends"
    },
    {
      "source": 95,
      "target": 114,
      "relation": "depends"
    },
    {
      "source": 95,
      "target": 161,
      "relation": "depends"
    },
    {
      "source": 96,
      "target": 162,
      "relation": "depends"
    },
    {
      "source": 96,
      "target": 163,
      "relation": "depends"
    },
    {
      "source": 97,
      "target": 138,
      "relation": "depends"
    },
    {
      "source": 98,
      "target": 164,
      "relation": "depends"
    },
    {
      "source": 100,
      "target": 125,
      "relation": "depends"
    },
    {
      "source": 100,
      "target": 119,
      "relation": "depends"
    },
    {
      "source": 100,
      "target": 122,
      "relation": "depends"
    },
    {
      "source": 100,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 100,
      "target": 165,
      "relation": "depends"
    },
    {
      "source": 102,
      "target": 121,
      "relation": "depends"
    },
    {
      "source": 103,
      "target": 121,
      "relation": "depends"
    },
    {
      "source": 103,
      "target": 119,
      "relation": "depends"
    },
    {
      "source": 103,
      "target": 140,
      "relation": "depends"
    },
    {
      "source": 104,
      "target": 166,
      "relation": "depends"
    },
    {
      "source": 104,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 104,
      "target": 131,
      "relation": "depends"
    },
    {
      "source": 104,
      "target": 167,
      "relation": "depends"
    },
    {
      "source": 104,
      "target": 168,
      "relation": "depends"
    },
    {
      "source": 104,
      "target": 169,
      "relation": "depends"
    },
    {
      "source": 104,
      "target": 133,
      "relation": "depends"
    },
    {
      "source": 104,
      "target": 119,
      "relation": "depends"
    },
    {
      "source": 104,
      "target": 135,
      "relation": "depends"
    },
    {
      "source": 104,
      "target": 170,
      "relation": "depends"
    },
    {
      "source": 104,
      "target": 171,
      "relation": "depends"
    },
    {
      "source": 104,
      "target": 172,
      "relation": "depends"
    },
    {
      "source": 104,
      "target": 173,
      "relation": "depends"
    },
    {
      "source": 105,
      "target": 174,
      "relation": "depends"
    },
    {
      "source": 105,
      "target": 125,
      "relation": "depends"
    },
    {
      "source": 107,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 107,
      "target": 119,
      "relation": "depends"
    },
    {
      "source": 107,
      "target": 114,
      "relation": "depends"
    },
    {
      "source": 107,
      "target": 175,
      "relation": "depends"
    },
    {
      "source": 108,
      "target": 121,
      "relation": "depends"
    },
    {
      "source": 108,
      "target": 176,
      "relation": "depends"
    },
    {
      "source": 108,
      "target": 125,
      "relation": "depends"
    },
    {
      "source": 108,
      "target": 119,
      "relation": "depends"
    },
    {
      "source": 108,
      "target": 177,
      "relation": "depends"
    },
    {
      "source": 108,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 109,
      "target": 121,
      "relation": "depends"
    },
    {
      "source": 109,
      "target": 125,
      "relation": "depends"
    },
    {
      "source": 110,
      "target": 178,
      "relation": "depends"
    },
    {
      "source": 110,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 110,
      "target": 133,
      "relation": "depends"
    },
    {
      "source": 110,
      "target": 179,
      "relation": "depends"
    },
    {
      "source": 111,
      "target": 130,
      "relation": "depends"
    },
    {
      "source": 111,
      "target": 180,
      "relation": "depends"
    },
    {
      "source": 111,
      "target": 131,
      "relation": "depends"
    },
    {
      "source": 111,
      "target": 119,
      "relation": "depends"
    },
    {
      "source": 111,
      "target": 139,
      "relation": "depends"
    },
    {
      "source": 111,
      "target": 115,
      "relation": "depends"
    },
    {
      "source": 111,
      "target": 116,
      "relation": "depends"
    },
    {
      "source": 0,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 1,
      "target": 129,
      "relation": "depends"
    },
    {
      "source": 1,
      "target": 121,
      "relation": "depends"
    },
    {
      "source": 1,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 1,
      "target": 127,
      "relation": "depends"
    },
    {
      "source": 1,
      "target": 181,
      "relation": "depends"
    },
    {
      "source": 1,
      "target": 128,
      "relation": "depends"
    },
    {
      "source": 2,
      "target": 121,
      "relation": "depends"
    },
    {
      "source": 2,
      "target": 140,
      "relation": "depends"
    },
    {
      "source": 3,
      "target": 121,
      "relation": "depends"
    },
    {
      "source": 3,
      "target": 140,
      "relation": "depends"
    },
    {
      "source": 4,
      "target": 133,
      "relation": "depends"
    },
    {
      "source": 4,
      "target": 182,
      "relation": "depends"
    },
    {
      "source": 4,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 4,
      "target": 138,
      "relation": "depends"
    },
    {
      "source": 5,
      "target": 125,
      "relation": "depends"
    },
    {
      "source": 6,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 6,
      "target": 183,
      "relation": "depends"
    },
    {
      "source": 6,
      "target": 184,
      "relation": "depends"
    },
    {
      "source": 6,
      "target": 114,
      "relation": "depends"
    },
    {
      "source": 6,
      "target": 161,
      "relation": "depends"
    },
    {
      "source": 7,
      "target": 174,
      "relation": "depends"
    },
    {
      "source": 7,
      "target": 185,
      "relation": "depends"
    },
    {
      "source": 7,
      "target": 186,
      "relation": "depends"
    },
    {
      "source": 8,
      "target": 121,
      "relation": "depends"
    },
    {
      "source": 8,
      "target": 125,
      "relation": "depends"
    },
    {
      "source": 8,
      "target": 119,
      "relation": "depends"
    },
    {
      "source": 9,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 10,
      "target": 187,
      "relation": "depends"
    },
    {
      "source": 10,
      "target": 180,
      "relation": "depends"
    },
    {
      "source": 10,
      "target": 188,
      "relation": "depends"
    },
    {
      "source": 10,
      "target": 133,
      "relation": "depends"
    },
    {
      "source": 10,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 11,
      "target": 189,
      "relation": "depends"
    },
    {
      "source": 11,
      "target": 133,
      "relation": "depends"
    },
    {
      "source": 11,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 13,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 13,
      "target": 190,
      "relation": "depends"
    },
    {
      "source": 13,
      "target": 121,
      "relation": "depends"
    },
    {
      "source": 16,
      "target": 125,
      "relation": "depends"
    },
    {
      "source": 17,
      "target": 115,
      "relation": "depends"
    },
    {
      "source": 17,
      "target": 119,
      "relation": "depends"
    },
    {
      "source": 17,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 17,
      "target": 116,
      "relation": "depends"
    },
    {
      "source": 18,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 18,
      "target": 133,
      "relation": "depends"
    },
    {
      "source": 18,
      "target": 115,
      "relation": "depends"
    },
    {
      "source": 18,
      "target": 191,
      "relation": "depends"
    },
    {
      "source": 19,
      "target": 192,
      "relation": "depends"
    },
    {
      "source": 19,
      "target": 115,
      "relation": "depends"
    },
    {
      "source": 19,
      "target": 193,
      "relation": "depends"
    },
    {
      "source": 19,
      "target": 194,
      "relation": "depends"
    },
    {
      "source": 19,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 19,
      "target": 195,
      "relation": "depends"
    },
    {
      "source": 19,
      "target": 196,
      "relation": "depends"
    },
    {
      "source": 19,
      "target": 197,
      "relation": "depends"
    },
    {
      "source": 22,
      "target": 125,
      "relation": "depends"
    },
    {
      "source": 22,
      "target": 198,
      "relation": "depends"
    },
    {
      "source": 23,
      "target": 147,
      "relation": "depends"
    },
    {
      "source": 23,
      "target": 121,
      "relation": "depends"
    },
    {
      "source": 23,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 24,
      "target": 140,
      "relation": "depends"
    },
    {
      "source": 25,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 25,
      "target": 131,
      "relation": "depends"
    },
    {
      "source": 25,
      "target": 121,
      "relation": "depends"
    },
    {
      "source": 25,
      "target": 115,
      "relation": "depends"
    },
    {
      "source": 25,
      "target": 116,
      "relation": "depends"
    },
    {
      "source": 25,
      "target": 130,
      "relation": "depends"
    },
    {
      "source": 26,
      "target": 121,
      "relation": "depends"
    },
    {
      "source": 26,
      "target": 199,
      "relation": "depends"
    },
    {
      "source": 26,
      "target": 200,
      "relation": "depends"
    },
    {
      "source": 27,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 27,
      "target": 122,
      "relation": "depends"
    },
    {
      "source": 28,
      "target": 121,
      "relation": "depends"
    },
    {
      "source": 28,
      "target": 115,
      "relation": "depends"
    },
    {
      "source": 28,
      "target": 116,
      "relation": "depends"
    },
    {
      "source": 28,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 29,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 29,
      "target": 131,
      "relation": "depends"
    },
    {
      "source": 30,
      "target": 121,
      "relation": "depends"
    },
    {
      "source": 30,
      "target": 125,
      "relation": "depends"
    },
    {
      "source": 30,
      "target": 119,
      "relation": "depends"
    },
    {
      "source": 31,
      "target": 140,
      "relation": "depends"
    },
    {
      "source": 31,
      "target": 121,
      "relation": "depends"
    },
    {
      "source": 32,
      "target": 125,
      "relation": "depends"
    },
    {
      "source": 33,
      "target": 115,
      "relation": "depends"
    },
    {
      "source": 33,
      "target": 119,
      "relation": "depends"
    },
    {
      "source": 33,
      "target": 130,
      "relation": "depends"
    },
    {
      "source": 33,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 33,
      "target": 116,
      "relation": "depends"
    },
    {
      "source": 34,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 35,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 35,
      "target": 139,
      "relation": "depends"
    },
    {
      "source": 35,
      "target": 115,
      "relation": "depends"
    },
    {
      "source": 35,
      "target": 116,
      "relation": "depends"
    },
    {
      "source": 36,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 36,
      "target": 133,
      "relation": "depends"
    },
    {
      "source": 36,
      "target": 114,
      "relation": "depends"
    },
    {
      "source": 36,
      "target": 201,
      "relation": "depends"
    },
    {
      "source": 37,
      "target": 130,
      "relation": "depends"
    },
    {
      "source": 38,
      "target": 202,
      "relation": "depends"
    },
    {
      "source": 38,
      "target": 137,
      "relation": "depends"
    },
    {
      "source": 38,
      "target": 119,
      "relation": "depends"
    },
    {
      "source": 38,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 38,
      "target": 139,
      "relation": "depends"
    },
    {
      "source": 38,
      "target": 203,
      "relation": "depends"
    },
    {
      "source": 38,
      "target": 204,
      "relation": "depends"
    },
    {
      "source": 39,
      "target": 128,
      "relation": "depends"
    },
    {
      "source": 39,
      "target": 177,
      "relation": "depends"
    },
    {
      "source": 39,
      "target": 205,
      "relation": "depends"
    },
    {
      "source": 39,
      "target": 114,
      "relation": "depends"
    },
    {
      "source": 39,
      "target": 206,
      "relation": "depends"
    },
    {
      "source": 39,
      "target": 207,
      "relation": "depends"
    },
    {
      "source": 39,
      "target": 121,
      "relation": "depends"
    },
    {
      "source": 39,
      "target": 176,
      "relation": "depends"
    },
    {
      "source": 39,
      "target": 119,
      "relation": "depends"
    },
    {
      "source": 39,
      "target": 115,
      "relation": "depends"
    },
    {
      "source": 39,
      "target": 116,
      "relation": "depends"
    },
    {
      "source": 39,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 39,
      "target": 125,
      "relation": "depends"
    },
    {
      "source": 40,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 40,
      "target": 139,
      "relation": "depends"
    },
    {
      "source": 40,
      "target": 121,
      "relation": "depends"
    },
    {
      "source": 40,
      "target": 119,
      "relation": "depends"
    },
    {
      "source": 41,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 41,
      "target": 114,
      "relation": "depends"
    },
    {
      "source": 41,
      "target": 208,
      "relation": "depends"
    },
    {
      "source": 42,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 43,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 43,
      "target": 131,
      "relation": "depends"
    },
    {
      "source": 43,
      "target": 115,
      "relation": "depends"
    },
    {
      "source": 43,
      "target": 116,
      "relation": "depends"
    },
    {
      "source": 44,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 46,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 46,
      "target": 121,
      "relation": "depends"
    },
    {
      "source": 46,
      "target": 125,
      "relation": "depends"
    },
    {
      "source": 46,
      "target": 128,
      "relation": "depends"
    },
    {
      "source": 46,
      "target": 177,
      "relation": "depends"
    },
    {
      "source": 46,
      "target": 205,
      "relation": "depends"
    },
    {
      "source": 46,
      "target": 176,
      "relation": "depends"
    },
    {
      "source": 46,
      "target": 119,
      "relation": "depends"
    },
    {
      "source": 46,
      "target": 206,
      "relation": "depends"
    },
    {
      "source": 46,
      "target": 207,
      "relation": "depends"
    },
    {
      "source": 47,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 47,
      "target": 139,
      "relation": "depends"
    },
    {
      "source": 47,
      "target": 121,
      "relation": "depends"
    },
    {
      "source": 47,
      "target": 119,
      "relation": "depends"
    },
    {
      "source": 47,
      "target": 125,
      "relation": "depends"
    },
    {
      "source": 48,
      "target": 209,
      "relation": "depends"
    },
    {
      "source": 48,
      "target": 133,
      "relation": "depends"
    },
    {
      "source": 48,
      "target": 131,
      "relation": "depends"
    },
    {
      "source": 48,
      "target": 125,
      "relation": "depends"
    },
    {
      "source": 48,
      "target": 121,
      "relation": "depends"
    },
    {
      "source": 48,
      "target": 165,
      "relation": "depends"
    },
    {
      "source": 48,
      "target": 210,
      "relation": "depends"
    },
    {
      "source": 48,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 50,
      "target": 133,
      "relation": "depends"
    },
    {
      "source": 50,
      "target": 211,
      "relation": "depends"
    },
    {
      "source": 52,
      "target": 212,
      "relation": "depends"
    },
    {
      "source": 52,
      "target": 213,
      "relation": "depends"
    },
    {
      "source": 53,
      "target": 214,
      "relation": "depends"
    },
    {
      "source": 53,
      "target": 113,
      "relation": "depends"
    },
    {
      "source": 53,
      "target": 133,
      "relation": "depends"
    },
    {
      "source": 53,
      "target": 191,
      "relation": "depends"
    },
    {
      "source": 53,
      "target": 115,
      "relation": "depends"
    },
    {
      "source": 53,
      "target": 215,
      "relation": "depends"
    },
    {
      "source": 54,
      "target": 189,
      "relation": "depends"
    },
    {
      "source": 54,
      "target": 133,
      "relation": "depends"
    },
    {
      "source": 54,
      "target": 113,
      "relation": "depends"
    }
  ]
}