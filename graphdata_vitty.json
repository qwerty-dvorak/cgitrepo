{
  "nodes": [
    {
      "id": 0,
      "name": "UploadTimeTable.tsx",
      "category": "file",
      "path": "vitty/src/components/UploadTimeTable.tsx",
      "content": "/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useState, useEffect } from \"react\";\nimport { parseAndReturn, uploadText } from \"../utils/apicalls\";\nimport \"./../styles/logedin.css\";\nimport { useAuthStore } from \"../store/authStore\";\nimport { useLoadingStore } from \"../store/useLoadingStore\";\nimport { TimeTable } from \"../store/authStore\";\nimport { useTimeTableStore } from \"../store/TimeTableStore\";\n\nconst Upload: React.FC = () =\u003e {\n  const [text, setText] = useState(\"\");\n  const { username, token, setReview } = useAuthStore();\n  const { uploadTimetable } = useTimeTableStore();\n  const { setLoading } = useLoadingStore();\n  // const regexPattern = /Registered and Approved$/;\n\n  useEffect(() =\u003e {\n    document.title = \"VITTY | Upload\";\n    setLoading(false);\n  }, [setLoading]);\n\n  const submitText = (e: React.BaseSyntheticEvent): void =\u003e {\n    e.preventDefault();\n    if (text === \"\") {\n      alert(\"Please paste the text first!\");\n      return;\n    }\n    // if (regexPattern.test(text) === false) {\n    //   const proceed = window.confirm(\n    //     \"Kindly note that this format is outdated. To ensure the accurate transfer of all timetable details, please refer to the GIF and upload the text copied from the first table you see on VTOP-\u003eTimetable. Do you want to proceed anyway?\"\n    //   );\n    // if (!proceed) {\n    //   return;\n    // }\n    // }\n    parseAndReturn(text, token)\n      .then((res: TimeTable) =\u003e {\n        console.log(res);\n        if (res.timetable === null) {\n          alert(\n            \"upload failed, no slots detected. Please check the format of the text you pasted. \"\n          );\n          return;\n        } else {\n          uploadTimetable(res);\n          setReview(true);\n        }\n        // uploadTimetable(res.data);\n        // console.log(res.data);\n      })\n      .catch((error: Error) =\u003e {\n        alert(\"Error fetching timetable: \" + error);\n        console.error(\"Error fetching timetable:\", error);\n      });\n  };\n\n  return (\n    \u003cdiv className=\"upload-wrapper\"\u003e\n      \u003ch1\u003eUpload Timetable\u003c/h1\u003e\n      \u003cdiv className=\"upload\"\u003e\n        \u003cdiv className=\"upload-text\"\u003e\n          \u003col className=\"steps\"\u003e\n            \u003cimg\n              src=\"/copying_timetable.gif\"\n              className=\"w-fit max-w-[90vw] md:max-w-[500px] mb-8\"\n              alt=\"gif\"\n            /\u003e\n            \u003cli\u003eGo to the Time Table tab on VTOP\u003c/li\u003e\n            \u003cli\u003eScroll to see the course list with your faculty details\u003c/li\u003e\n            \u003cli\u003e\n              Select the text from \u003cspan\u003eSl.No\u003c/span\u003e in the top left to{\" \"}\n              \u003cspan\u003eRegistered and Approved\u003c/span\u003e in the bottom right\n            \u003c/li\u003e\n            \u003cli\u003eCopy all of the selected text\u003c/li\u003e\n            \u003cli\u003ePaste it below \u003c/li\u003e\n            {/* \u003cli\u003eRefer to the GIF below\u003c/li\u003e */}\n            \u003ctextarea\n              autoFocus\n              //   type=\"text\"\n              id=\"input-text\"\n              value={text}\n              onChange={(e) =\u003e setText(e.target.value)}\n            /\u003e\n            \u003cbutton type=\"submit\" onClick={submitText}\u003e\n              Submit Text\n            \u003c/button\u003e\n          \u003c/ol\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n  );\n};\n\nexport default Upload;\n",
      "dependencies": [
        "react",
        "/copying_timetable.gif"
      ]
    },
    {
      "id": 1,
      "name": "Dashboard.tsx",
      "category": "file",
      "path": "vitty/src/pages/Dashboard.tsx",
      "content": "/* eslint-disable react-hooks/exhaustive-deps */\nimport { checkUserExists, getToken } from \"../utils/apicalls\";\nimport { useEffect } from \"react\";\nimport GetUserName from \"../components/GetUserName\"\nimport Timetable from \"./TimeTable\";\nimport { useAuthStore } from \"../store/authStore\";\nimport Loader from \"../components/Loader\";\n\nexport default function Dashboard() {\n  const { uuid, username, updateToken, updateUsername, token } = useAuthStore();\n  useEffect(() =\u003e {\n    if(uuid === \"\") return;\n    checkUserExists(uuid).then((res) =\u003e {\n      if (res.detail === \"User does not exist\") {\n        updateUsername(\"\");\n      } else {\n        getToken(uuid).then((data) =\u003e {\n            if (data) {\n                console.log(data);\n                updateUsername(data.username);\n                updateToken(data.token);\n                localStorage.setItem(\"email\", data.email);\n            } else {\n                window.alert(\"Some error occured\");\n            }\n            }\n        );\n        console.log(res.detail);\n      }\n    });\n  }, [username, token, uuid, updateToken, updateUsername]);\n  return (\n    \u003cdiv className=\"h-full w-full\"\u003e\n      {\n        username === null\n          ? \u003cLoader /\u003e\n          : username === \"\"\n            ? \u003cGetUserName /\u003e\n            : \u003cTimetable /\u003e\n      }\n    \u003c/div\u003e\n  );\n}\n",
      "dependencies": [
        "react"
      ]
    },
    {
      "id": 2,
      "name": "TimeTable.tsx",
      "category": "file",
      "path": "vitty/src/pages/TimeTable.tsx",
      "content": "/* eslint-disable react-hooks/exhaustive-deps */\nimport { useAuthStore } from \"../store/authStore\";\nimport { getTimetable } from \"../utils/apicalls\";\nimport { useEffect } from \"react\";\nimport EditTimeTable from \"../components/EditTimeTable\";\nimport UploadTimeTable from \"../components/UploadTimeTable\";\nimport ReviewTimeTable from \"../components/ReviewTimeTable\";\n\ninterface ClassInfo {\n  name: string;\n  code: string;\n  venue: string;\n  slot: string;\n  type: string;\n  start_time: string;\n  end_time: string;\n}\n\ninterface Timetable {\n  [day: string]: ClassInfo[] | null;\n}\n\nexport default function Timetable() {\n  const { username, token, timetable, uploadTimetable, deleteTimetable, review } = useAuthStore();\n\n  useEffect(() =\u003e {\n    getTimetable(username || \"\", token)\n      .then((res) =\u003e {\n        if (res.data.Monday === undefined) {\n          deleteTimetable();\n          console.log(res, \"upload timetable from timetable page\");\n        }\n        else {\n          console.log(res.length, \"res length\")\n          uploadTimetable(res.data);\n          console.log(res.data, \"upload timetable from timetable page\");\n        }\n      })\n      .catch((error) =\u003e {\n        console.error(\"Error fetching timetable:\", error);\n      });\n  }, [username, token]);\n\n  return (review === false) ? ((timetable === null) ? \u003cUploadTimeTable /\u003e : \u003cEditTimeTable /\u003e): \u003cReviewTimeTable /\u003e;\n}\n",
      "dependencies": [
        "react"
      ]
    },
    {
      "id": 3,
      "name": "TimeTableStore.tsx",
      "category": "file",
      "path": "vitty/src/store/TimeTableStore.tsx",
      "content": "import { create } from \"zustand\";\n\nexport interface Course {\n  name: string;\n  code: string;\n  venue: string;\n  slot: string;\n  type: string;\n  start_time: string | null;\n  end_time: string | null;\n}\n\nexport interface TimeTable {\n  timetable: Course[] | null;\n}\n\ninterface TimeTableStore {\n  timetable: TimeTable | null;\n  uploadTimetable: (timetable: TimeTable) =\u003e void;\n  deleteTimetable: () =\u003e void;\n  deleteSlot: (slot: string) =\u003e void;\n  addCourse: (course: Course) =\u003e void;\n}\n\nexport const useTimeTableStore = create\u003cTimeTableStore\u003e((set) =\u003e ({\n  timetable: null,\n  uploadTimetable: (data) =\u003e {\n    set(() =\u003e ({\n      timetable: data\n    }));\n  },\n  deleteTimetable: () =\u003e {\n    set(() =\u003e ({\n      timetable: null,\n    }));\n  },\n  deleteSlot: (slot) =\u003e {\n    set((state) =\u003e ({\n      timetable: {\n        timetable: state.timetable?.timetable?.filter((course) =\u003e course.slot !== slot) || null\n      }\n    }));\n  },\n  addCourse: (course: Course) =\u003e {\n    set((state) =\u003e ({\n      timetable: {\n        timetable: [...state.timetable?.timetable || [], course]\n      }\n    }));\n  }\n}));",
      "dependencies": [
        "zustand"
      ]
    },
    {
      "id": 4,
      "name": "profileStore.tsx",
      "category": "file",
      "path": "vitty/src/store/profileStore.tsx",
      "content": "import { create } from \"zustand\";\n\ninterface showProfileStore {\n    showProfile: boolean;\n    toggleProfile: () =\u003e void;\n    setProfile: (showProfile: boolean) =\u003e void;\n    }\n\nexport const useShowProfileStore = create\u003cshowProfileStore\u003e((set) =\u003e ({\n    showProfile: false,\n    toggleProfile: () =\u003e {\n        set((state) =\u003e ({\n            showProfile: !state.showProfile,\n        }));\n    },\n    setProfile: (showProfile) =\u003e {\n        set(() =\u003e ({\n            showProfile,\n        }));\n    },\n}));\n",
      "dependencies": [
        "zustand"
      ]
    },
    {
      "id": 5,
      "name": "GetUserName.tsx",
      "category": "file",
      "path": "vitty/src/components/GetUserName.tsx",
      "content": "/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from \"react\";\nimport { isAvailable, signIn } from \"../utils/apicalls\";\nimport { useAuthStore } from \"../store/authStore\";\nimport { useLoadingStore } from \"../store/useLoadingStore\";\n\nconst GetUsername: React.FC = () =\u003e {\n  const [userName, setuserName] = useState(\"\");\n  const [regNo, setRegNo] = useState(\"\");\n  const [validregNo, setValidRegNo] = useState(false);\n  const [validUsername, setValidUsername] = useState(false);\n  const regexPattern = /^\\d{2}[A-Z]{3}\\d{4}$/;\n  const uuid = localStorage.getItem(\"uuid\") || \"\";\n  const { updateUsername, updateToken } = useAuthStore();\n  const { setLoading } = useLoadingStore();\n\n  useEffect(() =\u003e {\n    document.title = \"VITTY | Get Username\";\n    setLoading(false);\n  }, [setLoading]);\n\n  const updateUserName = (): void =\u003e {\n    console.log(\"in update username\");\n    signIn(uuid, regNo, userName).then((data) =\u003e {\n      if (data.token) {\n        console.log(data);\n        updateUsername(userName);\n        updateToken(data.access_token);\n      } else {\n        setValidUsername(false);\n        setValidRegNo(false);\n        window.alert(data.detail);\n      }\n    });\n  };\n\n  const validateInput = (e: React.FormEvent): void =\u003e {\n    e.preventDefault();\n\n    if (regexPattern.test(regNo)) {\n      setValidRegNo(true);\n      console.log(\"valid reg no\");\n    } else {\n      window.alert(\"Invalid Reg. No.\");\n      return;\n    }\n\n    isAvailable(userName).then((data) =\u003e {\n      if (data.detail === \"Username is valid\") {\n        setValidUsername(true);\n        console.log(\"valid username\");\n      } else {\n        window.alert(data.detail);\n        return;\n      }\n    });\n  };\n\n  useEffect(() =\u003e {\n    if (validUsername \u0026\u0026 validregNo) {\n      updateUserName();\n    }\n  }, [validUsername, validregNo]);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  return (\n    \u003cdiv className=\"overflow-hidden flex flex-col items-center justify-center overflow-y-hidden p-10 mx-auto h-full\"\u003e\n      \u003ch1 className=\"overflow-visible text-2xl mb-10\"\u003eEnter your Details\u003c/h1\u003e\n      \u003cdiv className=\"flex flex-col items-center justify-center w-[50vw] md:w-[20vw] h-90vh\"\u003e\n        \u003cinput\n          autoFocus\n          type=\"text\"\n          id=\"input-text\"\n          value={userName}\n          placeholder=\"Username\"\n          onChange={(e) =\u003e setuserName(e.target.value)}\n          className=\"box-border text-lg font-poppins rounded-md text-black p-3 pl-4 border-2 border-blue bg-dark w-full mb-3 text-left\"\n        /\u003e\n        \u003cinput\n          type=\"text\"\n          id=\"input-text\"\n          value={regNo}\n          placeholder=\"Reg. Number\"\n          onChange={(e) =\u003e setRegNo((e.target.value).toUpperCase())}\n          className=\"box-border text-lg font-poppins rounded-md text-black p-3 pl-4 border-2 border-blue bg-dark w-full mb-3 text-left\"\n        /\u003e\n        \u003cdiv\n          id=\"button-wrap\"\n          className=\"flex justify-center items-center w-full mt-4\"\n        \u003e\n          \u003cbutton\n            className=\"text-sm font-poppins rounded-md text-light p-3 pl-4 bg-blue-500 border-none font-bold mt-10 focus:outline-none hover:cursor-pointer hover:scale-102\"\n            onClick={validateInput}\n          \u003e\n            Submit\n          \u003c/button\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n  );\n};\n\nexport default GetUsername;\n",
      "dependencies": [
        "react"
      ]
    },
    {
      "id": 6,
      "name": "GuardRoute.tsx",
      "category": "file",
      "path": "vitty/src/components/GuardRoute.tsx",
      "content": "import { Navigate, Outlet } from 'react-router-dom';\n// import { getAuth } from 'firebase/auth';\n// import { useAuthStore } from '../store/authStore';\n\nconst GuardedRoute = () =\u003e {\n  const uuid = localStorage.getItem('uuid') || null;\n  console.log('in gaurded route', uuid);\n  return  uuid ? \u003cOutlet /\u003e : \u003cNavigate to=\"/login\" /\u003e;\n};\n\nexport default GuardedRoute;\n",
      "dependencies": [
        "firebase/auth",
        "react-router-dom"
      ]
    },
    {
      "id": 7,
      "name": "HomeCarousal.tsx",
      "category": "file",
      "path": "vitty/src/components/HomeCarousal.tsx",
      "content": "import { Carousel } from \"react-responsive-carousel\";\nimport carousel1 from \"../assets/carousel1.png\";\nimport carousel2 from \"../assets/carousel2.png\";\nimport carousel3 from \"../assets/carousel3.png\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\n\nexport default function HomeCarousal() {\n  return (\n    \u003cdiv\u003e\n      \u003cCarousel\n        autoPlay\n        width=\"25rem\"\n        infiniteLoop\n        showIndicators={true}\n        showStatus={false}\n        showArrows={false}\n        showThumbs={false}\n        interval={5000}\n        stopOnHover={false}\n        axis=\"horizontal\"\n        centerMode={true}\n        centerSlidePercentage={100}\n      \u003e\n        \u003cdiv className=\"flex flex-col items-center\"\u003e\n          \u003cdiv className=\"h-[15rem] md:h-[17.5rem] m-4 md:m-2\"\u003e\n            \u003cimg\n              src={carousel1}\n              alt=\"Carousel\"\n              className=\"max-h-[17.5rem] max-w-[13.5rem] md:max-h-[20rem] md:max-w-[15rem]\"\n            /\u003e\n          \u003c/div\u003e\n          \u003ch3 className=\"my-4 text-xl md:text-[1.375rem]\"\u003eNever miss a class\u003c/h3\u003e\n          \u003cp className=\"text-center text-blue-500 text-sm w-[17.5rem] mb-12\"\u003e\n            Notifications to remind you about your upcoming classes\n          \u003c/p\u003e\n        \u003c/div\u003e\n        \u003cdiv className=\"flex flex-col items-center\"\u003e\n          \u003cdiv className=\"h-[15rem] md:h-[17.5rem] m-4 md:m-2\"\u003e\n            \u003cimg\n              src={carousel2}\n              alt=\"Carousel\"\n              className=\"max-h-[17.5rem] max-w-[13.5rem] md:max-h-[20rem] md:max-w-[15rem]\"\n            /\u003e\n          \u003c/div\u003e\n          \u003ch3 className=\"my-4 text-xl md:text-[1.375rem]\"\u003eGet a sneak peek\u003c/h3\u003e\n          \u003cp className=\"text-center text-blue-500 text-sm w-[17.5rem]\"\u003e\n            View your upcoming classes and timetable via the widget\n          \u003c/p\u003e\n        \u003c/div\u003e\n        \u003cdiv className=\"flex flex-col items-center\"\u003e\n          \u003cdiv className=\"h-[15rem] md:h-[17.5rem] m-4 md:m-2\"\u003e\n            \u003cimg\n              src={carousel3}\n              alt=\"Carousel\"\n              className=\"max-h-[17.5rem] max-w-[13.5rem] md:max-h-[20rem] md:max-w-[15rem]\"\n            /\u003e\n          \u003c/div\u003e\n          \u003ch3 className=\"my-4 text-xl md:text-[1.375rem]\"\u003e\n            Upload once, view anywhere\n          \u003c/h3\u003e\n          \u003cp className=\"text-center text-blue-500 text-sm w-[17.5rem]\"\u003e\n            Instant sync across all your devices via the app and extension\n          \u003c/p\u003e\n        \u003c/div\u003e\n      \u003c/Carousel\u003e\n    \u003c/div\u003e\n  );\n}\n",
      "dependencies": [
        "react-responsive-carousel",
        "react-responsive-carousel/lib/styles/carousel.min.css"
      ]
    },
    {
      "id": 8,
      "name": "Modal.tsx",
      "category": "file",
      "path": "vitty/src/components/Modal.tsx",
      "content": "import { useState, useEffect } from \"react\";\nimport \"./../styles/Modal.css\";\nimport { useTimeTableStore } from \"../store/TimeTableStore\";\n\ninterface ModalProps {\n  slot: string;\n  status: string;\n  onClose: () =\u003e void;\n}\n\ninterface Course {\n  name: string;\n  code: string;\n  venue: string;\n  slot: string;\n  type: string;\n  start_time: string | null;\n  end_time: string | null;\n}\n\nexport default function Modal({ slot, status, onClose }: ModalProps) {\n  //   const [course, setCourse] = useState\u003cCourse | null\u003e(null);\n  const [slotAdd, setSlotAdd] = useState(\"\");\n  const [courseName, setCourseName] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [code, setCode] = useState(\"\");\n  const [venue, setVenue] = useState(\"\");\n\n  const [tip, setTip] = useState\u003cstring | undefined\u003e(\"\");\n  const { deleteSlot, addCourse } = useTimeTableStore();\n\n  useEffect(() =\u003e {\n    if (status === \"remove\") {\n      if (slot.match(/[A-G]/) !== null) {\n        if (slot.includes(\"T\")) {\n          setTip(`Tip: Don't forget to take out ${slot?.slice(1)} as well!`);\n        } else\n          setTip(`Tip: Don't forget to take out T${String(slot)} as well!`);\n      }\n    }\n    // } else\n    //   setTip(\n    //     \"Tip: If the slot already exists, make sure you remove it from the timetable first!\"\n    //   );\n  }, [status, slot]);\n\n  const validInput = (): boolean =\u003e {\n    if (courseName === \"\") {\n      setTip(\"Tip: Please enter a course name!\");\n      return false;\n    }\n    if (code === \"\") {\n      setTip(\"Tip: Please enter a course code!\");\n      return false;\n    }\n    if (type === \"\") {\n      setTip(\"Tip: Please enter a course type!\");\n      return false;\n    }\n    if (venue === \"\") {\n      setTip(\"Tip: Please enter a venue!\");\n      return false;\n    }\n    if (slotAdd === \"\") {\n      setTip(\"Tip: Please enter a slot!\");\n      return false;\n    }\n    if (slotAdd.includes(\",\") || slotAdd.includes(\"+\")) {\n      setTip(\"Tip: Please enter a valid slot!, Add multiple slots separately!\");\n      return false;\n    }\n    if (type !== \"Theory\" \u0026\u0026 type !== \"Lab\") {\n      setTip(\n        \"Tip: Please enter a valid course type! (Theory/Lab), for embedded courses, add Lab and Theory components separately!\"\n      );\n      return false;\n    }\n    return true;\n  };\n\n  const onAddCourse = (): void =\u003e {\n    if (validInput()) {\n      const course: Course = {\n        name: courseName,\n        code: code,\n        type: type,\n        venue: venue,\n        slot: slotAdd,\n        start_time: null,\n        end_time: null,\n      };\n      addCourse(course);\n      onClose();\n    }\n  };\n\n  const onRemove = (): void =\u003e {\n    deleteSlot(slot);\n    onClose();\n  };\n\n  return (\n    \u003cdiv className=\"modal\" onClick={onClose}\u003e\n      \u003cdiv className=\"modal-content\" onClick={(e) =\u003e e.stopPropagation()}\u003e\n        \u003cdiv className=\"modal-header\"\u003e\n          \u003ch3\u003e{`${status === \"remove\" ? \"Remove\" : \"Add\"}`} Slot\u003c/h3\u003e\n        \u003c/div\u003e\n        \u003cdiv className=\"modal-body\"\u003e\n          {status === \"remove\" ? (\n            \u003cdiv className=\"modal-message\"\u003e\n              Are you sure you want to remove all \u003cspan\u003e{slot}\u003c/span\u003e slots?\n            \u003c/div\u003e\n          ) : (\n            \u003cdiv className=\"modal-message\"\u003e\n              Enter course details (\n              \u003cspan\u003eWeb programming-BCSE203E-Theory-SJT210-TAA1\u003c/span\u003e)\n            \u003c/div\u003e\n          )}\n          {status === \"add\" \u0026\u0026 (\n            \u003c\u003e\n              \u003cbr /\u003e\n              \u003clabel className=\"modal-message\"\u003eCourse Name\u003c/label\u003e\n              \u003cinput\n                className=\"modal-input\"\n                type=\"text\"\n                value={courseName}\n                onChange={(e) =\u003e setCourseName(e.target.value)}\n                placeholder=\"Web programming\"\n                required\n              /\u003e\n              \u003cbr /\u003e\n              \u003clabel className=\"modal-message\"\u003eCourse Code\u003c/label\u003e\n              \u003cinput\n                className=\"modal-input\"\n                type=\"text\"\n                value={code}\n                onChange={(e) =\u003e setCode(e.target.value)}\n                placeholder=\"BCSE203E\"\n                required\n              /\u003e\n              \u003cbr /\u003e\n              \u003clabel className=\"modal-message\"\u003eSlot\u003c/label\u003e\n              \u003cinput\n                className=\"modal-input\"\n                type=\"text\"\n                value={slotAdd}\n                onChange={(e) =\u003e setSlotAdd(e.target.value)}\n                placeholder=\"TAA1\"\n                required\n              /\u003e\n              \u003cbr /\u003e\n              \u003clabel className=\"modal-message\"\u003eCourse Type\u003c/label\u003e\n              \u003cinput\n                className=\"modal-input\"\n                type=\"text\"\n                value={type}\n                onChange={(e) =\u003e setType(e.target.value)}\n                placeholder=\"Theory\"\n                required\n              /\u003e\n              \u003cbr /\u003e\n              \u003clabel className=\"modal-message\"\u003eVenue\u003c/label\u003e\n              \u003cinput\n                className=\"modal-input\"\n                type=\"text\"\n                value={venue}\n                onChange={(e) =\u003e setVenue(e.target.value)}\n                placeholder=\"SJT323\"\n                required\n              /\u003e\n            \u003c/\u003e\n          )}\n\n          \u003cdiv className=\"modal-buttons\"\u003e\n            {\n              \u003c\u003e\n                {status === \"add\" ? (\n                  \u003cbutton className=\"modal-yes\" onClick={onAddCourse}\u003e\n                    Yes\n                  \u003c/button\u003e\n                ) : (\n                  \u003cbutton className=\"modal-yes\" onClick={onRemove}\u003e\n                    Yes\n                  \u003c/button\u003e\n                )}\n                \u003cbutton className=\"modal-no\" onClick={onClose}\u003e\n                  No\n                \u003c/button\u003e\n              \u003c/\u003e\n            }\n          \u003c/div\u003e\n          \u003cdiv className=\"modal-tip\"\u003e{tip}\u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n  );\n}\n",
      "dependencies": [
        "react"
      ]
    },
    {
      "id": 9,
      "name": "Profile.tsx",
      "category": "file",
      "path": "vitty/src/components/Profile.tsx",
      "content": "import React from 'react'\nimport { FaTimes } from 'react-icons/fa'\nimport './../styles/Modal.css'\nimport { useShowProfileStore } from '../store/profileStore'\nimport { useAuthStore } from '../store/authStore'\nimport { getAuth, signOut } from 'firebase/auth'\n\nconst Profile: React.FC = () =\u003e {\n\n    const { toggleProfile } = useShowProfileStore()\n    const { name, email, logout } = useAuthStore()\n\n    const toggle = (): void =\u003e {\n        toggleProfile()\n    }\n\n    const logOut = (): void =\u003e {\n        const auth = getAuth()\n        signOut(auth).then(() =\u003e {\n            console.log(auth.currentUser)\n            logout();\n            toggleProfile();\n        }).catch((error) =\u003e {\n            console.error(error)\n        })\n    }\n\n  return (\n    \u003cdiv className='modal' onClick={toggle}\u003e\n      \u003cdiv className='modal-content' onClick={e =\u003e e.stopPropagation()}\u003e\n        \u003cdiv className='modal-header'\u003e\n          \u003ch3\u003eProfile\u003c/h3\u003e\n          \u003cFaTimes onClick={toggle}/\u003e\n        \u003c/div\u003e\n        \u003cdiv className='modal-body'\u003e\n          {name !== null \u0026\u0026 \u003cdiv className='modal-message'\u003e\u003cspan\u003eName:\u003c/span\u003e {name}\u003c/div\u003e}\n          \u003cdiv className='modal-message'\u003e\u003cspan\u003eEmail:\u003c/span\u003e {email}\u003c/div\u003e\n          \u003cdiv className='modal-buttons'\u003e\n            \u003cbutton className='modal-yes' onClick={logOut}\u003eLog Out\u003c/button\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n  )\n}\n\nexport default Profile\n",
      "dependencies": [
        "react",
        "react-icons/fa",
        "firebase/auth"
      ]
    },
    {
      "id": 10,
      "name": "useLoadingStore.tsx",
      "category": "file",
      "path": "vitty/src/store/useLoadingStore.tsx",
      "content": "import {create } from \"zustand\";\n\ninterface LoadingStore {\n  isLoading: boolean;\n  timetableUploadedThisSession: boolean;\n  setLoading: (isLoading: boolean) =\u003e void;\n  setTimetableUploadedThisSession: (timetableUploadedThisSession: boolean) =\u003e void;\n}\n\nexport const useLoadingStore = create\u003cLoadingStore\u003e((set) =\u003e ({\n  isLoading: false,\n  timetableUploadedThisSession: false,\n  setLoading: (isLoading) =\u003e {\n    set(() =\u003e ({\n      isLoading,\n    }));\n  },\n  setTimetableUploadedThisSession: (timetableUploadedThisSession) =\u003e {\n    set(() =\u003e ({\n      timetableUploadedThisSession,\n    }));\n  },\n}));",
      "dependencies": [
        "zustand"
      ]
    },
    {
      "id": 11,
      "name": "ParseAndReturn.tsx",
      "category": "file",
      "path": "vitty/src/utils/ParseAndReturn.tsx",
      "content": "import { TimeTable, Course } from \"../store/authStore\";\n\nexport default function ParseAndReturn(\n  timeTable: TimeTable | null,\n  day: string\n) {\n  type TimeTableSlot = {\n    [key: string]: {\n      [key: string]: string[];\n    };\n  };\n\n  const TimeTableSlots: TimeTableSlot = {\n    Monday: {\n      Theory: [\n        \"A1\",\n        \"F1\",\n        \"D1\",\n        \"TB1\",\n        \"TG1\",\n        \"A2\",\n        \"F2\",\n        \"D2\",\n        \"TB2\",\n        \"TG2\",\n        \"V3\",\n      ],\n      Lab: [\n        \"L1\",\n        \"L2\",\n        \"L3\",\n        \"L4\",\n        \"L5\",\n        \"L6\",\n        \"L31\",\n        \"L32\",\n        \"L33\",\n        \"L34\",\n        \"L35\",\n        \"L36\",\n      ],\n    },\n    Tuesday: {\n      Theory: [\n        \"B1\",\n        \"G1\",\n        \"E1\",\n        \"TC1\",\n        \"TAA1\",\n        \"B2\",\n        \"G2\",\n        \"E2\",\n        \"TC2\",\n        \"TAA2\",\n        \"V4\",\n      ],\n      Lab: [\n        \"L7\",\n        \"L8\",\n        \"L9\",\n        \"L10\",\n        \"L11\",\n        \"L12\",\n        \"L37\",\n        \"L38\",\n        \"L39\",\n        \"L40\",\n        \"L41\",\n        \"L42\",\n      ],\n    },\n    Wednesday: {\n      Theory: [\n        \"C1\",\n        \"A1\",\n        \"F1\",\n        \"V1\",\n        \"V2\",\n        \"C2\",\n        \"A2\",\n        \"F2\",\n        \"TD2\",\n        \"TBB2\",\n        \"V5\",\n      ],\n      Lab: [\n        \"L13\",\n        \"L14\",\n        \"L15\",\n        \"L16\",\n        \"L17\",\n        \"L18\",\n        \"L43\",\n        \"L44\",\n        \"L45\",\n        \"L46\",\n        \"L47\",\n        \"L48\",\n      ],\n    },\n    Thursday: {\n      Theory: [\n        \"D1\",\n        \"B1\",\n        \"G1\",\n        \"TE1\",\n        \"TCC1\",\n        \"D2\",\n        \"B2\",\n        \"G2\",\n        \"TE2\",\n        \"TCC2\",\n        \"V6\",\n      ],\n      Lab: [\n        \"L19\",\n        \"L20\",\n        \"L21\",\n        \"L22\",\n        \"L23\",\n        \"L24\",\n        \"L49\",\n        \"L50\",\n        \"L51\",\n        \"L52\",\n        \"L53\",\n        \"L54\",\n      ],\n    },\n    Friday: {\n      Theory: [\n        \"E1\",\n        \"C1\",\n        \"TA1\",\n        \"TF1\",\n        \"TD1\",\n        \"E2\",\n        \"C2\",\n        \"TA2\",\n        \"TF2\",\n        \"TDD2\",\n        \"V7\",\n      ],\n      Lab: [\n        \"L25\",\n        \"L26\",\n        \"L27\",\n        \"L28\",\n        \"L29\",\n        \"L30\",\n        \"L55\",\n        \"L56\",\n        \"L57\",\n        \"L58\",\n        \"L59\",\n        \"L60\",\n      ],\n    },\n    Saturday: {\n      Theory: [\n        \"V8\",\n        \"X11\",\n        \"X12\",\n        \"Y11\",\n        \"Y12\",\n        \"X21\",\n        \"Z21\",\n        \"Y21\",\n        \"W21\",\n        \"W22\",\n        \"V9\",\n      ],\n      Lab: [\n        \"L71\",\n        \"L72\",\n        \"L73\",\n        \"L74\",\n        \"L75\",\n        \"L76\",\n        \"L77\",\n        \"L78\",\n        \"L79\",\n        \"L80\",\n        \"L81\",\n        \"L82\",\n      ],\n    },\n    Sunday: {\n      Theory: [\n        \"V10\",\n        \"Y11\",\n        \"Y12\",\n        \"X11\",\n        \"X12\",\n        \"Y21\",\n        \"Z21\",\n        \"X21\",\n        \"W21\",\n        \"W22\",\n        \"V11\",\n      ],\n      Lab: [\n        \"L83\",\n        \"L84\",\n        \"L85\",\n        \"L86\",\n        \"L87\",\n        \"L88\",\n        \"L89\",\n        \"L90\",\n        \"L91\",\n        \"L92\",\n        \"L93\",\n        \"L94\",\n      ],\n    },\n  };\n\n  interface Timings {\n    StartTime: string;\n    EndTime: string;\n  }\n\n  const TheoryTimings: Timings[] = [\n    { StartTime: \"08:00 AM\", EndTime: \"08:50 AM\" },\n    { StartTime: \"09:00 AM\", EndTime: \"09:50 AM\" },\n    { StartTime: \"10:00 AM\", EndTime: \"10:50 AM\" },\n    { StartTime: \"11:00 AM\", EndTime: \"11:50 AM\" },\n    { StartTime: \"12:00 PM\", EndTime: \"12:50 PM\" },\n    { StartTime: \"02:00 PM\", EndTime: \"02:50 PM\" },\n    { StartTime: \"03:00 PM\", EndTime: \"03:50 PM\" },\n    { StartTime: \"04:00 PM\", EndTime: \"04:50 PM\" },\n    { StartTime: \"05:00 PM\", EndTime: \"05:50 PM\" },\n    { StartTime: \"06:00 PM\", EndTime: \"06:50 PM\" },\n    { StartTime: \"07:00 PM\", EndTime: \"07:50 PM\" },\n  ];\n\n  const LabTimings: Timings[] = [\n    { StartTime: \"08:00 AM\", EndTime: \"08:50 AM\" },\n    { StartTime: \"08:51 AM\", EndTime: \"09:40 AM\" },\n    { StartTime: \"09:51 AM\", EndTime: \"10:40 AM\" },\n    { StartTime: \"10:41 AM\", EndTime: \"11:30 AM\" },\n    { StartTime: \"11:40 AM\", EndTime: \"12:30 PM\" },\n    { StartTime: \"12:31 PM\", EndTime: \"01:20 PM\" },\n    { StartTime: \"02:00 PM\", EndTime: \"02:50 PM\" },\n    { StartTime: \"02:51 PM\", EndTime: \"03:40 PM\" },\n    { StartTime: \"03:51 PM\", EndTime: \"04:40 PM\" },\n    { StartTime: \"04:41 PM\", EndTime: \"05:30 PM\" },\n    { StartTime: \"05:40 PM\", EndTime: \"06:30 PM\" },\n    { StartTime: \"06:31 PM\", EndTime: \"07:20 PM\" },\n  ];\n\n  const timetable = timeTable?.timetable || [];\n  const finalTimetable: Course[] = [];\n  for (let i = 0; i \u003c timetable.length; i++) {\n    const table:Course = {\n      name: timetable[i].name,\n      code: timetable[i].code,\n      venue: timetable[i].venue,\n      slot: timetable[i].slot,\n      type: timetable[i].type,\n      start_time: null,\n      end_time: null,\n    }\n    const slots = table.slot;\n    const type = table.type;\n    const slot = TimeTableSlots[day][type];\n    console.log(table, \"table\");\n    if (slot.includes(slots)) {\n      if(type === \"Theory\"){\n        console.log(slot.indexOf(slots), \"start time\")\n        table.start_time = TheoryTimings[slot.indexOf(slots)].StartTime;\n        table.end_time = TheoryTimings[slot.indexOf(slots)].EndTime;\n      }\n      else{\n        table.start_time = LabTimings[slot.indexOf(slots)].StartTime;\n        table.end_time = LabTimings[slot.indexOf(slots)].EndTime;\n      }\n      finalTimetable.push(table);\n    }\n  }\n\n  return finalTimetable;\n}\n"
    },
    {
      "id": 12,
      "name": "vite-env.d.ts",
      "category": "file",
      "path": "vitty/src/vite-env.d.ts",
      "content": "/// \u003creference types=\"vite/client\" /\u003e\n"
    },
    {
      "id": 13,
      "name": "Auth.tsx",
      "category": "file",
      "path": "vitty/src/components/Auth.tsx",
      "content": "/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n  getAuth,\n  getRedirectResult,\n  GoogleAuthProvider,\n  OAuthProvider,\n  signInWithPopup,\n} from 'firebase/auth';\nimport { FaApple } from 'react-icons/fa';\nimport { FcGoogle } from 'react-icons/fc';\n\nconst Auth = () =\u003e {\n  const auth = getAuth();\n  const googleProvider = new GoogleAuthProvider();\n  const appleProvider = new OAuthProvider('apple.com');\n  appleProvider.addScope('email');\n  appleProvider.addScope('name');\n  const logIn = (auth: any, provider: any) =\u003e {\n    void signInWithPopup(auth, provider);\n    getRedirectResult(auth)\n      .then((result) =\u003e {\n        if (result !== null) {\n          localStorage.setItem('uuid', result.user.uid);\n        }\n      })\n      .catch((error) =\u003e {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        const email = error.email;\n        console.log(errorCode, errorMessage, email);\n      });\n  };\n\n  return (\n    \u003cdiv className=\"flex flex-col justify-center items-center z-[4]\"\u003e\n      \u003ch1 className=\"hidden text-[2rem] font-semibold md:flex mb-10\"\u003e\n        Welcome to VITTY\n      \u003c/h1\u003e\n      \u003cdiv className=\"m-2\"\u003e\n        \u003cbutton\n          className=\"bg-white text-black w-60 rounded-md outline-none my-1 py-3 px-4 font-medium flex justify-center items-center hover:cursor-pointer hover:scale-[1.01]\"\n          onClick={() =\u003e logIn(auth, googleProvider)}\n        \u003e\n          \u003cFcGoogle className=\"text-2xl mr-3\" /\u003e\n          Sign in with Google\n        \u003c/button\u003e\n      \u003c/div\u003e\n      \u003cdiv className=\"m-2 z-[5]\"\u003e\n        \u003cbutton\n          className=\"bg-white text-black w-60 rounded-md outline-none my-1 py-3 px-4 font-medium flex justify-center items-center hover:cursor-pointer hover:scale-[1.01]\"\n          onClick={() =\u003e logIn(auth, appleProvider)}\n        \u003e\n          \u003cFaApple className=\"text-2xl mr-3\" /\u003e\n          Sign in with Apple\n        \u003c/button\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n  );\n};\n\nexport default Auth;\n",
      "dependencies": [
        "react-icons/fa",
        "react-icons/fc"
      ]
    },
    {
      "id": 14,
      "name": "Course.tsx",
      "category": "file",
      "path": "vitty/src/components/Course.tsx",
      "content": "import { FaEdit, FaMapMarkerAlt } from \"react-icons/fa\";\nimport { Course } from \"../store/authStore\";\n\nexport default function CourseCard({\n  Courses,\n  setModalSlot,\n  setShowModal,\n  setModalStatus,\n}: {\n  Courses: Course[] | null;\n  setModalSlot: (slot: string) =\u003e void;\n  setShowModal: (show: boolean) =\u003e void;\n  setModalStatus: (status: string) =\u003e void;\n}) {\n  const slots: Course[] = Courses || [];\n\n  const onClickEdit = (slot: string): void =\u003e {\n    setModalSlot(slot);\n    setShowModal(true);\n    setModalStatus(\"remove\");\n  };\n\n  return (\n    \u003cdiv className='course-wrapper'\u003e\n      {\n        slots.map((course: Course) =\u003e {\n          return (\n            \u003cdiv key={course.slot} className='course'\u003e\n              \u003cdiv className='course-deets'\u003e\n                \u003cdiv className='course-name'\u003e{course.name}\u003c/div\u003e\n                \u003cdiv className='course-time'\u003e\n                  {course.start_time} - {course.end_time}\n                \u003c/div\u003e\n                \u003cdiv className='course-slot-loc'\u003e\n                  \u003cdiv className='course-slot'\u003e{course.slot}\u003c/div\u003e\n                  \u003cdiv className='course-loc'\u003e{course.venue} \u003cFaMapMarkerAlt /\u003e\u003c/div\u003e\n                \u003c/div\u003e\n              \u003c/div\u003e\n              \u003cdiv className='course-edit' onClick={() =\u003e onClickEdit(course.slot)}\u003e\u003cFaEdit /\u003e\u003c/div\u003e\n            \u003c/div\u003e\n          )\n        })\n      }\n    \u003c/div\u003e\n  );\n}\n",
      "dependencies": [
        "react-icons/fa"
      ]
    },
    {
      "id": 15,
      "name": "Loader.tsx",
      "category": "file",
      "path": "vitty/src/components/Loader.tsx",
      "content": "import React from 'react'\nimport './../styles/Loader.css'\n\nconst Loader: React.FC = () =\u003e {\n  return (\n    \u003cdiv className='loader-wrapper'\u003e\n      \u003cdiv className='loader' /\u003e\n    \u003c/div\u003e\n  )\n}\n\nexport default Loader\n",
      "dependencies": [
        "react"
      ]
    },
    {
      "id": 16,
      "name": "main.tsx",
      "category": "file",
      "path": "vitty/src/main.tsx",
      "content": "import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App.tsx'\nimport './styles/index.css'\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  \u003cReact.StrictMode\u003e\n    \u003cApp /\u003e\n  \u003c/React.StrictMode\u003e,\n)\n",
      "dependencies": [
        "react",
        "react-dom/client"
      ]
    },
    {
      "id": 17,
      "name": "Template.tsx",
      "category": "file",
      "path": "vitty/src/pages/Template.tsx",
      "content": "import React from \"react\";\nimport Navbar from \"../components/Nav\";\nimport EllipseTR from \"../assets/ellipse_tr.png\";\nimport EllipseBL from \"../assets/ellipse_bl.png\";\n\ninterface TemplateProps {\n  children: React.ReactNode;\n}\n\nconst Template: React.FC\u003cTemplateProps\u003e = ({ children }) =\u003e {\n  return (\n    \u003c\u003e\n      \u003cdiv className=\"fixed overflow-hidden opacity-50 ellipse ellipse-tr right-0\"\u003e\n        \u003cimg\n          className=\"w-72 overflow-hidden md:w-[35vw]\"\n          src={EllipseTR}\n          alt=\"Vitty\"\n        /\u003e\n      \u003c/div\u003e\n      \u003cdiv className=\"fixed overflow-hidden opacity-50 ellipse ellipse-bl bottom-0 -left-8\"\u003e\n        \u003cimg\n          className=\"w-72 overflow-hidden md:w-[35vw]\"\n          src={EllipseBL}\n          alt=\"Vitty\"\n        /\u003e\n      \u003c/div\u003e\n      \u003cNavbar /\u003e\n      \u003cdiv className=\"h-auto w-auto mt-[96px] bg-[#041727]\"\u003e{children}\u003c/div\u003e\n    \u003c/\u003e\n  );\n};\n\nexport default Template;\n",
      "dependencies": [
        "react"
      ]
    },
    {
      "id": 18,
      "name": "login.tsx",
      "category": "file",
      "path": "vitty/src/pages/login.tsx",
      "content": "import HomeCarousal from \"../components/HomeCarousal\";\nimport Auth from \"../components/Auth\";\n\nexport default function Login() {\n  return (\n    \u003cdiv className=\"mt-8 pb-8 flex flex-col items-center justify-around md:flex-row\"\u003e\n      \u003cHomeCarousal /\u003e\n      \u003cAuth /\u003e\n    \u003c/div\u003e\n  );\n}\n"
    },
    {
      "id": 19,
      "name": "apicalls.tsx",
      "category": "file",
      "path": "vitty/src/utils/apicalls.tsx",
      "content": "/* eslint-disable @typescript-eslint/no-explicit-any */\nimport axios from \"axios\";\nimport { TimeTable } from \"../store/authStore\";\nimport { Course } from \"../store/authStore\";\n\nconst baseURL = \"https://vitty-api.dscvit.com\";\n\nexport const parseAndReturn = async (raw: string, apiKey: string): Promise\u003cTimeTable\u003e =\u003e {\n  // const corsProxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n  const remoteApiUrl = `${baseURL}/api/v2/timetable/parse`;\n  // const url = `${corsProxyUrl}${remoteApiUrl}`;\n  const myHeaders = {\n    contentType: \"application/json\",\n    Authorization: `Bearer ${apiKey}`,\n  };\n\n  const data = {\n    timetable: raw,\n  };\n\n  try {\n    const response = await axios.post(remoteApiUrl, data, { headers: myHeaders });\n    return response.data;\n  } catch (e) {\n    return { timetable: null };\n  }\n};\n\nexport const checkUserExists = async (username: string): Promise\u003cany\u003e =\u003e {\n  const myHeaders = {\n    \"Content-Type\": \"application/json\",\n  };\n\n  const data = {\n    uuid: username,\n  };\n\n  try {\n    const response = await axios.post(\n      baseURL + \"/api/v2/auth/check-user-exists\",\n      data,\n      {\n        headers: myHeaders,\n      }\n    );\n    return response.data;\n  } catch (e: Error | any) {\n    if (e.response?.status === 400) {\n      return e.response?.data;\n    } else {\n      console.log(e);\n      return {};\n    }\n  }\n};\n\nexport const uploadText = async (\n  raw: Course[] | null,\n  apiKey: string,\n  username: string\n): Promise\u003cany\u003e =\u003e {\n  // const corsProxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n  const remoteApiUrl = `${baseURL}/api/v2/timetable/${username.toLowerCase()}`;\n  // const url = `${corsProxyUrl}${remoteApiUrl}`;\n\n  const myHeaders = {\n    Authorization: `Bearer ${apiKey}`,\n  };\n\n  const data = {\n    timetable: raw,\n  };\n\n  try {\n    const response = await axios.post(remoteApiUrl, data, {\n      headers: myHeaders,\n    });\n    console.log(response.data, \"from uploadText\");\n    return response.data;\n  } catch (e) {\n    return { error: e };\n  }\n};\n\nexport const isAvailable = async (username: string): Promise\u003cany\u003e =\u003e {\n  const myHeaders = {\n    \"Content-Type\": \"application/json\",\n  };\n\n  const data = {\n    username: username,\n  };\n\n  try {\n    const response = await axios.post(\n      baseURL + \"/api/v2/auth/check-username\",\n      data,\n      {\n        headers: myHeaders,\n      }\n    );\n    return response.data;\n  } catch (e) {\n    if (axios.isAxiosError(e) \u0026\u0026 e.response?.status === 400) {\n      return e.response?.data ?? { error: e };\n    } else {\n      console.log(e);\n      return {};\n    }\n  }\n};\n\nexport const getTimetable = async (\n  username: string,\n  apiKey: string\n): Promise\u003cany\u003e =\u003e {\n  const remoteApiUrl = `${baseURL}/api/v2/timetable/${username}`;\n  console.log(apiKey);\n  const headers = {\n    Authorization: `Token ${apiKey}`,\n  };\n\n  try {\n    const response = await axios.get(remoteApiUrl, { headers: headers });\n    const data = response.data;\n    console.log(\"gettimetable data\");\n    console.log(data);\n    if (data === null) {\n      return \"empty timetable\";\n    } else {\n      return data;\n    }\n  } catch (e) {\n    console.log(e);\n    return { error: e };\n  }\n};\n\nexport const getToken = async (uuid: string): Promise\u003cany\u003e =\u003e {\n  const myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  const raw = JSON.stringify({\n    uuid: uuid,\n    // \"regNo\": regNo,\n    // \"username\": username\n  });\n\n  const requestOptions = {\n    method: \"POST\",\n    body: raw,\n    headers: myHeaders,\n    redirect: \"follow\",\n  };\n\n  try {\n    const response = await fetch(\n      baseURL + \"/api/v2/auth/firebase/\",\n      requestOptions as any\n    );\n    const data = await response.json();\n    return data;\n  } catch (e) {\n    console.log(e);\n    return { e };\n  }\n};\n\nexport const signIn = async (\n  uuid: string,\n  regNo: string,\n  username: string\n): Promise\u003cany\u003e =\u003e {\n  const data = {\n    uuid: uuid,\n    reg_no: regNo,\n    username: username,\n  };\n\n  const myHeaders = {\n    \"Content-Type\": \"application/json\",\n  };\n\n  try {\n    const response = await axios.post(\n      baseURL + \"/api/v2/auth/firebase/\",\n      data,\n      { headers: myHeaders }\n    );\n    return response.data;\n  } catch (e) {\n    console.log(e);\n    return { e };\n  }\n};\n",
      "dependencies": [
        "axios"
      ]
    },
    {
      "id": 20,
      "name": "tailwind.config.js",
      "category": "file",
      "path": "vitty/tailwind.config.js",
      "content": "/** @type {import('tailwindcss').Config} */\nexport default {\n  content: [\"./index.html\", \"./src/**/*.{js,ts,jsx,tsx}\"],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n};\n"
    },
    {
      "id": 21,
      "name": "EditTimeTable.tsx",
      "category": "file",
      "path": "vitty/src/components/EditTimeTable.tsx",
      "content": "/* eslint-disable @typescript-eslint/restrict-template-expressions */\nimport React, { useEffect } from \"react\";\nimport { AiFillEdit } from \"react-icons/ai\";\nimport Phone from \"./../assets/fin.png\";\nimport Chrome from \"./../assets/chrome_store.png\";\nimport Ios from \"./../assets/app_store.svg\";\nimport { useAuthStore } from \"../store/authStore\";\nimport \"./../styles/fin.css\";\nimport { useLoadingStore } from \"../store/useLoadingStore\";\n\nconst EditTimeTable: React.FC = () =\u003e {\n  const { name, deleteTimetable } = useAuthStore();\n  const { setLoading, timetableUploadedThisSession, setTimetableUploadedThisSession } = useLoadingStore();\n  const handleClick = () =\u003e {\n    deleteTimetable();\n  };\n\n  useEffect(() =\u003e {\n    setLoading(false);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setLoading]);\n\n  useEffect(() =\u003e {\n    if (timetableUploadedThisSession) {\n      setTimeout(() =\u003e {\n        window.alert(\"Timetable uploaded successfully!\");\n      }, 1000);\n      setTimetableUploadedThisSession(false);\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    \u003cdiv className=\"fin-wrapper\"\u003e\n      \u003ch1\u003e\n        You're all set\n        {name !== \"\" \u0026\u0026 name !== undefined \u0026\u0026 name !== null\n          ? `, ${name?.split(\" \")[0]}`\n          : \"\"}\n        !\n      \u003c/h1\u003e\n      \u003cdiv className=\"fin\"\u003e\n        \u003cdiv className=\"fin-hero\"\u003e\n          \u003cimg src={Phone} alt=\"Download Vitty!\" /\u003e\n        \u003c/div\u003e\n        \u003cdiv className=\"fin-interact\"\u003e\n          \u003cdiv className=\"fin-links\"\u003e\n            \u003cp\u003eMake sure you never miss another class!\u003c/p\u003e\n            \u003ca\n              className=\"android\"\n              href=\"https://play.google.com/store/apps/details?id=com.dscvit.vitty\u0026utm_source=website\u0026utm_campaign=vitty_website\u0026pcampaignid=pcampaignidMKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1\"\n            \u003e\n              \u003cimg\n                alt=\"Get it on Google Play\"\n                src=\"https://play.google.com/intl/en_us/badges/static/images/badges/en_badge_web_generic.png\"\n              /\u003e\n            \u003c/a\u003e\n            \u003ca\n              className=\"ios\"\n              href=\"https://apps.apple.com/in/app/vitty-vit-timetable-app/id1611750267\"\n            \u003e\n              \u003cimg alt=\"Get it on Apple App Store\" src={Ios} /\u003e\n            \u003c/a\u003e\n            \u003ca href=\"https://chrome.google.com/webstore/detail/vitty/eeohmkjefmpmddidkjadpifbfcplkifh\"\u003e\n              \u003cimg alt=\"Get it on Chrome Web Store\" src={Chrome} /\u003e\n            \u003c/a\u003e\n\n            {/* \u003ca href='https://play.google.com/store/apps/details?id=com.dscvit.vitty'\u003e\u003cDiAndroid /\u003e Get it on the Play Store\u003c/a\u003e\n            \u003ca className='disabled' href='/'\u003e\u003cFaAppStoreIos /\u003e Get it on the App Store (coming soon)\u003c/a\u003e\n            \u003ca href='https://chrome.google.com/webstore/detail/vitty/eeohmkjefmpmddidkjadpifbfcplkifh'\u003e\u003cFaChrome /\u003e Get it on the Chrome Web Store\u003c/a\u003e */}\n          \u003c/div\u003e\n          \u003cbutton className=\"fin-edit\" onClick={handleClick}\u003e\n            \u003cAiFillEdit /\u003e\n            Edit Timetable\n          \u003c/button\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n  );\n};\n\nexport default EditTimeTable;\n",
      "dependencies": [
        "react",
        "react-icons/ai",
        "https://play.google.com/intl/en_us/badges/static/images/badges/en_badge_web_generic.png"
      ]
    },
    {
      "id": 22,
      "name": "ReviewTimeTable.tsx",
      "category": "file",
      "path": "vitty/src/components/ReviewTimeTable.tsx",
      "content": "import { useAuthStore, Course } from \"../store/authStore\";\nimport ParseAndReturn from \"../utils/ParseAndReturn\";\nimport { useEffect, useState } from \"react\";\nimport CourseCard from \"./Course\";\nimport \"../styles/review.css\";\nimport { useTimeTableStore } from \"../store/TimeTableStore\";\nimport { uploadText } from \"../utils/apicalls\";\nimport Modal from \"./Modal\";\nimport \"./../styles/Modal.css\";\nimport { useLoadingStore } from \"../store/useLoadingStore\";\n// import { useLoadingStore } from \"../store/useLoadingStore\";\n\nexport default function ReviewTimeTable() {\n  const { setReview, token, username, uploadTimetable } = useAuthStore();\n  const { timetable } = useTimeTableStore();\n  const { setTimetableUploadedThisSession } = useLoadingStore();\n  const [classes, setClasses] = useState\u003cCourse[] | null\u003e(null);\n  // const [sortedClasses, setSortedClasses] = useState\u003cCourse[] | null\u003e(null);\n  const [day, setDay] = useState\u003cstring\u003e(\"Monday\");\n  const [showModal, setShowModal] = useState\u003cboolean\u003e(false);\n  const [modalSlot, setModalSlot] = useState\u003cstring\u003e(\"\");\n  const [modalStatus, setModalStatus] = useState\u003cstring\u003e(\"\");\n\n  const fetchData = async () =\u003e {\n    const classes: Course[] = ParseAndReturn(timetable, day);\n    const sortedClasses = classes.sort((a, b) =\u003e {\n      const aTime = convertTo24HourFormat(a.start_time || \"00:00\");\n      const bTime = convertTo24HourFormat(b.start_time || \"00:00\");\n      return aTime.localeCompare(bTime);\n    });\n    setClasses(sortedClasses);\n  };\n  \n  useEffect(() =\u003e {\n    document.title = \"VITTY | Review\";\n    fetchData();\n    console.log(day, \"day\");\n    console.log(timetable, \"timetable\");\n    // ...\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [timetable, day]);\n  \n  function convertTo24HourFormat(time: string): string {\n    const [hour, minute, period] = time.split(/:| /);\n    let hour24 = parseInt(hour, 10);\n\n    if (period === \"PM\" \u0026\u0026 hour24 \u003c 12) {\n      hour24 += 12;\n    } else if (period === \"AM\" \u0026\u0026 hour24 === 12) {\n      hour24 = 0;\n    }\n\n    return `${hour24.toString().padStart(2, \"0\")}:${minute}`;\n  }\n\n\n  const handleConfirm = (e: React.BaseSyntheticEvent): void =\u003e {\n    e.preventDefault();\n    if (timetable === null) {\n      alert(\"Please upload the timetable first!\");\n      return;\n    } else {\n      // console.log(timetable.timetable, \"timetable from upload section\");\n      uploadText(timetable.timetable, token, username || \"\")\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .then((res: any) =\u003e {\n          console.log(res, \"upload text\");\n          if (res.data.detail !== null) {\n            uploadTimetable(res.data);\n            // useLoadingStore.getState().setLoading(true);\n            setTimetableUploadedThisSession(true);\n          } else {\n            alert(\"upload failed\");\n          }\n        })\n        .catch((error: Error) =\u003e {\n          console.error(\"Error uploading timetable:\", error);\n        });\n      setReview(false);\n    }\n  };\n\n  return (\n    \u003c\u003e\n      \u003cdiv className=\"review-wrapper\"\u003e\n        \u003ch1\u003eReview Timetable\u003c/h1\u003e\n        \u003cdiv className=\"review\"\u003e\n          \u003cdiv className=\"review-block\"\u003e\n            \u003cdiv className=\"days\"\u003e\n              \u003cdiv\n                className={`day ${day === \"Monday\" ? \"active\" : \"\"}`}\n                onClick={() =\u003e {\n                  setDay(\"Monday\");\n                }}\n              \u003e\n                Mon\n              \u003c/div\u003e\n              \u003cdiv\n                className={`day ${day === \"Tuesday\" ? \"active\" : \"\"}`}\n                onClick={() =\u003e {\n                  setDay(\"Tuesday\");\n                }}\n              \u003e\n                Tue\n              \u003c/div\u003e\n              \u003cdiv\n                className={`day ${day === \"Wednesday\" ? \"active\" : \"\"}`}\n                onClick={() =\u003e {\n                  setDay(\"Wednesday\");\n                }}\n              \u003e\n                Wed\n              \u003c/div\u003e\n              \u003cdiv\n                className={`day ${day === \"Thursday\" ? \"active\" : \"\"}`}\n                onClick={() =\u003e {\n                  setDay(\"Thursday\");\n                }}\n              \u003e\n                Thu\n              \u003c/div\u003e\n              \u003cdiv\n                className={`day ${day === \"Friday\" ? \"active\" : \"\"}`}\n                onClick={() =\u003e {\n                  setDay(\"Friday\");\n                }}\n              \u003e\n                Fri\n              \u003c/div\u003e\n              \u003cdiv\n                className={`day ${day === \"Saturday\" ? \"active\" : \"\"}`}\n                onClick={() =\u003e {\n                  setDay(\"Saturday\");\n                }}\n              \u003e\n                Sat\n              \u003c/div\u003e\n              \u003cdiv\n                className={`day ${day === \"Sunday\" ? \"active\" : \"\"}`}\n                onClick={() =\u003e {\n                  setDay(\"Sunday\");\n                }}\n              \u003e\n                Sun\n              \u003c/div\u003e\n            \u003c/div\u003e\n            \u003cCourseCard\n              Courses={classes}\n              setShowModal={setShowModal}\n              setModalSlot={setModalSlot}\n              setModalStatus={setModalStatus}\n            /\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cbutton\n          className=\"review-add\"\n          onClick={() =\u003e {\n            setShowModal(true);\n            setModalStatus(\"add\");\n          }}\n        \u003e\n          Add Slot\n        \u003c/button\u003e\n        \u003cbutton className=\"review-confirm\" onClick={handleConfirm}\u003e\n          Confirm\n        \u003c/button\u003e\n      \u003c/div\u003e\n      {showModal \u0026\u0026\n        \u003cModal\n          onClose={() =\u003e setShowModal(false)}\n          // getActive={day}\n          // resetActive={setDay}\n          slot={modalSlot}\n          status={modalStatus}\n        /\u003e}\n    \u003c/\u003e\n  );\n}\n",
      "dependencies": [
        "react"
      ]
    },
    {
      "id": 23,
      "name": "authStore.tsx",
      "category": "file",
      "path": "vitty/src/store/authStore.tsx",
      "content": "import { create } from \"zustand\";\n\nexport interface Course {\n  name: string;\n  code: string;\n  venue: string;\n  slot: string;\n  type: string;\n  start_time: string | null;\n  end_time: string | null;\n}\n\nexport interface TimeTable {\n  timetable: Course[] | null;\n}\n\ninterface AuthStore {\n  uuid: string;\n  isLoggedIn: boolean;\n  profile: string;\n  username: string | null;\n  name: string;\n  email: string;\n  token: string;\n  review: boolean;\n  timetable: TimeTable | null;\n  regNo: string;\n  uploadTimetable: (timetable: TimeTable) =\u003e void;\n  deleteTimetable: () =\u003e void;\n  setReview: (data: boolean) =\u003e void;\n  login: (uuid: string, profile: string, name: string, email: string) =\u003e void;\n  logout: () =\u003e void;\n  updateUsername: (username: string) =\u003e void;\n  updateToken: (token: string) =\u003e void;\n  updateRegNo: (regNo: string) =\u003e void;\n  initializeFromLocalStorge: () =\u003e void;\n}\n\nexport const useAuthStore = create\u003cAuthStore\u003e((set) =\u003e ({\n  uuid: \"\",\n  isLoggedIn: false,\n  profile: \"\",\n  username: null,\n  email: \"\",\n  review: false,\n  name: \"\",\n  token: \"\",\n  timetable: null,\n  regNo: \"\",\n  uploadTimetable: (data) =\u003e {\n    set(() =\u003e ({\n      timetable: data\n    }));\n  },\n  deleteTimetable: () =\u003e {\n    set(() =\u003e ({\n      timetable: null,\n    }));\n  },\n  updateRegNo: (regNo) =\u003e {\n    set(() =\u003e ({\n      regNo,\n    }));\n  },\n  login: (uuid, profile, name, email) =\u003e\n    set(() =\u003e ({\n      uuid,\n      isLoggedIn: true,\n      profile,\n      name,\n      email,\n    })),\n  logout: () =\u003e {\n    set(() =\u003e ({\n      uuid: \"\",\n      isLoggedIn: false,\n      profile: \"\",\n      username: null,\n      email: \"\",\n      name: \"\",\n      token: \"\",\n      timetable: null,\n      regNo: \"\",\n    }));\n    localStorage.clear();\n  },\n  setReview: (review: boolean) =\u003e {\n    set(() =\u003e ({\n      review: review,\n    }));\n  },\n  updateUsername: (username: string) =\u003e {\n    set(() =\u003e ({\n      username,\n    }));\n  },\n  updateToken: (token: string) =\u003e {\n    set(() =\u003e ({\n      token,\n    }));\n  },\n  initializeFromLocalStorge: () =\u003e {\n    const uuid = localStorage.getItem(\"uuid\");\n    const profile = localStorage.getItem(\"profile\");\n    const username = localStorage.getItem(\"username\");\n    const email = localStorage.getItem(\"email\");\n    if (uuid \u0026\u0026 profile \u0026\u0026 username \u0026\u0026 email) {\n      set(() =\u003e ({\n        uuid,\n        isLoggedIn: true,\n        profile,\n        username,\n        email,\n      }));\n    }\n  },\n}));\n",
      "dependencies": [
        "zustand"
      ]
    },
    {
      "id": 24,
      "name": "vite.config.ts",
      "category": "file",
      "path": "vitty/vite.config.ts",
      "content": "import { defineConfig } from 'vite'\nimport react from '@vitejs/plugin-react'\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  plugins: [react()],\n})\n",
      "dependencies": [
        "vite",
        "@vitejs/plugin-react"
      ]
    },
    {
      "id": 25,
      "name": "postcss.config.js",
      "category": "file",
      "path": "vitty/postcss.config.js",
      "content": "export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n"
    },
    {
      "id": 26,
      "name": "App.tsx",
      "category": "file",
      "path": "vitty/src/App.tsx",
      "content": "/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useEffect } from \"react\";\nimport LoginPage from \"./pages/login\";\nimport Template from \"./pages/Template\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport Dashboard from \"./pages/Dashboard\";\nimport Loader from \"./components/Loader\";\nimport { useAuthStore } from \"./store/authStore\";\nimport Profile from \"./components/Profile\";\nimport { useShowProfileStore } from \"./store/profileStore\";\nimport { useLoadingStore } from \"./store/useLoadingStore\";\n\nconst App: React.FC = () =\u003e {\n  const firebaseConfig = {\n    apiKey: \"AIzaSyCm61E2xdQgQJGaOupsnEiARFhk2FNmub4\",\n    authDomain: \"vitty-dscvit.firebaseapp.com\",\n    projectId: \"vitty-dscvit\",\n    storageBucket: \"vitty-dscvit.appspot.com\",\n    messagingSenderId: \"272763363329\",\n    appId: \"1:272763363329:web:03c63b25f47d2414e2e000\",\n    measurementId: \"G-8KRDV5SK87\",\n  };\n\n  initializeApp(firebaseConfig);\n  const { initializeFromLocalStorge, login, isLoggedIn, name } = useAuthStore();\n  const { showProfile } = useShowProfileStore();\n  const { isLoading } = useLoadingStore();\n  const uuid = localStorage.getItem(\"uuid\") || \"\";\n  useEffect(() =\u003e {\n    const auth = getAuth();\n    onAuthStateChanged(auth, (user1) =\u003e {\n      console.log(user1, \"user1\");\n      if (user1 !== null) {\n        console.log(user1);\n        localStorage.setItem(\"uuid\", user1.uid || \"\");\n        localStorage.setItem(\"profile\", user1.photoURL || \"\");\n        localStorage.setItem(\"name\", user1.displayName || \"\");\n        localStorage.setItem(\"email\", user1.email || \"\");\n        login(\n          user1.uid,\n          user1.photoURL || \"\",\n          user1.displayName || \"\",\n          user1.email || \"\"\n        );\n      } else {\n        localStorage.setItem(\"name\", \"\");\n        initializeFromLocalStorge();\n        console.log(\"user is null from app.tsx\");\n      }\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isLoggedIn, login]);\n\n  useEffect(() =\u003e {\n    initializeFromLocalStorge();\n  }, [initializeFromLocalStorge]);\n\n  useEffect(() =\u003e {\n    document.title = \"VITTY\";\n  }, []);\n\n  return (\n    \u003cTemplate\u003e\n      {isLoading ? (\n        \u003cLoader /\u003e\n      ) : uuid === \"\" ? (\n        \u003cLoginPage /\u003e\n      ) : name === \"\" ? (\n        \u003cLoader /\u003e\n      ) : (\n        \u003cDashboard /\u003e\n      )}\n      {showProfile \u0026\u0026 \u003cProfile /\u003e}\n    \u003c/Template\u003e\n  );\n};\n\nexport default App;\n",
      "dependencies": [
        "react",
        "firebase/app",
        "firebase/auth"
      ]
    },
    {
      "id": 27,
      "name": "Nav.tsx",
      "category": "file",
      "path": "vitty/src/components/Nav.tsx",
      "content": "/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useContext, useEffect, useState } from 'react'\nimport { getAuth, signOut } from 'firebase/auth'\nimport VTLogo from './../assets/landing_logo.png'\nimport userIcon from './../assets/icon.png'\nimport './../styles/Nav.css'\nimport { useAuthStore } from '../store/authStore'\nimport { useShowProfileStore } from '../store/profileStore'\n\nconst Nav: React.FC = () =\u003e {\n\n  const [text, setText] = useState('Sign In');\n  const { name, profile, email, logout } = useAuthStore()\n  const { toggleProfile, showProfile } = useShowProfileStore()\n  const user = name;\n  const pic = profile;\n  const logOut = (): void =\u003e {\n    const auth = getAuth()\n    signOut(auth).then(() =\u003e {\n      localStorage.clear()\n      logout()\n    }).catch((error) =\u003e {\n      console.error(error)\n    })\n  }\n\n  const toggle = (): void =\u003e {\n    toggleProfile()\n    console.log(showProfile, \"profile\");\n  }\n\n  useEffect(() =\u003e {\n    if (user !== '' \u0026\u0026 user !== 'loading') setText('Sign Out')\n  }, [user])\n\n  return (\n    \u003cheader\u003e\n      \u003cdiv className='logo'\u003e\n        \u003cimg src={VTLogo} alt='VITTY' /\u003e\n        {/* \u003cimg src={Logo} alt='VITTY' /\u003e */}\n      \u003c/div\u003e\n      {\n        user !== null \u0026\u0026 user !== '' \u0026\u0026 user !== 'loading' \u0026\u0026\n          \u003cdiv className='user-pfp' onClick={toggle} \u003e\n            \u003cimg src={(pic !== null \u0026\u0026 pic !== '') ? pic : userIcon} alt='DP' /\u003e\n          \u003c/div\u003e\n      }\n      {/* \u003cdiv className='nav-right'\u003e\n        \u003cdiv className='sign-out' onClick={() =\u003e logOut()}\u003e{text}\u003c/div\u003e\n      \u003c/div\u003e */}\n    \u003c/header\u003e\n  )\n}\n\nexport default Nav\n",
      "dependencies": [
        "react",
        "firebase/auth"
      ]
    },
    {
      "id": 28,
      "name": "react",
      "category": "library"
    },
    {
      "id": 29,
      "name": "firebase/app",
      "category": "dependency"
    },
    {
      "id": 30,
      "name": "firebase/auth",
      "category": "dependency"
    },
    {
      "id": 31,
      "name": "/copying_timetable.gif",
      "category": "dependency"
    },
    {
      "id": 32,
      "name": "zustand",
      "category": "library"
    },
    {
      "id": 33,
      "name": "react-router-dom",
      "category": "library"
    },
    {
      "id": 34,
      "name": "react-responsive-carousel",
      "category": "library"
    },
    {
      "id": 35,
      "name": "react-responsive-carousel/lib/styles/carousel.min.css",
      "category": "dependency"
    },
    {
      "id": 36,
      "name": "react-icons/fa",
      "category": "dependency"
    },
    {
      "id": 37,
      "name": "react-icons/fc",
      "category": "dependency"
    },
    {
      "id": 38,
      "name": "react-dom/client",
      "category": "dependency"
    },
    {
      "id": 39,
      "name": "axios",
      "category": "library"
    },
    {
      "id": 40,
      "name": "react-icons/ai",
      "category": "dependency"
    },
    {
      "id": 41,
      "name": "https://play.google.com/intl/en_us/badges/static/images/badges/en_badge_web_generic.png",
      "category": "dependency"
    },
    {
      "id": 42,
      "name": "vite",
      "category": "library"
    },
    {
      "id": 43,
      "name": "@vitejs/plugin-react",
      "category": "library"
    }
  ],
  "links": [
    {
      "source": 27,
      "target": 28,
      "relation": "depends"
    },
    {
      "source": 27,
      "target": 30,
      "relation": "depends"
    },
    {
      "source": 0,
      "target": 28,
      "relation": "depends"
    },
    {
      "source": 0,
      "target": 31,
      "relation": "depends"
    },
    {
      "source": 1,
      "target": 28,
      "relation": "depends"
    },
    {
      "source": 2,
      "target": 28,
      "relation": "depends"
    },
    {
      "source": 3,
      "target": 32,
      "relation": "depends"
    },
    {
      "source": 4,
      "target": 32,
      "relation": "depends"
    },
    {
      "source": 5,
      "target": 28,
      "relation": "depends"
    },
    {
      "source": 6,
      "target": 30,
      "relation": "depends"
    },
    {
      "source": 6,
      "target": 33,
      "relation": "depends"
    },
    {
      "source": 7,
      "target": 34,
      "relation": "depends"
    },
    {
      "source": 7,
      "target": 35,
      "relation": "depends"
    },
    {
      "source": 8,
      "target": 28,
      "relation": "depends"
    },
    {
      "source": 9,
      "target": 28,
      "relation": "depends"
    },
    {
      "source": 9,
      "target": 36,
      "relation": "depends"
    },
    {
      "source": 9,
      "target": 30,
      "relation": "depends"
    },
    {
      "source": 10,
      "target": 32,
      "relation": "depends"
    },
    {
      "source": 13,
      "target": 36,
      "relation": "depends"
    },
    {
      "source": 13,
      "target": 37,
      "relation": "depends"
    },
    {
      "source": 14,
      "target": 36,
      "relation": "depends"
    },
    {
      "source": 15,
      "target": 28,
      "relation": "depends"
    },
    {
      "source": 16,
      "target": 28,
      "relation": "depends"
    },
    {
      "source": 16,
      "target": 38,
      "relation": "depends"
    },
    {
      "source": 17,
      "target": 28,
      "relation": "depends"
    },
    {
      "source": 19,
      "target": 39,
      "relation": "depends"
    },
    {
      "source": 21,
      "target": 28,
      "relation": "depends"
    },
    {
      "source": 21,
      "target": 40,
      "relation": "depends"
    },
    {
      "source": 21,
      "target": 41,
      "relation": "depends"
    },
    {
      "source": 22,
      "target": 28,
      "relation": "depends"
    },
    {
      "source": 23,
      "target": 32,
      "relation": "depends"
    },
    {
      "source": 24,
      "target": 42,
      "relation": "depends"
    },
    {
      "source": 24,
      "target": 43,
      "relation": "depends"
    },
    {
      "source": 26,
      "target": 28,
      "relation": "depends"
    },
    {
      "source": 26,
      "target": 29,
      "relation": "depends"
    },
    {
      "source": 26,
      "target": 30,
      "relation": "depends"
    }
  ],
  "language": "javascript"
}